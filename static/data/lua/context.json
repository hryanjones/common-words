[{"word":"0x00","context":[["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916],["0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",2916]]},{"word":"0xff","context":[["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,",115],["0x00,0x40,0x40,0x40,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,",105],["0x00,0x40,0x40,0x40,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,",105],["0x00,0x40,0x40,0x40,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,",105],["0x00,0x40,0x40,0x40,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,",105]]},{"word":"36mNot","context":[["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["print('\\27[36mNot valid: Encrypted chat\\27[39m')",2721],["print('\\27[36mNot valid: From id not provided\\27[39m')",2721],["print('\\27[36mNot valid: readed\\27[39m')",2721],["print('\\27[36mNot valid: old msg\\27[39m')",2718],["print('\\27[36mNot valid: Msg from our id\\27[39m')",2619],["print('\\27[36mNot valid: msg from us\\27[39m')",2617],["print('\\27[36mNot valid: Telegram message\\27[39m')",676],["--    print('\\27[36mNot valid: msg from us\\27[39m')",85],["--    print('\\27[36mNot valid: Msg from our id\\27[39m')",85]]},{"word":"39m","context":[["print('\\27[31m'..err..'\\27[39m')",2756],["print('\\27[36mNot valid: Encrypted chat\\27[39m')",2721],["print('\\27[36mNot valid: From id not provided\\27[39m')",2721],["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["print('\\27[36mNot valid: readed\\27[39m')",2721],["print('\\27[36mNot valid: old msg\\27[39m')",2718],["print('\\27[31mError loading plugin '..v..'\\27[39m')",2716],["print('\\27[36mNot valid: Msg from our id\\27[39m')",2619],["print('\\27[36mNot valid: msg from us\\27[39m')",2617],["print('\\27[36mNot valid: Telegram message\\27[39m')",676]]},{"word":"3rdparty","context":[["MAME_DIR .. \"3rdparty\",",220],["path.join(BGFX_DIR, \"3rdparty\"),",55],["require \"turbo.3rdparty.middleclass\"",43],["MAME_DIR .. \"3rdparty/libuv/src/unix/proctitle.c\",",39],["MAME_DIR .. \"3rdparty/bgfx/3rdparty/khronos\",",36],["MAME_DIR .. \"3rdparty/bgfx/3rdparty/khronos\",",36],["MAME_DIR .. \"3rdparty/libuv/src/unix/kqueue.c\",",35],["MAME_DIR .. \"3rdparty/bx/include/compat/freebsd\",",34],["MAME_DIR .. \"3rdparty/bx/include\",",30],["MAME_DIR .. \"3rdparty/bgfx/include\",",28]]},{"word":"A","context":[["-- A simple config with basic plugins and ourselves as privileged user",2852],["await A;",1129],["--         Stratagus - A free fantasy real time strategy game engine",714],["--                        T H E   W A R   B E G I N S",714],["-- @return A boolean value for the result of the comparison.",503],["-- Love Frames - A GUI library for LOVE --",498],["input int A;",472],["-- Skill Level: N/A",367],["ENT.Author\t\t\t= \"H.A.Z.G\"",283],["local output = mm:forward({A, B})",210]]},{"word":"Action","context":[["-- onTrigger Action",24378],["-- onTrade Action",23612],["-- onMobSpawn Action",6046],["-- onEffectLose Action",5651],["-- onEffectGain Action",5647],["-- onEventFinish Action",2111],["-- onEffectTick Action",1487],["-- onMobFight Action",1294],["-- onMobInitialize Action",1093],["-- onAdditionalEffect Action",849]]},{"word":"Add","context":[["-- Add to the config table",392],["--Function to Add supergroup",280],["sound.Add( {",261],["--Check members #Add supergroup",204],["sound.Add({",194],["-- TODO: Add code to check all progress",175],["hook.Add(\"InitPostEntityMap\", \"Adding\", function()",172],["-- Add a lasting map effect",130],["chat_add_user(chat, user, ok_cb, false) -- Add user on chat",114],["return Add(cards,PRIO_TOGRAVE)",113]]},{"word":"All","context":[["world            = [[All Worlds]],",1065],["-- Food Effect: 30Min, All Races",821],["local msg_type = 'All'",677],["world = \"All Worlds\",",525],["-- Food Effect: 5Min, All Races",468],["-- Food Effect: 60Min, All Races",429],["-- Food Effect: 180Min, All Races",422],["-- All clients will match this rule.",385],["-- Food Effect: 240Min, All Races",260],["-- Food Effect: 3Hrs, All Races",112]]},{"word":"Area","context":[["-- Area: Aht Urhgan Whitegate",675],["-- Area: Northern San d'Oria",609],["-- Area: Lower Jeuno",576],["-- Area: Port Bastok",518],["-- Area: Southern San d'Oria",461],["-- Area: Metalworks",457],["-- Area: Dynamis Xarcabard",444],["-- Area: Bastok Mines",413],["-- Area: Upper Jeuno",413],["-- Area: Port Jeuno",402]]},{"word":"Author","context":[["Author(s): LiXizhi",813],["--  Author........... :",485],["-- ## Author: Noneatme\t\t\t\t\t##",394],["-- Author: Diego Nehab",284],["ENT.Author\t\t\t= \"H.A.Z.G\"",283],["* Author: X-Raym",219],["* Author URI: http://extremraym.com",212],["$Author: brpreiss $",137],["Author: Noya",137],["-- Author: Craig Mason-Jones",115]]},{"word":"B","context":[["--                        T H E   W A R   B E G I N S",714],["await B;",534],["[\"B\"] = 0,",472],["[\"B\"] = 1,",218],["mytester:assertTableEq(gradB:size():totable(), B:size():totable(),",210],["local output = mm:forward({A, B})",210],["local gradInput = mm:backward({A, B}, gradOutput)",210],["'Gradient for input B has wrong size')",210],["'Gradient for input B wrong for bSize = ' .. bSize .. ' and i = ' .. i)",168],["input int A,B;",158]]},{"word":"By","context":[["Spam By Turbo TM",10270],["-- Generated By protoc-gen-lua Do not Edit",455],["S V U I   By: Munglunch",418],["--By ID actions",280],["♻️ You can send your Ideas and messages to Us By sending them into bots account by this command :",232],["--By @ali_ghoghnoos",125],["Used By:       Warcraft III: The Frozen Throne, Warcraft III",116],["--By @Rondoozle",111],["--\tBy Sassafrass / Spacetech / LuaPineapple",106],["-- Generated By Quest Extractor on 2/8/2008 3:46:15 PM",100]]},{"word":"C","context":[["language \"C++\"",2156],["local C = ffi.C",705],["local C = ffi.C",705],["language \"C\"",641],["language \"C#\"",379],["-- (C) 2013-15 - ntop.org",278],["SDL_language \"C\"",254],["local K, C, L = select(2, ...):unpack()",199],["language(\"C++\")",180],["-- (C) 2013-14 - ntop.org",164]]},{"word":"CATEGORY_SPECIAL_SUMMON","context":[["e1:SetCategory(CATEGORY_SPECIAL_SUMMON)",2336],["e2:SetCategory(CATEGORY_SPECIAL_SUMMON)",985],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,e:GetHandler(),1,0,0)",932],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,g,1,0,0)",877],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_DECK)",537],["e3:SetCategory(CATEGORY_SPECIAL_SUMMON)",487],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_HAND)",400],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_EXTRA)",367],["e4:SetCategory(CATEGORY_SPECIAL_SUMMON)",200],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,g,g:GetCount(),0,0)",145]]},{"word":"CSID","context":[["--printf(\"CSID: %u\",csid);",32316],["-- printf(\"CSID: %u\",csid);",17239],["--printf(\"onFinish CSID: %u\",csid);",615],["--printf(\"onUpdate CSID: %u\",csid);",552],["--print(\"CSID: \",csid);",446],["--print(\"CSID:\",csid);",327],["-- printf(\"onUpdate CSID: %u\",csid);",161],["printf(\"CSID: %u\",csid);",149],["-- printf(\"onFinish CSID: %u\",csid);",103],["--print(\"CSID: %u\",csid);",37]]},{"word":"CUn8UjxMJnvrrCLU04fLyQ","context":[["https://telegram.me/joinchat/CUn8UjxMJnvrrCLU04fLyQ",11116]]},{"word":"Check","context":[["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729],["if banned or is_gbanned(user_id) then -- Check it with redis",973],["-- Check if plugin is enabled",787],["-- Check if is enabled",662],["-- Check if all substeps are completed",583],["-- Check if banned user joins chat",469],["-- Check for completion",408],["-- Check if plugins exists",394],["--End Check Member",391],["-- Check Member",382]]},{"word":"Class","context":[["alternateWeaponClass = \"\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1760],["weaponClass = \"UnarmedMeleeWeapon\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1403],["Class = CheckClass(UID);",760],["if (Class == 1 or Class == 5 or Class == 6) then",673],["if (Class == 1 or Class == 5 or Class == 6) then",673],["if (Class == 1 or Class == 5 or Class == 6) then",673],["elseif (Class == 3 or Class == 9 or Class == 10) then",670],["elseif (Class == 3 or Class == 9 or Class == 10) then",670],["elseif (Class == 3 or Class == 9 or Class == 10) then",670],["elseif (Class == 2 or Class == 7 or Class == 8) then",667]]},{"word":"Core3","context":[["--This File is part of Core3.",29626]]},{"word":"Create","context":[["-- Create a basic config.json file and saves it.",2728],["Create a realm",1357],["Create a group",1356],["function ITEM.Create( ply, class, pos )",677],["function script.Create()",575],["local ent = ents.Create(class)",569],["return \"Create a link using /newlink first !\"",560],["-- Create a taglist widget",381],["-- Create a promptbox for each screen",377],["-- Create a tasklist widget",375]]},{"word":"CreateEffect","context":[["local e1=Effect.CreateEffect(c)",17703],["local e2=Effect.CreateEffect(c)",8648],["local e3=Effect.CreateEffect(c)",4351],["local e1=Effect.CreateEffect(e:GetHandler())",3195],["local e4=Effect.CreateEffect(c)",2096],["local e5=Effect.CreateEffect(c)",824],["local e2=Effect.CreateEffect(e:GetHandler())",484],["local e6=Effect.CreateEffect(c)",395],["local e7=Effect.CreateEffect(c)",184],["local e1 = Effect.CreateEffect(c)",174]]},{"word":"Data","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["-- Persistent Data",143],["print ('Data loaded from file', file)",133],["local Data = {}",97],["-- Data",73],["if Data.yellow then",57],["return Data",51],["function(ID, Status, Data)",50],["Name = \"Data\",",43],["Data[ 2 ] = {}",38]]},{"word":"Debug","context":[["configuration \"Debug\"",857],["configurations { \"Debug\", \"Release\" }",663],["[MyProject:Debug(2)] /* Debug */ = {",349],["[MyProject:Debug(2)] /* Debug */ = {",349],["name = Debug;",247],["Name=\"Debug|Win32\"",245],["<PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">",231],["name = \"Debug\";",223],["filter \"configurations:Debug\"",166],["<PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">",164]]},{"word":"Duel","context":[["local tc=Duel.GetFirstTarget()",5796],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)",3549],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",2436],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_DESTROY)",1676],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_ATOHAND)",1597],["if Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end",1543],["Duel.RegisterEffect(e1,tp)",1408],["Duel.BreakEffect()",1209],["Duel.ConfirmCards(1-tp,g)",1183],["Duel.Destroy(tc,REASON_EFFECT)",1166]]},{"word":"EFFECT_TYPE_FIELD","context":[["e1:SetType(EFFECT_TYPE_FIELD)",2163],["e2:SetType(EFFECT_TYPE_FIELD)",1371],["e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)",693],["e2:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)",527],["e3:SetType(EFFECT_TYPE_FIELD)",523],["e2:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_O)",500],["e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_O)",441],["e2:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_F)",380],["e3:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)",247],["e3:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_O)",244]]},{"word":"EFFECT_TYPE_SINGLE","context":[["e1:SetType(EFFECT_TYPE_SINGLE)",6530],["e2:SetType(EFFECT_TYPE_SINGLE)",2070],["e1:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",1162],["e3:SetType(EFFECT_TYPE_SINGLE)",959],["e1:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_F)",860],["e2:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",792],["e4:SetType(EFFECT_TYPE_SINGLE)",517],["e3:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",512],["e2:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_F)",487],["e1:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_CONTINUOUS)",340]]},{"word":"ENT","context":[["function ENT:Initialize()",3126],["function ENT:Think()",1787],["ENT.Type = \"anim\"",1322],["function ENT:Draw()",1134],["function ENT:OnRemove()",929],["ENT.Type \t\t\t= \"anim\"",661],["ENT.Spawnable\t\t\t= false",605],["ENT.AdminSpawnable\t\t= false",580],["ENT.Base \t\t\t= \"base_gmodentity\"",518],["function ENT:SetupDataTables()",487]]},{"word":"Effect","context":[["local e1=Effect.CreateEffect(c)",17703],["local e2=Effect.CreateEffect(c)",8648],["local e3=Effect.CreateEffect(c)",4351],["local e1=Effect.CreateEffect(e:GetHandler())",3195],["local e4=Effect.CreateEffect(c)",2096],["local e5=Effect.CreateEffect(c)",824],["-- Food Effect: 30Min, All Races",821],["local e2=Effect.CreateEffect(e:GetHandler())",484],["-- Food Effect: 5Min, All Races",468],["-- Food Effect: 60Min, All Races",429]]},{"word":"Enable","context":[["-- Enable plugins in config.json",2697],["-- Enable a plugin",394],["-- Enable sloppy focus",376],["description = \"Plugin to manage other plugins. Enable, disable or reload.\",",304],["-- Enable a channel",173],["name = L[\"Enable\"],",162],["t.modules.event = true             -- Enable the event module (boolean)",135],["t.modules.keyboard = true          -- Enable the keyboard module (boolean)",134],["t.modules.window = true            -- Enable the window module (boolean)",134],["t.modules.graphics = true          -- Enable the graphics module (boolean)",134]]},{"word":"Enabled","context":[["[\"Enabled\"] = true,",8698],["self.Enabled = true",176],["{ \"1\",   \"Enabled\"      },",154],["return 'Enabled whitelist'",73],["self.Enabled = false",61],["Enabled = true,",59],["if not self.Options.Enabled then return end",46],["name = L[\"Enabled\"],",44],["Examine = Wherigo.ZCommand{Text=\"Examine\", CmdWith=false, Enabled=true, EmptyTargetListText=\"Nothing available\"},",42],["Enabled = false,",32]]},{"word":"Engine3","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["--is making a combined work based on Engine3.",29626],["--Note that people who make modified versions of Engine3 are not obligated",29625]]},{"word":"Entity","context":[["local phys = self.Entity:GetPhysicsObject()",609],["self.Entity:Remove()",575],["self.Entity:PhysicsInit( SOLID_VPHYSICS )",415],["self.Entity:SetMoveType( MOVETYPE_VPHYSICS )",403],["self.Entity:SetSolid( SOLID_VPHYSICS )",400],["self.Entity:DrawModel()",354],["type = \"Entity\"",327],["self.Entity:SetSolid(SOLID_VPHYSICS)",260],["self.Entity:PhysicsInit(SOLID_VPHYSICS)",259],["self.Entity:SetMoveType(MOVETYPE_VPHYSICS)",251]]},{"word":"Error","context":[["print('Error downloading: '..msg.id)",1655],["return send_large_msg(receiver, '*Error: Invite link failed* \\nReason: Not creator.')",584],["return 'Error: Already a group.'",318],["return 'Error: Already a realm.'",317],["-- {{{ Error handling",315],["if not file_path then -- Error",271],["local text = 'Error downloading the image'",266],["return 'Error: Realm '..matches[3]..' not found'",212],["return 'Error: Group '..matches[3]..' not found'",212],["\"Error in minibatch dimension with size -1\")",210]]},{"word":"File","context":[["--This File is part of Core3.",29626],["-- Map File                                                                     --",2686],["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["print('File moved to:', file)",1657],["print('File downloaded to:', result)",1613],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["File = \"construction\",",814],["print(\"File path: \"..file_path)",393],["-- To change this template use File | Settings | File Templates.",309],["-- To change this template use File | Settings | File Templates.",309]]},{"word":"For","context":[["return \"For moderators only!\"",10263],["return \"For admins only!\"",3990],["return \"For mods only !\"",773],["return \"For admins only !\"",763],["return \"For owner only!\"",449],["# For More Information ....!",420],["-- For each status insert a list of positions where the quest will continue, i.e. a new status can be reached there",308],["return \"For mods only!\"",266],["// ========= For more information, visit us at http://www.unknownworlds.com =====================",167],["-- ## For MTA: San Andreas\t\t\t\t##",164]]},{"word":"Fucked","context":[["Fucked by SBSS Team",37368],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["Fucked your mother",249],["Fucked Your Sister",248],["Fucked by SBSS Team\tFucked by SBSS Team",12],["Fucked by SBSS Team\tFucked by SBSS Team",12]]},{"word":"Get","context":[["Get group type",1371],["Get a list of all realms",1363],["Get a list of all groups",1362],["Get a list of members in group/realm",1360],["Get a file of members in group/realm",1360],["-- Get user info",1323],["Get a logfile of current group or realm",554],["--Get and output members of supergroup",281],["--Get and output list of kicked users for supergroup",281],["--Get and output admins and bots in supergroup",281]]},{"word":"GetHandler","context":[["local c=e:GetHandler()",7669],["local e1=Effect.CreateEffect(e:GetHandler())",3195],["if not e:GetHandler():IsRelateToEffect(e) then return end",966],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,e:GetHandler(),1,0,0)",932],["e:GetHandler():RemoveOverlayCard(tp,1,1,REASON_COST)",649],["if chk==0 then return e:GetHandler():CheckRemoveOverlayCard(tp,1,REASON_COST) end",595],["and e:GetHandler():IsCanBeSpecialSummoned(e,0,tp,false,false) end",508],["local e2=Effect.CreateEffect(e:GetHandler())",484],["Duel.Remove(e:GetHandler(),POS_FACEUP,REASON_COST)",441],["Duel.SetOperationInfo(0,CATEGORY_EQUIP,e:GetHandler(),1,0,0)",435]]},{"word":"GetLocationCount","context":[["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",2436],["if Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end",1543],["local ft=Duel.GetLocationCount(tp,LOCATION_MZONE)",718],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>-1",363],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_SZONE)>0",313],["local chkf=Duel.GetLocationCount(tp,LOCATION_MZONE)>0 and PLAYER_NONE or tp",261],["return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",217],["and Duel.GetLocationCount(tp,LOCATION_MZONE)>0",169],["if Duel.SpecialSummon(c,0,tp,tp,false,false,POS_FACEUP)==0 and Duel.GetLocationCount(tp,LOCATION_MZONE)<=0",142],["if Duel.GetLocationCount(tp,LOCATION_SZONE)<=0 then return end",132]]},{"word":"GetNPCByID","context":[["local DoorA = GetNPCByID(DoorID):getAnimation();",103],["GetNPCByID(16928768+cofferID):setPos(mobX,mobY,mobZ);",72],["GetNPCByID(16928768+cofferID):setStatus(STATUS_NORMAL);",72],["GetNPCByID(16928768+71):setPos(mobX,mobY,mobZ);",64],["GetNPCByID(16928768+71):setStatus(STATUS_NORMAL);",64],["if (GetNPCByID(DoorOffset):getAnimation() == 9) then",63],["GetNPCByID(DoorID):openDoor(6);",56],["GetNPCByID(newnpcid):setStatus(0);",56],["GetNPCByID(16928770+471):setStatus(STATUS_NORMAL);",52],["GetNPCByID(Torch1):openDoor(10); -- Torch Lighting",46]]},{"word":"Group","context":[["-- Group configuration",1842],["lootGroup = \"0\", -- Group it belongs to for loot",1544],["return send_large_msg(receiver, 'Group is not added.')",1193],["Group description",1133],["Group rules",1130],["return 'Group is not added.'",1024],["-- Group configuration removal",907],["return 'Group members are not locked'",892],["return 'Group members are already locked'",890],["return 'Group photo has been unlocked'",888]]},{"word":"H","context":[["--                        T H E   W A R   B E G I N S",714],["ENT.Author\t\t\t= \"H.A.Z.G\"",283],["local H = wesnoth.require \"lua/helper.lua\"",238],["local text = text:gsub(\"H\",tar_font[8])",110],["return H",98],["option2.x = W * 0.65 option2.y = H * 0.25",96],["local date = os.date(\"!%a, %d %b %Y %H:%M:%S GMT\")",95],["dateFormat = \"%A %d %B - %H:%M:%S\"",86],["local W = H.set_wml_action_metatable {}",72],["option1.x = W * 0.3 option1.y = H * 0.25",68]]},{"word":"HINT_SELECTMSG","context":[["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)",3549],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_DESTROY)",1676],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_ATOHAND)",1597],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_REMOVE)",1117],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_FACEUP)",1047],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TOGRAVE)",1036],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_EQUIP)",818],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_FMATERIAL)",468],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TARGET)",452],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TODECK)",425]]},{"word":"HealthFrame","context":[["[\"HealthFrame\"] = false,",8260],["mod:RemoveOption(\"HealthFrame\")",127],["[\"HealthFrame\"] = true,",113],["-- Tab: HealthFrame",30],["mod:AddBoolOption(\"HealthFrame\", true)",25],["mod:AddBoolOption(\"HealthFrame\", false)",11]]},{"word":"Hide","context":[["self:Hide()",785],["GameTooltip:Hide()",681],["frame:Hide()",558],["DBM.RangeCheck:Hide()",361],["self.frame:Hide()",325],["self:Hide();",199],["button:Hide()",197],["f:Hide()",143],["icon:Hide()",138],["v:Hide()",128]]},{"word":"Hint","context":[["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)",3549],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_DESTROY)",1676],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_ATOHAND)",1597],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_REMOVE)",1117],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_FACEUP)",1047],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TOGRAVE)",1036],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_EQUIP)",818],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_FMATERIAL)",468],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TARGET)",452],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TODECK)",425]]},{"word":"I","context":[["--                        T H E   W A R   B E G I N S",714],["S V U I   By: Munglunch",418],["--send_large_msg('chat#id'..msg.to.id, 'I\\'m in matches[1]')",386],["npcHandler:say('Well, can I help you with something else?', cid)",330],["-- I suggest you to remap Mod4 to another key using xmodmap or other tools.",305],["interface I with",256],["[1] = \"DVI-I-1\",",241],["return \"I've sent contact list with both json and text format to your private\"",192],["interface I;",162],["lightCutsceneFinish(player); -- Quest: I Can Hear A Rainbow",160]]},{"word":"ID","context":[["local function action_by_id(extra, success, result)  -- /info <ID> function",352],["--By ID actions",280],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested ID for: @\"..username)",273],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup ID\")",273],["return \"Bot ID: \"..msg.to.id.. \"\\n\\nYour ID: \"..msg.from.id",240],["return \"Bot ID: \"..msg.to.id.. \"\\n\\nYour ID: \"..msg.from.id",240],["return \"Group ID for \" ..string.gsub(msg.to.print_name, \"_\", \" \").. \":\\n\\n\"..msg.to.id",207],["!unbanall ID",161],["!Kick @UserName or ID",159],["!Ban @UserName or ID",159]]},{"word":"ITEM","context":[["function ITEM.ToolCheck( p )",724],["function ITEM.Use( ply )",680],["local ITEM = {}",679],["PNRP.AddItem(ITEM)",678],["function ITEM.Create( ply, class, pos )",677],["ITEM.Script = \"\"",673],["ITEM.Remove = true",661],["ITEM.Chance = 100",636],["ITEM.ShopHide = true",464],["ITEM.Energy = 0",380]]},{"word":"If","context":[["-- If plugin is for privileged users only",2729],["-- If config.lua doesn't exist",2724],["-- Go over patterns. If one matches it's enough.",2724],["-- If file doesn't exist, create it.",2724],["-- If not found",531],["-- If you do not like this or do not have such a key,",306],["-- If NoSights is true, the weapon won't have ironsights",234],["-- If AllowDrop is false, players can't manually drop the gun with Q",234],["-- If IsSilent is true, victims will not scream upon death.",231],["-- If LimitedStock is true, you can only buy one per round.",213]]},{"word":"Initialize","context":[["function ENT:Initialize()",3126],["function widget:Initialize()",795],["function gadget:Initialize()",686],["function SWEP:Initialize()",598],["-- Initialize all quest steps",226],["-- Initialize all starting navigation points",205],["Name: Initialize",156],["self.BaseClass.Initialize(self)",139],["BaseClass.Initialize( self )",97],["-- Initialize",84]]},{"word":"IsRelateToEffect","context":[["if tc:IsRelateToEffect(e) then",1920],["if not e:GetHandler():IsRelateToEffect(e) then return end",966],["if not c:IsRelateToEffect(e) then return end",682],["if tc and tc:IsRelateToEffect(e) then",536],["if c:IsRelateToEffect(e) then",455],["if tc:IsFaceup() and tc:IsRelateToEffect(e) then",416],["if tc:IsRelateToEffect(e) and tc:IsFaceup() then",404],["if c:IsRelateToEffect(e) and c:IsFaceup() then",385],["if e:GetHandler():IsRelateToEffect(e) then",384],["if re:GetHandler():IsRelateToEffect(re) then",345]]},{"word":"IsValid","context":[["if (phys:IsValid()) then",590],["if ent:IsValid() then",547],["if not IsValid(ply) then return end",379],["if phys:IsValid() then",351],["if not IsValid(self) then return end",308],["if not IsValid(ent) then return end",285],["if IsValid(ply) then",256],["if IsValid(ent) then",233],["if owner:IsValid() then",206],["if IsValid(phys) then",164]]},{"word":"JSON","context":[["local s = JSON.encode(data)",2461],["local data = JSON.decode(s)",2460],["local jdat = JSON.decode(jstr)",256],["base.assert(startPos<=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)",165],["local JSON = require('dkjson')",140],["json = (loadfile \"./libs/JSON.lua\")()",133],["--   local raw_json_text    = JSON:encode(lua_table_or_value)",130],["--   local lua_value = JSON:decode(raw_json_text)",129],["--   local pretty_json_text = JSON:encode_pretty(lua_table_or_value) -- \"pretty printed\" version for human readability",128],["--          function JSON:onDecodeError(message, text, location, etc)",126]]},{"word":"L","context":[["L:SetOptionLocalization({",1887],["L:SetMiscLocalization({",1791],["L:SetGeneralLocalization{",1621],["L:SetOptionLocalization{",1444],["L:SetMiscLocalization{",1360],["L:SetGeneralLocalization({",1278],["L:SetWarningLocalization({",1230],["local L\t\t= mod:GetLocalizedStrings()",1089],["L:SetTimerLocalization{",983],["L:SetWarningLocalization{",963]]},{"word":"LANG","context":[["set_text(LANG, 'giverank:0', 9)",134],["set_text(LANG, 'gban_installer:0', 1)",134],["set_text(LANG, 'rules:0', 1)",134],["set_text(LANG, 'commands:0', 2)",134],["set_text(LANG, 'export_gban:0', 2)",134],["set_text(LANG, 'plugins:0', 4)",134],["set_text(LANG, 'version:0', 1)",134],["set_text(LANG, 'moderation:0', 18)",134],["set_text(LANG, 'id:0', 6)",134],["set_text(LANG, 'bot:0', 2)",133]]},{"word":"LOCATION_MZONE","context":[["e1:SetRange(LOCATION_MZONE)",3692],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",2436],["e2:SetRange(LOCATION_MZONE)",2336],["if Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end",1543],["e3:SetRange(LOCATION_MZONE)",1337],["local ft=Duel.GetLocationCount(tp,LOCATION_MZONE)",718],["e4:SetRange(LOCATION_MZONE)",562],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>-1",363],["e5:SetRange(LOCATION_MZONE)",273],["local chkf=Duel.GetLocationCount(tp,LOCATION_MZONE)>0 and PLAYER_NONE or tp",261]]},{"word":"Linking","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["_p('\\t@echo Linking %s', prj.name)",37],["msglinking (\"Linking $(notdir $@)...\")",14]]},{"word":"Lua","context":[["LuCI - Lua Configuration Interface",1204],["-- Lua APIs",419],["awful.prompt.run({ prompt = \"Run Lua code: \" },",355],["-- lua-npge, Nucleotide PanGenome explorer (Lua module)",284],["templateType = \"Lua\",",214],["--!The Make-like Build Utility based on Lua",199],["-- Lua API",151],["local t = {}  -- NOTE: use {n = 0} in Lua-5.0",123],["-- Simple JSON encoding and decoding in pure Lua.",122],["-- like Lua itself.",117]]},{"word":"M","context":[["return M",4324],["local M = {}",2923],["local M = { }",378],["local M = {",237],["M._rules = {",215],["--doElementalNuke(V,M,caster,spell,target,hasMultipleTargetReduction,resistBonus)",215],["function M.UseItem(User, SourceItem, ltstate)",210],["local M, N, P = createMatrixInputSizes()",210],["function M.QuestDescription(user, status)",204],["function M.QuestFinalStatus()",204]]},{"word":"MACHINES","context":[["MACHINES[\"PCCARD\"] = true",56],["MACHINES[\"Z80CTC\"] = true",52],["MACHINES[\"SCSI\"] = true",51],["MACHINES[\"IDE\"] = true",45],["MACHINES[\"NSCSI\"] = true",45],["MACHINES[\"I8255\"] = true",45],["MACHINES[\"68681\"] = true",41],["MACHINES[\"RIOT6532\"] = true",41],["MACHINES[\"TTL74153\"] = true",41],["MACHINES[\"BANKDEV\"] = true",41]]},{"word":"MAME_DIR","context":[["MAME_DIR .. \"src/osd\",",339],["MAME_DIR .. \"src/lib/util\",",311],["MAME_DIR .. \"3rdparty\",",220],["MAME_DIR .. \"src/lib\",",191],["MAME_DIR .. \"src/emu\",",185],["targetdir(MAME_DIR)",151],["MAME_DIR .. \"src/emu/emucore.cpp\",",115],["MAME_DIR .. \"src/devices\",",74],["MAME_DIR .. \"src/lib/netlist\",",67],["MAME_DIR .. \"src/mame\",",51]]},{"word":"Map","context":[["-- Map File                                                                     --",2686],["Map:AddGroundObject(object);",2020],["if (object ~= nil) then Map:AddGroundObject(object) end;",1274],["local target = game.level.map(x, y, Map.ACTOR)",487],["local Map = require \"engine.Map\"",481],["local Map = require \"engine.Map\"",481],["Map:AddGroundObject(npc);",269],["-- IMPORTANT ITEM: AF Keyitems, AF Items, & Map -----------",229],["Map = \"maps/random/random-map-forest.smp\",",221],["local target = game.level.map(px, py, Map.ACTOR)",151]]},{"word":"MobIDs","context":[["-- require(\"scripts/zones/The_Eldieme_Necropolis_[S]/MobIDs\");",387],["-- require(\"scripts/zones/Nyzul_Isle/MobIDs\");",174],["-- require(\"scripts/zones/La_Vaule_[S]/MobIDs\");",160],["-- require(\"scripts/zones/Dynamis-Beaucedine/MobIDs\");",159],["-- require(\"scripts/zones/Castle_Oztroja_[S]/MobIDs\");",158],["-- require(\"scripts/zones/Castle_Zvahl_Baileys_[S]/MobIDs\");",157],["-- require(\"scripts/zones/Grauberg_[S]/MobIDs\");",157],["-- require(\"scripts/zones/Xarcabard_[S]/MobIDs\");",156],["-- require(\"scripts/zones/Castle_Zvahl_Keep_[S]/MobIDs\");",155],["-- require(\"scripts/zones/Vunkerl_Inlet_[S]/MobIDs\");",154]]},{"word":"NONE","context":[["pvpBitmask = NONE,",2502],["alternateWeaponArmorPiercing = \"\", -- LIGHT, NONE, MEDIUM, HEAVY",1657],["weaponArmorPiercing = \"NONE\", -- LIGHT, NONE, MEDIUM, HEAVY",1547],["weaponArmorPiercing = \"NONE\", -- LIGHT, NONE, MEDIUM, HEAVY",1547],["creatureBitmask = NONE,",1193],["-- NONE, LIGHT, MEDIUM, HEAVY",886],["requiredWeaponType = NONE,",722],["explosionGenerator      = [[custom:NONE]],",364],["armorPiercing = NONE,",207],["[[custom:NONE]],",163]]},{"word":"NPC","context":[["creatureType = \"NPC\",",5738],["-- Standard Info NPC",2739],["-- In dieser Datei stehen die entsprechenden externen NPC's, Trigger und        --",2686],["--  Type: Standard NPC",1189],["-- Standard Merchant NPC",946],["-- NPC:  HomePoint#1",414],["-- Insert the position of the quest start here (probably the position of an NPC or item)",295],["-- NPC:  ???",269],["-- NPC:  Treasure Coffer",255],["-- NPC:  Treasure Chest",228]]},{"word":"Name","context":[["alternateWeaponName = \"\", -- Name ex. 'a Vibrolance'",1760],["weaponName = \"Creature Defualt\", -- Name ex. 'a Vibrolance'",1393],["!creategroup [Name]",1151],["!setname [Name]",1132],["!createrealm [Name]",1131],["[\"Name\"] = \"\",",861],["Name=\"VCCLCompilerTool\"",552],["Name=\"Debug|Win32\"",245],["Name = \"BlockX\",",222],["Name = \"BlockZ\",",222]]},{"word":"New","context":[["-- ///// New \t\t\t\t//////",544],["Media.DisplayMessage(p.GetObjectiveDescription(id), \"New \" .. string.lower(p.GetObjectiveType(id)) .. \" objective\")",279],["statschildren[#statschildren+1] = Label:New{ caption = '', textColor = color.stats_header,}",194],["Button:New{",142],["return \"New link set\"",138],["StackPanel:New{",94],["local self = BASE:Inherit( self, BASE:New() )",77],["statschildren[#statschildren+1] = Label:New{ caption = '', textColor = color.stats_fg, }",71],["Image:New{",70],["obj = inherited.New(self,obj)",69]]},{"word":"No","context":[["return 'No moderator in this group.'",1198],["return 'No rules available.'",848],["return 'No description available.'",666],["-- No further checks",482],["local group_link = \"No link\"",458],["local text = 'No user @'..member..' in this group.'",457],["local group_owner = \"No owner\"",454],["return 'No groups at the moment'",410],["local name = params[1] -- No syntax check. You get to keep the pieces.",224],["return 'No Realms at the moment'",208]]},{"word":"Node","context":[["-- @param #cc.Node node",650],["-- @return Node#Node self (return value: cc.Node)",591],["-- @return Node#Node self (return value: cc.Node)",591],["-- @return Node#Node self (return value: cc.Node)",591],["-- @return Node#Node ret (return value: cc.Node)",483],["-- @return Node#Node ret (return value: cc.Node)",483],["-- @return Node#Node ret (return value: cc.Node)",483],["-- @param #cc.Node target",318],["-- @param #cc.Node child",218],["-- @extend Node",205]]},{"word":"None","context":[["armor = 0, -- 0 = None; 1 = Light; 2 = Medium; 3 = Heavy",1352],["-- Element: None",1218],["---  * None",1148],["armor = 1, -- 0 = None; 1 = Light; 2 = Medium; 3 = Heavy",402],["SKM_HPRIO3=None",370],["SKM_HPRIO4=None",370],["SKM_HPRIO2=None",368],["SKM_HPRIO1=None",366],["SKM_PPos=None",365],["[\"ppos\"] = \"None\";",356]]},{"word":"Note","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- Note: this mission does not make any system claims.",127],["-- Note: testJacobian doesn't support table inputs, and rather than re-write",101],["-- Note: this needs an API key",94],["-- really be a package option. Note: at least with some implementations, positive infinity",77],["-- Note:",64],["-- Note that a context cannot inherit from itself or a context with a higher id",61],["-- TRANSLATORS#: Note helptext for a building",61],["Note:",60],["-- Note: Place holder Soulstealer Skullnix",52]]},{"word":"Notes","context":[["--- Notes:",1084],["--  Notes:",786],["Notes = \"\",",347],["Notes:",162],["<th colspan=\"2\"> area block </th><th> </th><th> Notes </th>",152],["Notes",146],["-- Notes: Spawns Gargoyle when triggered",144],["f:write(\"\\t\\t\\t\\t{ Name = \\\"\\\", Type = \\\"\\\", Notes = \\\"\\\" },\\n\");",112],["-- Notes:",103],["Clear = { Params = \"\", Return = \"\", Notes = \"Empties all slots\" },",48]]},{"word":"Only","context":[["-- Only plugins with cron function",2729],["Only sudo users can run this command",927],["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only owner and mods can add bots in group",872],["*Only admins and sudo can add bots in group",780],["return \"Only admins can do it for now\"",778],["*Only admins and sudo can use res, setowner, commands",768],["return \"Only owner can clean\"",612],["» Only mods, owner and admin can add bots in group",470],["» Only owner can use res,setowner,promote,demote and log commands",470]]},{"word":"P","context":[["local P, R, S = lpeg.P, lpeg.R, lpeg.S",215],["local P, R, S = lpeg.P, lpeg.R, lpeg.S",215],["local M, N, P = createMatrixInputSizes()",210],["local R, L, P, G = unpack(select(2, ...)) --Import: Engine, Locales, ProfileDB, GlobalDB",176],["assert_string(1,P)",171],["mytester:assertTableEq(output:size():totable(), {bSize, M, P},",168],["local gradOutput = torch.randn(bSize, M, P)",168],["return P",155],["-- @param P A file path",118],["local text = text:gsub(\"P\",tar_font[16])",109]]},{"word":"Params","context":[["Params =",2632],["Params:",129],["Clear = { Params = \"\", Return = \"\", Notes = \"Empties all slots\" },",48],["Params = \"\",",25],["IsGameModeAdventure = { Params = \"\", Return = \"bool\", Notes = \"Returns true if the current gamemode is gmAdventure.\" },",24],["HasBlockLights = { Params = \"\", Return = \"bool\", Notes = \"Returns true if current datatypes include blocklight\" },",24],["GetName = { Params = \"\", Return = \"string\", Notes = \"Returns the name of the painting\" },",24],["IsWeatherSunny = { Params = \"\", Return = \"bool\", Notes = \"Returns true if the current weather is sunny.\" },",24],["{ Params = \"x, y, ItemType, ItemCount, ItemDamage\", Return = \"\", Notes = \"Sets the item at the specified coords\" },",24],["SetPosX = { Params = \"number\", Return = \"\", Notes = \"Sets the X-coord of the entity's pivot\" },",24]]},{"word":"Player","context":[["local player = Player(cid)",2314],["type = \"Player\"",908],["-- Player traded a key.",455],["player:PrintToPlayer( string.format( \"Player named '%s' not found!\", target ) );",411],["type = \"Player\",",388],["SKM_TBuffOwner=Player",353],["[\"tbuffowner\"] = \"Player\";",337],["Player:GetInventory():AddItem(Item)",215],["local GERMAN = Player.german",204],["local ENGLISH = Player.english",202]]},{"word":"Plugin","context":[["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["description = \"Plugin to manage other plugins. Enable, disable or reload.\",",304],["print('Plugin '..disabled_plugin..' is disabled on this chat')",295],["return \"Plugin doesn't exists\"",293],["return 'Plugin '..plugin..' is enabled again'",250],["return 'Plugin '..plugin..' disabled on this chat'",218],["return 'Plugin '..name..' does not exists'",218],["return 'Plugin '..name..' not enabled'",215],["return 'Plugin '..plugin_name..' is enabled'",212],["return 'Plugin '..plugin_name..' does not exists'",205]]},{"word":"Quest","context":[["-- Quest Dialog",239],["lightCutsceneFinish(player); -- Quest: I Can Hear A Rainbow",160],["lightCutsceneUpdate(player); -- Quest: I Can Hear A Rainbow",160],["lightCutsceneUpdate( player);  -- Quest: I Can Hear A Rainbow",155],["lightCutsceneFinish( player);  -- Quest: I Can Hear A Rainbow",155],["local Quest = Quests[QuestID]",150],["--  Type: Quest NPC",132],["if( triggerLightCutscene( player)) then -- Quest: I Can Hear A Rainbow",125],["-- Quest dialog",122],["local QuestState = thePlayer:isQuestActive(Quest)",122]]},{"word":"R","context":[["--                        T H E   W A R   B E G I N S",714],["[\"R\"] = 0,",460],["[\"R\"] = 1,",267],["local R = lgi.Regress",228],["local P, R, S = lpeg.P, lpeg.R, lpeg.S",215],["local P, R, S = lpeg.P, lpeg.R, lpeg.S",215],["local R, L, P, G = unpack(select(2, ...)) --Import: Engine, Locales, ProfileDB, GlobalDB",176],["R = get_receiver(msg)",149],["local text = text:gsub(\"R\",tar_font[18])",109],["local S = R:GetModule(\"Skins\")",97]]},{"word":"REASON_EFFECT","context":[["Duel.Destroy(tc,REASON_EFFECT)",1166],["Duel.SendtoHand(g,nil,REASON_EFFECT)",1008],["Duel.Destroy(g,REASON_EFFECT)",652],["Duel.SendtoHand(tc,nil,REASON_EFFECT)",630],["Duel.Destroy(eg,REASON_EFFECT)",326],["Duel.Draw(p,d,REASON_EFFECT)",318],["Duel.SendtoGrave(g,REASON_EFFECT)",285],["Duel.Destroy(e:GetHandler(),REASON_EFFECT)",276],["Duel.SendtoGrave(c,REASON_EFFECT)",226],["Duel.Draw(tp,1,REASON_EFFECT)",197]]},{"word":"RESULT","context":[["--printf(\"RESULT: %u\",option);",31311],["-- printf(\"RESULT: %u\",option);",16400],["--printf(\"onFinish RESULT: %u\",option);",611],["--printf(\"onUpdate RESULT: %u\",option);",551],["--print(\"RESULT: \",menuchoice);",445],["printf(\"RESULT: %u\",option);",244],["--print(\"RESULT:\",option);",211],["-- printf(\"onUpdate RESULT: %u\",option);",161],["-- printf(\"onFinish RESULT: %u\",option);",103],["-- printf(\"RESULT: %u\", option);",40]]},{"word":"RegisterEffect","context":[["c:RegisterEffect(e1)",16552],["c:RegisterEffect(e2)",9014],["c:RegisterEffect(e3)",4833],["c:RegisterEffect(e4)",2357],["tc:RegisterEffect(e1)",1988],["Duel.RegisterEffect(e1,tp)",1408],["c:RegisterEffect(e5)",1018],["tc:RegisterEffect(e2)",881],["c:RegisterEffect(e6)",456],["Duel.RegisterEffect(e2,tp)",372]]},{"word":"Remove","context":[["self:Remove()",1625],["ITEM.Remove = true",661],["self.Entity:Remove()",575],["Duel.Remove(g,POS_FACEUP,REASON_COST)",518],["v:Remove()",457],["Duel.Remove(e:GetHandler(),POS_FACEUP,REASON_COST)",441],["ent:Remove()",433],["inst:Remove()",395],["Duel.Remove(tc,POS_FACEUP,REASON_EFFECT)",167],["t.window.borderless = false        -- Remove all border visuals from the window (boolean)",125]]},{"word":"Return","context":[["awful.key({ modkey, \"Control\" }, \"Return\", function (c) c:swap(awful.client.getmaster()) end),",343],["'(Reply)!info: Return info of replied user if used by reply.',",321],["'!info: Return your info and the chat info if you are in one.',",318],["awful.key({ modkey,           }, \"Return\", function () awful.util.spawn(terminal) end),",311],["'!info <id>: Return the info\\'s of the <id>.',",307],["'!info @<user_name>: Return the member @<user_name> information from the current chat.',",305],["Return group id or user id",223],["-- Return Module Object --------------------------------------------------",152],["Return SuperGroup ID or user id",92],["-- Return   : NULL",90]]},{"word":"Returns","context":[["-- ///// Returns: void\t\t//////",3147],["-- Returns the config from config.lua file.",2731],["Returns =",2637],["--- Returns:",2170],["Returns text of [value]",1140],["Returns group settings",1129],["-- Returns:",776],["Returns:",574],["-- Returns a table with `name` and `msgs`",490],["-- Returns true if file exists in plugins folder",474]]},{"word":"S","context":[["--                        T H E   W A R   B E G I N S",714],["S V U I   By: Munglunch",418],["-- require(\"scripts/zones/The_Eldieme_Necropolis_[S]/MobIDs\");",387],["package.loaded[\"scripts/zones/Windurst_Waters_[S]/TextIDs\"] = nil;",307],["-- Area: Southern SandOria [S]",285],["require(\"scripts/zones/Southern_San_dOria_[S]/TextIDs\");",275],["package.loaded[\"scripts/zones/Southern_San_dOria_[S]/TextIDs\"] = nil;",271],["--  Area: Windurst Waters (S)",265],["\"^(https://telegram.me/joinchat/%S+)$\",",263],["-- Area: The Eldieme Necropolis (S) (175)",229]]},{"word":"SBSS","context":[["Fucked by SBSS Team",37368],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["text = text..'SBSS Team'",37],["Writed by SBSS Team",18],["Fucked by SBSS Team\tFucked by SBSS Team",12],["Fucked by SBSS Team\tFucked by SBSS Team",12]]},{"word":"SPELL_AURA_APPLIED","context":[["[\"SPELL_AURA_APPLIED\"] = true,",10570],["function mod:SPELL_AURA_APPLIED(args)",851],["\"SPELL_AURA_APPLIED\",",331],["mod.SPELL_AURA_APPLIED_DOSE = mod.SPELL_AURA_APPLIED",195],["\"SPELL_AURA_APPLIED\", -- [4]",174],["\"SPELL_AURA_APPLIED\"",42],["SPELL_AURA_APPLIED = {",21],["mod.SPELL_AURA_REFRESH = mod.SPELL_AURA_APPLIED",17],["SPELL_AURA_APPLIED",16]]},{"word":"SPELL_CAST_SUCCESS","context":[["[\"SPELL_CAST_SUCCESS\"] = true,",14002],["function mod:SPELL_CAST_SUCCESS(args)",523],["\"SPELL_CAST_SUCCESS\",",155],["\"SPELL_CAST_SUCCESS\"",64],["\"SPELL_CAST_SUCCESS\", -- [4]",34],["SPELL_CAST_SUCCESS",24]]},{"word":"SPELL_DAMAGE","context":[["[\"SPELL_DAMAGE\"] = true,",8130],["mod.SPELL_MISSED = mod.SPELL_DAMAGE",113],["function mod:SPELL_DAMAGE(_, _, _, _, destGUID, _, _, _, spellId)",99],["\"SPELL_DAMAGE\",",81],["\"SPELL_DAMAGE\", -- [4]",44],["eventType = \"SPELL_DAMAGE\",",18],["function mod:SPELL_DAMAGE(_, _, _, _, _, _, _, _, spellId)",13],["SPELL_DAMAGE = true,",11]]},{"word":"SWEP","context":[["function SWEP:PrimaryAttack()",799],["function SWEP:SecondaryAttack()",745],["function SWEP:Initialize()",598],["function SWEP:Reload()",534],["function SWEP:Deploy()",500],["function SWEP:Think()",456],["function SWEP:Holster()",389],["SWEP.Spawnable = true",376],["SWEP.Secondary.ClipSize = -1",364],["SWEP.AdminSpawnable = true",352]]},{"word":"Save","context":[["-- Save the content of _config to config.lua",2734],["Save <text> as [value]",914],["--Save on redis",774],["-- Save stats, ban user",628],["-- Save to redis",373],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] added a bot > @\".. msg.action.user.username)-- Save to logs",350],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] added a banned user >\"..msg.action.user.id)-- Save to logs",348],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] banned user is talking !\")-- Save to logs",345],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] is banned and kicked ! \")-- Save to logs",343],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] left using kickme \")-- Save to logs",332]]},{"word":"See","context":[["-- See plugins/isup.lua as an example for cron",905],["-- See http://www.ocdsoft.com/files/accuracy.xls",875],["-- See http://www.ocdsoft.com/files/speed.xls",875],["-- See http://www.ocdsoft.com/files/defense.xls",875],["-- See http://www.ocdsoft.com/files/certifications.xls",871],["craftingToolTab = 8, -- (See DraftSchemticImplementation.h)",665],["/////// DEVELOPERS: See DEVELOPERS.md in the top folder",582],["craftingToolTab = 8, -- (See DraftSchematicObjectTemplate.h)",348],["craftingToolTab = 2, -- (See DraftSchemticImplementation.h)",335],["craftingToolTab = 131072, -- (See DraftSchemticImplementation.h)",301]]},{"word":"Set","context":[["Set a group's rules",1365],["Set a group's about text",1364],["Set realm name",1354],["Set [value] as flood sensitivity",1224],["Set group name",1124],["Set and locks group photo",1112],["Set <text> as about",909],["Set <text> as rules",908],["return 'Set group rules to:\\n'..rules",843],["return 'Set group description to:\\n'..about",768]]},{"word":"SetCategory","context":[["e1:SetCategory(CATEGORY_SPECIAL_SUMMON)",2336],["e1:SetCategory(CATEGORY_DESTROY)",1016],["e2:SetCategory(CATEGORY_SPECIAL_SUMMON)",985],["e1:SetCategory(CATEGORY_EQUIP)",719],["e1:SetCategory(CATEGORY_ATKCHANGE)",539],["e3:SetCategory(CATEGORY_SPECIAL_SUMMON)",487],["e2:SetCategory(CATEGORY_DESTROY)",479],["e1:SetCategory(CATEGORY_TOHAND+CATEGORY_SEARCH)",393],["e1:SetCategory(CATEGORY_TOHAND)",388],["e1:SetCategory(CATEGORY_POSITION)",324]]},{"word":"SetCode","context":[["e1:SetCode(EVENT_FREE_CHAIN)",5290],["e1:SetCode(EFFECT_UPDATE_ATTACK)",1471],["e1:SetCode(EVENT_SUMMON_SUCCESS)",874],["e1:SetCode(EFFECT_SPSUMMON_CONDITION)",760],["e2:SetCode(EFFECT_UPDATE_ATTACK)",696],["e2:SetCode(EVENT_SPSUMMON_SUCCESS)",651],["e1:SetCode(EFFECT_SPSUMMON_PROC)",637],["e1:SetCode(EVENT_PHASE+PHASE_END)",517],["e1:SetCode(EVENT_SPSUMMON_SUCCESS)",506],["e1:SetCode(EFFECT_DISABLE)",481]]},{"word":"SetOperationInfo","context":[["Duel.SetOperationInfo(0,CATEGORY_DESTROY,g,1,0,0)",983],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,e:GetHandler(),1,0,0)",932],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,g,1,0,0)",877],["Duel.SetOperationInfo(0,CATEGORY_DESTROY,g,g:GetCount(),0,0)",839],["Duel.SetOperationInfo(0,CATEGORY_TOHAND,nil,1,tp,LOCATION_DECK)",824],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_DECK)",537],["Duel.SetOperationInfo(0,CATEGORY_TOHAND,g,1,0,0)",473],["Duel.SetOperationInfo(0,CATEGORY_EQUIP,e:GetHandler(),1,0,0)",435],["Duel.SetOperationInfo(0,CATEGORY_DRAW,nil,0,tp,1)",409],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_HAND)",400]]},{"word":"SetProperty","context":[["e1:SetProperty(EFFECT_FLAG_CARD_TARGET)",3325],["e2:SetProperty(EFFECT_FLAG_CARD_TARGET)",1206],["e1:SetProperty(EFFECT_FLAG_PLAYER_TARGET)",1123],["e1:SetProperty(EFFECT_FLAG_CANNOT_DISABLE+EFFECT_FLAG_UNCOPYABLE)",1054],["e1:SetProperty(EFFECT_FLAG_CANNOT_DISABLE)",915],["e1:SetProperty(EFFECT_FLAG_SINGLE_RANGE)",719],["e1:SetProperty(EFFECT_FLAG_UNCOPYABLE)",545],["e3:SetProperty(EFFECT_FLAG_CARD_TARGET)",510],["e2:SetProperty(EFFECT_FLAG_SINGLE_RANGE)",504],["e2:SetProperty(EFFECT_FLAG_PLAYER_TARGET)",439]]},{"word":"SetRange","context":[["e1:SetRange(LOCATION_MZONE)",3692],["e2:SetRange(LOCATION_MZONE)",2336],["e3:SetRange(LOCATION_MZONE)",1337],["e2:SetRange(LOCATION_SZONE)",1260],["e1:SetRange(LOCATION_HAND)",1042],["e3:SetRange(LOCATION_SZONE)",629],["e4:SetRange(LOCATION_MZONE)",562],["e2:SetRange(LOCATION_GRAVE)",427],["e2:SetRange(LOCATION_PZONE)",420],["e2:SetRange(LOCATION_HAND)",335]]},{"word":"SetType","context":[["e1:SetType(EFFECT_TYPE_SINGLE)",6530],["e1:SetType(EFFECT_TYPE_ACTIVATE)",5739],["e1:SetType(EFFECT_TYPE_FIELD)",2163],["e2:SetType(EFFECT_TYPE_SINGLE)",2070],["e1:SetType(EFFECT_TYPE_IGNITION)",1893],["e2:SetType(EFFECT_TYPE_IGNITION)",1400],["e2:SetType(EFFECT_TYPE_FIELD)",1371],["e1:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",1162],["e3:SetType(EFFECT_TYPE_SINGLE)",959],["e1:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_F)",860]]},{"word":"SetValue","context":[["e1:SetValue(1)",776],["e2:SetValue(1)",403],["e3:SetValue(1)",278],["e1:SetValue(0)",233],["e1:SetValue(500)",189],["e1:SetValue(aux.FALSE)",175],["e1:SetValue(1000)",165],["e4:SetValue(1)",140],["e1:SetValue(atk)",137],["e2:SetValue(300)",116]]},{"word":"Show","context":[["[\"Show\"] = \"saved\",",711],["GameTooltip:Show()",667],["self:Show()",501],["frame:Show()",401],["-- Show the available plugins",394],["--Show supergroup settings; function",280],["button:Show()",217],["self.frame:Show()",127],["f:Show()",123],["icon:Show()",120]]},{"word":"Spam","context":[["Spam By Turbo TM",10270],["Spam Of Fuck",249],["-- Spam.lua --",138],["set_text(LANG, 'spam', 'Spam')",88],["An Advanced Anti Spam Bot Forked On TeleSeed",51],["-- dis/allow APIs bots to enter group. Spam prevention.",43],["Spam By Turbo TMSpam By Turbo TM",36],["set_text(LANG, 'allowedSpamT', 'Spam is now allowed in this chat.')",30],["set_text(LANG, 'notAllowedSpamT', 'Spam is not allowed in this chat.')",30],["-- Tab: Spam Filter",30]]},{"word":"Spring","context":[["local unitDefID = Spring.GetUnitDefID(unitID)",363],["local alt, ctrl, meta, shift = Spring.GetModKeyState()",238],["local echo = Spring.Echo",220],["for _, unitID in ipairs(Spring.GetAllUnits()) do",174],["local x,y,z = Spring.GetUnitPosition(unitID)",170],["local screenWidth, screenHeight = Spring.GetWindowGeometry()",156],["local spGetUnitPosition = Spring.GetUnitPosition",142],["local units = Spring.GetAllUnits()",120],["local teamID = Spring.GetUnitTeam(unitID)",103],["local paused = select(3, Spring.GetGameSpeed())",96]]},{"word":"Start","context":[["-- Start and load values",2734],["return Start",296],["-- Start by reply actions",281],["self.Start = self:CopyPosition(self.Caret)",190],["function Start()",179],["berserkTimer:Start(-delay)",173],["function string.starts(String, Start)",143],["-- Returns true if String starts with Start",137],["print(\"string.starts(String, Start) is DEPRECATED use string:starts(text) instead\")",132],["--   Start an Expeditionary Force by giving an E.F. region insignia to you.",132]]},{"word":"SuperGroup","context":[["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: mute \"..msg_type)",1911],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute \"..msg_type)",1639],["return \"SuperGroup mute \"..msg_type..\" is already on\"",865],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup muteslist\")",330],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup mutelist\")",330],["print(\"SuperGroup \"..msg.to.print_name..\"(\"..msg.to.id..\") removed\")",297],["-- SuperGroup configuration",282],["group_type = 'SuperGroup',",282],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup settings \")",274],["savelog(msg.to.id, name_log..\" Admin [\"..msg.action.user.id..\"] added to the SuperGroup by [ \"..msg.from.id..\" ]\")",273]]},{"word":"T","context":[["--                        T H E   W A R   B E G I N S",714],["class T with",656],["-- TE4 - T-Engine 4",621],["T.column {",249],["-- Area: Temenos N T",204],["var T t;",195],["T.row {",172],["-- Area: Temenos E T",144],["[\"Lil' K.T.\"] = {",137],["local text = text:gsub(\"T\",tar_font[20])",109]]},{"word":"TM","context":[["Spam By Turbo TM",10270],["Spam By Turbo TMSpam By Turbo TM",36],["TM.ConfirmTrade:SetDisabled(true)",13]]},{"word":"TP","context":[["-- 100%TP    200%TP    300%TP",1696],["-- 100%TP    200%TP    300%TP",1696],["-- 100%TP    200%TP    300%TP",1696],["-- Only remove TP if the player doesn't have Trance.",85],["-- 100%TP \t200%TP \t300%TP",72],["-- 100%TP \t200%TP \t300%TP",72],["-- 100%TP \t200%TP \t300%TP",72],["-- 100% TP: ??? / 200% TP: ??? / 300% TP: ???",66],["-- 100% TP: ??? / 200% TP: ??? / 300% TP: ???",66],["-- 100% TP: ??? / 200% TP: ??? / 300% TP: ???",66]]},{"word":"Team","context":[["Fucked by SBSS Team",37368],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["Fucked by SBSS Team\t\tFucked by SBSS Team",774],["[\"author\"] = \"Details! Team\",",595],["▀▄ ▄▀  Team name : (  🌐 VIP_TEAM 🌐  )▀▄ ▄▀",110],["*\t               OpenSource Scripting Team                    *",87],["local col = team.GetColor(ply:Team())",69],["Developed by: The Ace Development Team (http://www.wowace.com/index.php/The_Ace_Development_Team)",43],["text = text..'@GPMod Team'",41],["-- Support Team",39]]},{"word":"Tensor","context":[["{name=Tensor},",1410],["{{name=Tensor, default=true, returned=true, method={default='nil'}},",870],["{{name=Tensor, default=true, returned=true},",849],["{{name=Tensor, returned=true},",611],["local mxx = torch.Tensor()",563],["{name=Tensor, method={default=1}},",499],["local input = torch.Tensor(ini,inj,ink):zero()",486],["local input = torch.Tensor(ink, inj, ini):zero()",464],["{{name=Tensor},",351],["local input = torch.Tensor(from, inj, ini):zero()",337]]},{"word":"Test","context":[["Test { [[",7446],["-- Test backward pass.",246],["-- Test forward pass.",246],["-- Test cases for xlsxwriter.lua.",179],["Test { DATA..[[",170],["require \"Test.More\"",136],["-- Test BPROP",90],["-- Test FPROP",90],["-- Test use of result tensor",71],["require \"Test.LongString\"",68]]},{"word":"TextIDs","context":[["package.loaded[\"scripts/zones/Southern_San_dOria/TextIDs\"] = nil;",988],["require(\"scripts/zones/Southern_San_dOria/TextIDs\");",948],["package.loaded[\"scripts/zones/Northern_San_dOria/TextIDs\"] = nil;",880],["require(\"scripts/zones/Northern_San_dOria/TextIDs\");",832],["package.loaded[\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\"] = nil;",712],["require(\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\");",684],["package.loaded[\"scripts/zones/Lower_Jeuno/TextIDs\"] = nil;",653],["require(\"scripts/zones/Lower_Jeuno/TextIDs\");",608],["package.loaded[\"scripts/zones/Port_San_dOria/TextIDs\"] = nil;",583],["package.loaded[\"scripts/zones/Port_Bastok/TextIDs\"] = nil;",575]]},{"word":"The","context":[["-- The values below are the default values.  To be used for blue frog objects primarily",844],["-- @param number Optional. The number to compare against.",522],["-- @param s The string being scanned.",390],["-- The frames duration in milliseconds",390],["-- The number of rows and columns of images, will be used to compute",390],["-- The file to load the frames from",390],["-- Area: The Eldieme Necropolis",361],["-- The client currently has the input focus, so it cannot be",341],["-- The title goes in the middle",252],["-- The AmmoEnt is the ammo entity that can be picked up when carrying this gun.",229]]},{"word":"This","context":[["--This File is part of Core3.",29626],["-- This function is called when tg receive a msg",2732],["--  This file is part of Invertika.                                             --",2706],["This command will send text to [group_id]",1180],["-- This file is part of Aquaria.",914],["-- This Source Code Form is subject to the terms of the Mozilla Public",550],["-- This data should match information on http://wiki.ffxiclopedia.org/wiki/Calculating_Blue_Magic_Damage",467],["then    --This is a check to see if the player has enough notes",403],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["return 'Use This in Your Groups'",366]]},{"word":"To","context":[["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["-- The values below are the default values.  To be used for blue frog objects primarily",844],["-- To change this template use File | Settings | File Templates.",309],["*rtl: Kick user if Right To Left Char. is in name*",241],["*rtl: Delete msg if Right To Left Char. is in name*",182],["player:PrintToPlayer(\"To examine the augment, highlight item and press minus key on numpad\");",166],["To lock the group name for every bodey",158],["To send a message to an account by his/her ID",156],["To see the group stats",156],["To tags the every one and sends your message at bottom",156]]},{"word":"Turbo","context":[["Spam By Turbo TM",10270],["s:taboption(\"advanced\", Flag, \"turbo\", translate(\"Turbo Mode\"))",49],["Spam By Turbo TMSpam By Turbo TM",36],["Spam By Turbo TMSpam By Turbo TM",36],["mode:value(\"11gst\", \"802.11g + Turbo\")",33],["if hw_modes.a then mode:value(\"11ast\", \"802.11a + Turbo\") end",29],["if hw_modes.g then mode:value(\"11gst\", \"802.11g + Turbo\") end",29],["--- Turbo.lua Unit test",15]]},{"word":"Type","context":[["Type = \"number\",",5184],["Type = \"noun\",",2108],["Type = \"string\",",1743],["ENT.Type = \"anim\"",1322],["--  Type: Standard NPC",1189],["Type = \"boolean\",",1106],["--  Type: Physical",968],["ENT.Type \t\t\t= \"anim\"",661],["Type = \"land\",",505],["--  Type: Magical",494]]},{"word":"User","context":[["print('User is banned!')",813],["return 'User '..user_id..' unbanned'",721],["send_large_msg(receiver, 'User @'..member..' ['..member_id..'] unbanned')",304],["send_large_msg(receiver, 'User @'..member..' ['..member_id..'] banned')",286],["-- User is on chat",278],["common.HighInformNLS(User,",249],["common.HighInformNLS( User,",247],["send_large_msg(receiver, 'User @'..member..' ['..member_id..'] globally banned')",233],["-- User: Noneatme",228],["function M.UseItem(User, SourceItem, ltstate)",210]]},{"word":"V","context":[["V",568],["S V U I   By: Munglunch",418],["int V = 0;",254],["{name='charoption', values={'V', 'F'}, default='V'},",240],["{name='charoption', values={'V', 'F'}, default='V'},",240],["--doElementalNuke(V,M,caster,spell,target,hasMultipleTargetReduction,resistBonus)",215],["V\\u000a",214],["local V = {",171],["--doNinjutsuNuke(V,M,caster,spell,target,hasMultipleTargetReduction,resistBonus)",132],["local text = text:gsub(\"V\",tar_font[22])",109]]},{"word":"Value","context":[["s:taboption(\"advanced\", Value, \"frag\", translate(\"Fragmentation Threshold\"))",152],["s:taboption(\"advanced\", Value, \"rts\", translate(\"RTS/CTS Threshold\"))",148],["return txpower_current(Value.cfgvalue(...), tx_power_list)",143],["Value = 0,",117],["Value = 1,",109],["s:taboption(\"advanced\", Value, \"country\", translate(\"Country Code\"))",98],["s:taboption(\"advanced\", Value, \"distance\", translate(\"Distance Optimization\"),",98],["s:taboption(\"advanced\", Value, \"rate\", translate(\"Transmission Rate\"))",97],["(#tx_power_list > 0) and ListValue or Value,",95],["metric = section:taboption(\"advanced\", Value, \"metric\",",88]]},{"word":"Vector","context":[["normal = Vector(0,-1,0)",244],["normal = Vector(0,1,0)",208],["normal = Vector(-1,0,0)",208],["unit.vSlideVelocity = Vector(0,0,0)",190],["normal = Vector(1,0,0)",172],["unit.vLastVelocity = Vector(0,0,0)",167],["normal = Vector(diff.x * -1, diff.y * -1, diff.z)",160],["weapon:SetPos( self.Entity:GetPos()+Vector(0,0,height));",141],["normal = Vector(diff.x, diff.y, diff.z)",128],["{ type = \"SWSH\", pos = Vector(111.6, 0, 0), dir = Angle(0, 0, 0) },",94]]},{"word":"Weapon","context":[["alternateWeaponClass = \"\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1760],["alternateWeaponTemp = \"\", -- Weapon Template ex. 'lance_vibrolance'",1760],["weaponClass = \"UnarmedMeleeWeapon\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1403],["weaponTemp = \"creature_default_weapon\", -- Weapon Template ex. 'lance_vibrolance'",1401],["ply:ChatPrint(\"Weapon already equipped.\")",136],["self.Weapon:SendWeaponAnim(ACT_VM_DRAW)",118],["weaponTemp = \"\", -- Weapon Template ex. 'lance_vibrolance'",116],["weaponClass = \"\", -- Weapon Class ex. 'PolearmMeleeWeapon'",116],["self.Weapon:SetNextPrimaryFire( CurTime() + self.Primary.Delay )",106],["self.Weapon:SendWeaponAnim(ACT_VM_IDLE)",105]]},{"word":"X","context":[["X",1324],["local X = mob:getXPos();",273],["* Author: X-Raym",219],["* Repository URI: https://github.com/X-Raym/REAPER-EEL-Scripts",210],["* Repository: GitHub > X-Raym > EEL Scripts for Cockos REAPER",209],["* File URI: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel",154],["GetMobByID(mobNBR + 1):setSpawn(X,Y,Z);",153],["GetMobByID(mobNBR + 1):setPos(X,Y,Z);",153],["-- X Grant Signet",144],["-- X Sells items in exchange for Conquest Points",136]]},{"word":"XX","context":[["experimentalProperties = {\"XX\", \"XX\", \"CD\", \"OQ\", \"CD\", \"OQ\", \"CD\", \"OQ\", \"SR\", \"UT\", \"CD\", \"OQ\", \"OQ\", \"OQ\", \"OQ\"},",492],["experimentalProperties = {\"XX\", \"XX\", \"CD\", \"OQ\", \"CD\", \"OQ\", \"CD\", \"OQ\", \"SR\", \"UT\", \"CD\", \"OQ\", \"OQ\", \"OQ\", \"OQ\"},",492],["XX",454],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179],["experimentalProperties = \"XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX, XX\",",179]]},{"word":"You","context":[["You can also do it by reply",3331],["return \"You're not admin\"",1568],["return \"You are not the owner of this group\"",1151],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["player:messageSpecial(CONQUEST); -- \"You've earned conquest points!\"",568],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["return \"You can't demote yourself\"",486],["return send_large_msg(receiver, \"You can't kick mods/owner/admins\")",400],["return send_large_msg(receiver, 'You have been promoted as the owner.')",393]]},{"word":"_","context":[["set_name = string.gsub(msg.to.print_name, '_', ' '),",2070],["local name = print_name:gsub(\"_\", \"\")",1183],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["local name = string.gsub(result.print_name, \"_\", \" \")",1020],["local name_log = print_name:gsub(\"_\", \" \")",926],["local new_name = string.gsub(matches[2], '_', ' ')",891],["name = vname:gsub(\"_\", \" \")",844],["--      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/",720],["--      /   _____//  |_____________ _/  |______     ____  __ __  ______",720],["--      /        \\|  |  |  | \\// __ \\|  |  / __ \\_/ /_/  >  |  /\\___ \\",716]]},{"word":"_G","context":[["local _G = _G",888],["local _G = _G",888],["local _G = _G;",529],["local _G = _G;",529],["local base = _G",425],["setmetatable(ns, {__index = _G});",201],["local select        = _G.select;",192],["local assert        = _G.assert;",187],["local unpack        = _G.unpack;",172],["local string \t= _G.string;",133]]},{"word":"_M","context":[["return _M",2008],["local _M = {}",1190],["return _M;",282],["local mt = { __index = _M }",261],["local _M = {",215],["function _M:init()",152],["function _M:init(t)",133],["function _M:generate()",122],["function _M:generateList()",117],["function _M:init(t, no_default)",113]]},{"word":"__","context":[["--      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/",720],["--      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/",720],["--      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/",720],["--      \\_____  \\\\   __\\_  __ \\__  \\\\   __\\__  \\   / ___\\|  |  \\/  ___/",720],["--       _________ __                 __",720],["--     /_______  /|__|  |__|  (____  /__| (____  /\\___  /|____//____  >",720],["--      /   _____//  |_____________ _/  |______     ____  __ __  ______",720],["--      /   _____//  |_____________ _/  |______     ____  __ __  ______",720],["--     /_______  /|__|  |__|  (____  /__| (____  /\\___  /|____//____  >",720],["--     /_______  /|__|  |__|  (____  /__| (____  /\\___  /|____//____  >",720]]},{"word":"__index","context":[["self.__index = self",3954],["local obj = setmetatable({}, {__index = self});",531],["__index = {",490],["__index = function(t, k)",368],["__index = function(self, key)",336],["_base_0.__index = _base_0",330],["local mt = { __index = _M }",261],["self.__index = self;",234],["if type(self) ~= 'table' or self.__index ~= OBJDEF then",203],["setmetatable(ns, {__index = _G});",201]]},{"word":"_config","context":[["save_data(_config.moderation.data, data)",60497],["local data = load_data(_config.moderation.data)",19729],["for k, v in pairs(_config.enabled_plugins) do",2735],["-- Save the content of _config to config.lua",2734],["_config = load_config()",2734],["local disabled_chats = _config.disabled_plugin_on_chat",2730],["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729],["serialize_to_file(_config, './data/config.lua')",2714],["if not _config.disabled_plugin_on_chat then",800],["for v,user in pairs(_config.sudo_users) do",767]]},{"word":"_p","context":[["_p('')",1408],["_p('endif')",487],["_p(2,'};')",352],["_p(3,');')",286],["_p(3,'/>')",204],["_p(1,'</ItemGroup>')",196],["_p(3,'<Tool')",179],["_p(1,'<ItemGroup>')",172],["_p(1,'</PropertyGroup>')",162],["_p('\\t@echo $(notdir $<)')",108]]},{"word":"a","context":[["--is making a combined work based on Engine3.",29626],["--this exception also makes it possible to release a modified version",29626],["-- This function is called when tg receive a msg",2732],["-- Create a basic config.json file and saves it.",2728],["return a;",2717],["local a = torch.Timer()",1949],["a:reset()",1927],["tm.gpu = a:time().real",1872],["tm.cpu = a:time().real",1868],["alternateWeaponName = \"\", -- Name ex. 'a Vibrolance'",1760]]},{"word":"ability","context":[["function onAbilityCheck(player,target,ability)",1170],["local ability = event.ability",797],["local ability = event.ability",797],["function onUseAbility(player,target,ability)",648],["function onAbilityCheck(player, target, ability)",517],["function OnAbilityCheck(player,target,ability)",512],["function OnUseAbility(player, target, ability)",500],["local ability = keys.ability",360],["local ability = keys.ability",360],["function onUseAbility(player, target, ability)",256]]},{"word":"about","context":[["!about",1396],["Set a group's about text",1364],["!clean [modlist|rules|about]",1221],["if matches[2] == 'about' then",1129],["Will clear [modlist|rules|about] and set it to nil",1123],["!set about <text>",1069],["Set <text> as about",909],["data[tostring(target)][data_cat] = about",904],["local about = matches[3]",825],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] cleaned about\")",780]]},{"word":"abs","context":[["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["mytester:assertlt(error:abs():max(), precision_forward, 'error on state (forward) ')",675],["local abs = math.abs",347],["local abs = math.abs",347],["mytester:assertlt(werror:abs():max(), precision_backward, 'error on weight (backward) ')",286],["mytester:assert(math.abs(output:mean() - (1-p)) < 0.05, 'dropout output')",277],["mytester:assert(math.abs(gradInput:mean() - (1-p)) < 0.05, 'dropout gradInput')",277],["mytester:assertlt(berror:abs():max(), precision_backward, 'error on bias (backward) ')",220],["local err = (res1-res2):abs():max()",198],["err[i] = math.abs(res1[i] - res2[i])",184]]},{"word":"abstract","context":[["slotDescriptorFilename = \"abstract/slot/descriptor/tangible.iff\",",4963],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_datapad.iff\",",4160],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_ship.iff\",",750],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hair.iff\",",612],["slotDescriptorFilename = \"abstract/slot/descriptor/player.iff\",",593],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_both.iff\",",472],["slotDescriptorFilename = \"abstract/slot/descriptor/default_lightsaber.iff\",",340],["slotDescriptorFilename = \"abstract/slot/descriptor/default_weapon.iff\",",332],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_r.iff\",",190],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/shirt.iff\",",120]]},{"word":"action","context":[["local action = msg.action or {type=\"\"}",2723],["local action = msg.action or {type=\"\"}",2723],["msg.text = \"!!tgservice \" .. action.type",2723],["action = function(self, t)",2098],["local user = 'user#id'..msg.action.user.id",1463],["if action == 'chat_add_user_link' then",1010],["local action = msg.action.type",997],["local action = msg.action.type",997],["if msg.action.type == 'chat_created' then",988],["action = function(pos, node, active_object_count, active_object_count_wider)",839]]},{"word":"actions","context":[["-- Double ! to discriminate of normal actions",2725],["actions=accelerated_program_actions},",772],["actions = {",340],["-- Begin resolve username actions",281],["-- Start by reply actions",281],["--End resolve username actions",280],["--Begin non-channel_invite username actions",280],["--By ID actions",280],["--End non-channel_invite username actions",279],["-- End by reply actions",277]]},{"word":"active","context":[["[\"active\"] = 0,",1515],["[\"active\"] = 1,",546],["self.active = false",384],["if self.active then",306],["if core.shader.active(4) then",262],["self.active = true",235],["if active then",230],["active = false",216],["active = true",177],["\"active\", -- [6]",108]]},{"word":"add","context":[["-- custom add",2393],["*Only owner and mods can add bots in group",872],["*Only admins and sudo can add bots in group",780],["--add on bonuses (staff/day/weather/jas/mab/etc all go in this function)",512],["if matches[1] == 'add' and not matches[2] then",490],["» Only mods, owner and admin can add bots in group",470],["--add in target adjustment",436],["--add in final adjustments",383],["-- Create a wibox for each screen and add it",372],["n:add( nn.Linear(10,10) )",368]]},{"word":"addChild","context":[["scene:addChild(layer)",616],["scene:addChild(CreateBackMenuItem())",504],["ret:addChild(img)",444],["self._uiLayer:addChild(alert)",326],["ret:addChild(map, 0, kTagTileMap)",222],["layer:addChild(label)",185],["self._uiLayer:addChild(self._displayValueLabel)",168],["background:addChild(emitter, 10)",151],["layer:addChild(label1)",145],["menu:addChild(item1)",116]]},{"word":"addMod","context":[["target:addMod(MOD_DEX, 2);",383],["target:addMod(MOD_VIT, 2);",343],["target:addMod(MOD_AGI, 1);",289],["target:addMod(MOD_MND, -4);",261],["target:addMod(MOD_DEX, 3);",257],["target:addMod(MOD_VIT, -1);",222],["target:addMod(MOD_AGI, 2);",213],["target:addMod(MOD_MPHEAL, 1);",208],["target:addMod(MOD_DEX, 4);",206],["target:addMod(MOD_MND, -1);",186]]},{"word":"addStatusEffect","context":[["player:addStatusEffect(EFFECT_SIGNET,0,0,duration); -- Grant Signet",730],["player:addStatusEffect(EFFECT_AFTERMATH_LV3, 45, 0, 120, 0, 1);",145],["player:addStatusEffect(EFFECT_AFTERMATH_LV2, 40, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV1, 14, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV1, 13, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV2, 36, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV2, 32, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV2, 52, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV2, 24, 0, 180, 0, 1);",104],["player:addStatusEffect(EFFECT_AFTERMATH_LV1, 17, 0, 180, 0, 1);",104]]},{"word":"added","context":[["return send_large_msg(receiver, 'Group is not added.')",1193],["return 'Group is not added.'",1024],["return 'Group is already added.'",620],["print(\"group \"..msg.to.print_name..\"(\"..msg.to.id..\") added\")",503],["local text = matches[3]..\" added as owner\"",464],["local text = matches[2]..\" added as owner\"",456],["return send_large_msg(receiver, 'Group is added and you have been promoted as the owner ')",381],["print(plugin_name..' added to _config table')",378],["--lock/unlock group member. bot automatically kick new added user when locked",373],["print(\"group \"..msg.to.print_name..\"(\"..msg.to.id..\") added as a realm\")",369]]},{"word":"admin","context":[["return \"You're not admin\"",1568],["Promote an admin by id OR username *Sudo only",1360],["Demote an admin by id OR username *Sudo only",1227],["\"admin\",",633],["text = \"@\"..result.username..\" has been set as an admin\"",545],["» Only mods, owner and admin can add bots in group",470],["\"admin\"",462],["text = \"@\"..result.username..\" has been demoted from admin\"",368],["admin = 0,",278],["text = \"[ \"..result.peer_id..\" ] has been set as an admin\"",276]]},{"word":"admins","context":[["return \"For admins only!\"",3990],["-- superuser and admins only (because sudo are always has privilege)",2534],["local admins = 'admins'",962],["local admins = 'admins'",962],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["*Only admins and sudo can add bots in group",780],["return \"Only admins can do it for now\"",778],["data[tostring(admins)] = {}",769],["if not data[tostring(admins)] then",769]]},{"word":"after","context":[["-- Handle runtime errors after startup",308],["self.Entity:SetMoveType( MOVETYPE_VPHYSICS )   -- after all, gmod is a physics",222],["-- 3=Disconnected or warped out (if dyna is empty: launch 4 after 3)",156],["-- Called immediately after scene has moved onscreen:",154],["if matches[1] == '+' and is_sudo(msg) then --after changed to moderator mode, set only sudo",151],["if matches[1] == '-' and is_sudo(msg) then --after changed to moderator mode, set only sudo",147],["if matches[1] == '!plugins' and is_sudo(msg) then --after changed to moderator mode, set only sudo",139],["-- will get the text after the last \"/\" for filename",134],["minetest.after(0, function()",111],["if matches[1] == 'reload' and is_sudo(msg) then --after changed to moderator mode, set only sudo",106]]},{"word":"all","context":[["local s = f:read('*all')",2480],["\"all\",",1721],["Get a list of all realms",1363],["Get a list of all groups",1362],["print(tostring(io.popen(\"lua plugins/\"..v..\".lua\"):read('*all')))",1238],["Kick all members and delete realm",1223],["Kick all memebers and delete group",1222],["Send text to all groups",1187],["if matches[2] == 'all' then",775],["-- Check if all substeps are completed",583]]},{"word":"already","context":[["return \"Mute \"..msg_type..\" is already off\"",988],["return 'Group members are already locked'",890],["return 'Group name is already unlocked'",885],["return 'Group name is already locked'",884],["return \"SuperGroup mute \"..msg_type..\" is already on\"",865],["return send_large_msg(receiver, member_username..' is already a moderator.')",818],["return 'Arabic is already locked'",623],["return 'Group is already added.'",620],["return 'Group is already public'",527],["return 'Bots protection is already enabled'",472]]},{"word":"also","context":[["--this exception also makes it possible to release a modified version",29626],["You can also do it by reply",3331],["-- the images width and height, and also the frames number (row x col)",390],["-- This will also un-minimize",347],["return null -- so json.null() will also return null ;-)",94],["-- (in fact, also is able to scan numeric +- eqns, which is not",78],["-- Theme also uses Inconsolata font. On Ubuntu system this font",56],["-- This program and the accompanying materials are also made available",49],["local body = val2str(t, name, indent) -- this call also populates sref",48],["--- @return Table of named arguments. For a list of arguments see \"See also\".",48]]},{"word":"amount","context":[["amount = 10,",224],["[\"amount\"] = 0,",213],["local amount = args.amount or 1",156],["local amount = args.amount or 1",156],["amount = tonumber(amount)",130],["amount = tonumber(amount)",130],["name = \"amount\",",127],["if amount > 0 then",122],["if (amount == nil) then",122],["return amount",107]]},{"word":"an","context":[["Promote an admin by id OR username *Sudo only",1360],["Demote an admin by id OR username *Sudo only",1227],["-- See plugins/isup.lua as an example for cron",905],["text = \"@\"..result.username..\" has been set as an admin\"",545],["title = \"Oops, an error happened!\",",348],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["-- Put windows in a smart way, only if they does not set an initial position.",334],["-- Make sure we don't go into an endless error loop",325],["-- Insert an extensive description of each status here, in both languages",305]]},{"word":"and","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["-- A simple config with basic plugins and ourselves as privileged user",2852],["if plugin.pre_process and msg then",2735],["-- Start and load values",2734],["if disabled_chats and disabled_chats[receiver] then",2731],["if disabled_plugin == plugin_name and disabled then",2730],["-- Table exists and chat has disabled plugins",2730],["-- Call and postpone execution for cron plugins",2729],["-- Create a basic config.json file and saves it.",2728],["-- superuser and admins only (because sudo are always has privilege)",2534]]},{"word":"animation","context":[["animation = {",2264],["animation = \"creature_attack_light\",",724],["animation = \"\",",658],["type = \"animation\",",346],["-- This file will describe the frames used to load an animation",270],["animation =",173],["-- using special animation files.",155],["-- model animation",148],["-- Sprite animation file descriptor",118],["-- This files is following a special format compared to other animation scripts.",116]]},{"word":"any","context":[["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["-- Be careful: we use keycodes to make it works on any keyboard layout.",363],["return 'There aren\\'t any disabled plugins for this chat'",314],["return 'There aren\\'t any disabled plugins'",309],["-- Note: this mission does not make any system claims.",127],["o.placeholder = translate(\"any\")",109],["-- Next we count all the elements, ensuring that any non-indexed elements are not-encodable",95],["-- We consider any table an array if it has indexes 1..n for its n items, and no",93],["-- Set any #includes or other C++ code to be placed verbatim at the top of",84],["Race = \"any\",",81]]},{"word":"api","context":[["api.register {",2498],["local res, code = https.request(api..parameters)",323],["api = {",252],["local base_api = \"https://maps.googleapis.com/maps/api\"",220],["return lat, lng, api..parameters",220],["local api        = base_api .. \"/staticmap?\"",213],["local api      = base_api .. \"/geocode/json?\"",207],["local url , res = http.request('http://api.gpmod.ir/time/')",176],["local url = 'http://api.mathjs.org/v1/'",154],["..'Is api.mathjs.org up?'",134]]},{"word":"appearance","context":[["appearanceFilename = \"appearance/rock_pebbleclump_a3.apt\",",944],["appearanceFilename = \"appearance/eqp_tool_datapad.apt\",",600],["appearanceFilename = \"appearance/ship_component_weapon_s01.apt\",",368],["appearanceFilename = \"appearance/ship_component_capacitor_s01.apt\",",344],["appearanceFilename = \"appearance/defaultappearance.apt\",",340],["appearanceFilename = \"appearance/ship_component_engine_s01.apt\",",312],["appearanceFilename = \"appearance/ship_component_armor_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_shield_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_booster_s01.apt\",",302],["appearanceFilename = \"appearance/ship_component_droidinterface_s01.apt\",",286]]},{"word":"appearanceFilename","context":[["appearanceFilename = \"\",",5715],["appearanceFilename = \"appearance/rock_pebbleclump_a3.apt\",",944],["appearanceFilename = \"appearance/eqp_tool_datapad.apt\",",600],["appearanceFilename = \"appearance/ship_component_weapon_s01.apt\",",368],["appearanceFilename = \"appearance/ship_component_capacitor_s01.apt\",",344],["appearanceFilename = \"appearance/defaultappearance.apt\",",340],["appearanceFilename = \"appearance/ship_component_engine_s01.apt\",",312],["appearanceFilename = \"appearance/ship_component_shield_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_armor_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_booster_s01.apt\",",302]]},{"word":"apt","context":[["appearanceFilename = \"appearance/rock_pebbleclump_a3.apt\",",944],["appearanceFilename = \"appearance/eqp_tool_datapad.apt\",",600],["appearanceFilename = \"appearance/ship_component_weapon_s01.apt\",",368],["appearanceFilename = \"appearance/ship_component_capacitor_s01.apt\",",344],["appearanceFilename = \"appearance/defaultappearance.apt\",",340],["appearanceFilename = \"appearance/ship_component_engine_s01.apt\",",312],["appearanceFilename = \"appearance/ship_component_armor_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_shield_s01.apt\",",310],["appearanceFilename = \"appearance/ship_component_booster_s01.apt\",",302],["appearanceFilename = \"appearance/ship_component_droidinterface_s01.apt\",",286]]},{"word":"are","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- superuser and admins only (because sudo are always has privilege)",2534],["return \"You are not the owner of this group\"",1151],["return 'Group members are not locked'",892],["return 'Group members are already locked'",890],["-- The values below are the default values.  To be used for blue frog objects primarily",844],["assert.are.equal(200, status)",839],["are = false,",769],["-- Check if all substeps are completed",583],["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568]]},{"word":"area","context":[["setCombatArea(combat, area)",381],["area = true,",243],["local lat,lng,acc,types = get_latlong(area)",217],["function get_latlong(area)",217],["function get_staticmap(area)",215],["local parameters = \"address=\".. (URL.escape(area) or \"\")",215],["\"&markers=color:red\"..URL.escape(\"|\"..area)",214],["\"&center=\" .. URL.escape(area) ..",214],["combat:setArea(area)",191],["[\"area\"] = 27;",179]]},{"word":"arg","context":[["local arg = {...}",904],["if arg then",283],["arg = {",274],["return arg",250],["for k,v in pairs(arg) do",229],["opt = cmd:parse(arg or {})",205],["if self.__ptr == nil and arg[1] ~= \"__skip_ptr__\" then",197],["arg[k] = v.__ptr",197],["for line in io.lines(arg[1]) do",193],["arg='',",165]]},{"word":"args","context":[["args = {",2859],["local args = {...}",2030],["args = \"()\",",1474],["local spellId = args.spellId",961],["function mod:SPELL_AURA_APPLIED(args)",851],["local args = {}",739],["function mod:SPELL_CAST_START(args)",713],["if args:IsPlayer() then",713],["function mod:SPELL_CAST_SUCCESS(args)",523],["function mod:SPELL_AURA_REMOVED(args)",499]]},{"word":"arguments","context":[["arguments = {",722],["[\"arguments\"]={",390],["local arguments",268],["arguments = result['arguments']",246],["arguments = result['arguments']",246],["-- Make arguments easier to use",246],["pos, result['return'] = msrpctypes.unmarshall_int32(arguments, pos)",240],["onRun = function(client, arguments)",185],["-- assert that calling f with the arguments will raise an error",125],["--  Optional arguments:",100]]},{"word":"armor","context":[["armor = 0,",9302],["armor = 0, -- 0 = None; 1 = Light; 2 = Medium; 3 = Heavy",1352],["armor = 1,",699],["armor = 1, -- 0 = None; 1 = Light; 2 = Medium; 3 = Heavy",402],["armor = 2,",304],["armor = 200,",168],["armor = 100,",163],["armor = 3,",130],["armor = 80,",126],["-- health & armor",123]]},{"word":"arrangementDescriptorFilename","context":[["arrangementDescriptorFilename = \"\",",18432],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_datapad.iff\",",4160],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_ship.iff\",",750],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hair.iff\",",612],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_both.iff\",",472],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_r.iff\",",190],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/shirt.iff\",",120],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/neck.iff\",",114],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/pants.iff\",",112],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/belt.iff\",",96]]},{"word":"array","context":[["-- print(\"loot array: \"); -- debug",469],["return array",371],["local array = {}",298],["-- The OpenBoobs API sometimes returns an empty array",195],["-- @tparam table array an array",176],["-- @tparam table array an array",176],["-- create data array in moderation.json",163],["--- The null function allows one to specify a null value in an associative array (which is otherwise",94],["-- Determines whether the given Lua type is an array or a table / dictionary.",94],["-- We consider any table an array if it has indexes 1..n for its n items, and no",93]]},{"word":"as","context":[["-- A simple config with basic plugins and ourselves as privileged user",2852],["Set [value] as flood sensitivity",1224],["Will set id as owner",1129],["Save <text> as [value]",914],["Set <text> as about",909],["Set <text> as rules",908],["-- See plugins/isup.lua as an example for cron",905],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set [\"..matches[2]..\"] as owner\")",763],["text = \"@\"..result.username..\" has been set as an admin\"",545],["local text = matches[3]..\" added as owner\"",464]]},{"word":"assert","context":[["assert.falsy(err)",1717],["local assert = assert",1034],["local assert = assert",1034],["assert.equal(200, status)",959],["assert.are.equal(200, status)",839],["VERSION = assert(f:read('*a'))",620],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["assert.has_error(function()",585],["assert(false)",540],["assert(",477]]},{"word":"asserteq","context":[["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err (Batch) ')",241],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err (Batch) ')",237],["asserteq(",191],["mytester:asserteq((p[{ {101,110} }] - n.modules[2].bias):norm(), 0, 'error when using cloning+sharing')",138],["mytester:asserteq((p[{ {1,100} }] - n.modules[2].weight):norm(), 0, 'error when using cloning+sharing')",138],["mytester:asserteq(maxdiff(b,b_copy),0,'torch.gels changed b')",126]]},{"word":"assertlt","context":[["mytester:assertlt(err, precision, string.format(",2191],["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["mytester:assertlt(err,precision, 'error on weight ')",719],["mytester:assertlt(error:abs():max(), precision_forward, 'error on state (forward) ')",675],["mytester:assertlt(err , precision, 'error on bias ')",513],["mytester:assertlt(err , precision, 'error on weight ')",513],["mytester:assertlt(err,precision, 'error on weight [direct update] ')",474],["mytester:assertlt(err , precision, 'error on bias [direct update] ')",352]]},{"word":"at","context":[["local member_tag_username = string.gsub(member_username, '@', '(at)')",558],["return 'No groups at the moment'",410],["-- Set the windows at the slave,",358],["-- i.e. put it at the end of others instead of setting it master.",357],["-- Insert the quest status which is reached at the end of the quest",308],["message = message .. '- (at)' .. v .. ' [' .. k .. '] ' ..'\\n'",243],["return 'No Realms at the moment'",208],["reaper.Undo_BeginBlock() -- Begining of the undo block. Leave it at the top of your main function.",173],["// ========= For more information, visit us at http://www.unknownworlds.com =====================",167],["meta:get_string(\"owner\")..\" at \"..",167]]},{"word":"attacking🔸","context":[["🔹 1984 is attacking🔸 ...",8225],["🔹íղƒҽɾղɑӀ™ is attacking🔸 ...",3880],["🔹 1984 is attacking🔸 ..",15],["🔹 1984 is attacking🔸 ..🔹 1984 is attacking🔸 ...",11],["🔹 1984 is attacking🔸 ..🔹 1984 is attacking🔸 ...",11]]},{"word":"attacks","context":[["attacks = {",5193],["attacks = merge(brawlermaster,marksmanmaster)",825],["attacks = merge(brawlernovice,marksmannovice)",518],["attacks = {}",459],["attacks = merge(marksmannovice,brawlernovice)",426],["attacks = merge(riflemanmaster,pistoleermaster,carbineermaster,brawlermaster)",378],["attacks = merge(brawlermid,marksmanmid)",339],["attacks = brawlermaster",306],["attacks = merge(riflemanmaster,carbineermaster)",181],["attacks = merge(riflemanmaster,brawlermaster)",131]]},{"word":"audio","context":[["if matches[2] == 'audio' then",545],["\"%[(audio)%]\",",517],["if (game.settings.audio.gmtalkative == 1) then",130],["elseif typ == 'audio' then",130],["!mute [all|audio|gifs|photo|video]",129],["!unmute [all|audio|gifs|photo|video]",126],["t.modules.audio = true             -- Enable the audio module (boolean)",120],["t.modules.audio = true             -- Enable the audio module (boolean)",120],["love.audio.stop()",114],["!unmute [all|audio|gifs|photo|video|service]",105]]},{"word":"awesome","context":[["if awesome.startup_errors then",360],["text = awesome.startup_errors })",336],["awful.key({ modkey, \"Control\" }, \"r\", awesome.restart),",322],["-- Standard awesome library",321],["-- Check if awesome encountered an error during startup and fell back to",296],["awful.key({ modkey, \"Shift\"   }, \"q\", awesome.quit),",296],["awesome.connect_signal(\"debug::error\", function (err)",293],["{ \"restart\", awesome.restart },",285],["{ \"quit\", awesome.quit }",272],["{ \"manual\", terminal .. \" -e man awesome\" },",248]]},{"word":"awful","context":[["awful.client.focus.byidx(-1)",783],["local awful = require(\"awful\")",709],["local awful = require(\"awful\")",709],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["local tag = awful.tag.gettags(screen)[i]",516],["awful.button({ }, 4, awful.tag.viewnext),",438],["awful.button({ }, 4, awful.tag.viewnext),",438],["awful.button({ }, 5, awful.tag.viewprev)",433],["awful.button({ }, 5, awful.tag.viewprev)",433],["awful.placement.no_offscreen(c)",424]]},{"word":"b","context":[["table.sort(users_info, function(a, b)",1068],["return a.msgs > b.msgs",1064],["if a.msgs and b.msgs then",1064],["if b then",1034],["b = 1,",819],["return b",702],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["local b = 1",590],["while b ~= 0 do",549],["if not b then",327]]},{"word":"backward","context":[["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["local groundgrad = sconv:backward(input, gradOutput)",850],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["groundgrad = sconv:backward(input, gradOutput)",753],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["local rescuda = gconv:backward(input, gradOutput)",724],["rescuda = gconv:backward(input, gradOutput)",679],["local gradInput = module:backward(input, gradOutput)",478],["mytester:assertlt(werror:abs():max(), precision_backward, 'error on weight (backward) ')",286],["local gradInput = module:backward(input, input)",248]]},{"word":"ban","context":[["!ban [ username|id]",1278],["will return group ban list",897],["-- Save stats, ban user",628],["kick_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 3 times",358],["ban_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 7 times",357],["elseif get_cmd == 'ban' then",291],["return \"You can't ban your self !\"",281],["return \"you can't ban mods/owner/admins\"",274],["if matches[1]:lower() == 'ban' then-- /ban",250],["if matches[1]:lower() == 'ban' then-- /ban",250]]},{"word":"band","context":[["local band = bit.band",304],["local band = bit.band",304],["band=0,",246],["band=1,",162],["return bit.band(r,REASON_BATTLE)~=0",127],["local result = bit32.band(user.flags, binFlagIsBot)",105],["local bor, band, bnot, rshift, lshift= bit.bor, bit.band, bit.bnot, bit.rshift, bit.lshift",68],["local bor, band, bnot, rshift, lshift= bit.bor, bit.band, bit.bnot, bit.rshift, bit.lshift",68],["return bit.band(st,SUMMON_TYPE_FUSION)==SUMMON_TYPE_FUSION",60],["local chkf=bit.band(chkfnf,0xff)",58]]},{"word":"banned","context":[["if banned or is_gbanned(user_id) then -- Check it with redis",973],["local hash =  'banned:'..chat_id",965],["print('User is banned!')",813],["local banned = is_banned(user_id, msg.to.id)",790],["return 'Leaving users will not be banned'",604],["return 'Leaving users will be banned'",602],["-- Check if banned user joins chat",469],["local banned = is_banned(user_id, chat_id)",445],["-- Check if banned user joins chat by link",366],["-- banned user is talking !",361]]},{"word":"base","context":[["derivedFromTemplates = {\"object/object/base/shared_base_object.iff\", \"object/tangible/base/shared_tangible_base.iff\"}",1147],["derivedFromTemplates = {\"object/object/base/shared_base_object.iff\", \"object/tangible/base/shared_tangible_base.iff\"}",1147],["local common = require(\"base.common\")",845],["local base = loveframes.base",670],["local base = loveframes.base",670],["local base = _G",425],["Explode(base, sfxNone)",390],["return base",388],["require(\"base.common\")",372],["if parent ~= base then",294]]},{"word":"baseHAM","context":[["baseHAM = 24000,",1310],["baseHAM = 810,",542],["baseHAM = 113,",399],["baseHAM = 5000,",365],["baseHAM = 8400,",358],["baseHAM = 270,",320],["baseHAM = 180,",310],["baseHAM = 2400,",303],["baseHAM = 2900,",290],["baseHAM = 405,",276]]},{"word":"baseHAMmax","context":[["baseHAMmax = 30000,",1295],["baseHAMmax = 990,",542],["baseHAMmax = 138,",382],["baseHAMmax = 6100,",352],["baseHAMmax = 10200,",350],["baseHAMmax = 330,",320],["baseHAMmax = 220,",310],["baseHAMmax = 3000,",308],["baseHAMmax = 3500,",293],["baseHAMmax = 495,",279]]},{"word":"baseXp","context":[["baseXp = 9429,",1207],["baseXp = 356,",507],["baseXp = 62,",369],["baseXp = 187,",315],["baseXp = 831,",284],["baseXp = 292,",282],["baseXp = 113,",276],["baseXp = 1257,",274],["baseXp = 1102,",271],["baseXp = 2914,",262]]},{"word":"based","context":[["--is making a combined work based on Engine3.",29626],["An advance Administration bot based on yagop/telegram-bot",787],["--!The Make-like Build Utility based on Lua",199],["-- based on",91],["--add a scaling bonus or penalty based on difference of targets level from caster",90],["-- Determine final resist based on which thresholds have been crossed.",90],["An advanced administration bot based on TG-CLI written in Lua",83],["-- Retrieves the executable command name for a tool, based on the",70],["-- based on the regexp \"escapable\" in https://github.com/douglascrockford/JSON-js",70],["-- Updated Aug-09-2013 by Zerahn, based on bgwiki and gamerescape",65]]},{"word":"be","context":[["-- The values below are the default values.  To be used for blue frog objects primarily",844],["return 'Leaving users will not be banned'",604],["return 'Leaving users will be banned'",602],["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["-- The number of rows and columns of images, will be used to compute",390],["-- The client currently has the input focus, so it cannot be",341],["tame = 0,  -- Likely hood to be tamed",333],["shall not be used in advertising or otherwise to promote the sale, use or",314],["-- For each status insert a list of positions where the quest will continue, i.e. a new status can be reached there",308],["tame = 0.25,  -- Likely hood to be tamed",307]]},{"word":"been","context":[["return 'Group members has been locked'",888],["return 'Group photo has been unlocked'",888],["return 'Group members has been unlocked'",887],["return 'Group name has been locked'",882],["return 'Group name has been unlocked'",881],["return 'Group flood has been locked'",758],["return 'Group flood has been unlocked'",757],["return msg_type..\" has been unmuted\"",709],["return msg_type..\" has been muted\"",695],["return 'Arabic has been locked'",628]]},{"word":"below","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["-- The values below are the default values.  To be used for blue frog objects primarily",844],["-- Modify steps below for gameplay",453],["L[\"Click the button below to resize your chat frames, unitframes, and reposition your actionbars.\"] = true;",60],["..'...and more, below you can find the \"all commands\" button to get the whole list!\\n'",57],["-- NOTE: Mirrored in statePrototype below.",49],["menu_cb_warns = 'Use the row below to change the warns settings!',",43],["-- Set any #includes or other C++ code to be placed verbatim below the",42],["-- the web-page links above, and the 'AUTHOR_NOTE' string below are",41],["..'\\n*3rd row* and below\\n'",38]]},{"word":"bias","context":[["local err = jac.testJacobianParameters(module, input, module.bias, module.gradBias)",960],["local err = jac.testJacobianUpdateParameters(module, input, module.bias)",953],["for t,err in pairs(jac.testAllUpdate(module, input, 'bias', 'gradBias')) do",943],["'error on bias [%s]', t))",676],["mytester:assertlt(err , precision, 'error on bias ')",513],["gconv.bias = sconv.bias:cuda()",366],["gconv.bias = sconv.bias:cuda()",366],["mytester:assertlt(err , precision, 'error on bias [direct update] ')",352],["mytester:assertlt(err,precision, 'error on bias [direct update] ')",300],["mytester:assertlt(err,precision, 'error on bias ')",279]]},{"word":"bin","context":[["#!/usr/bin/env lua",1567],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["#!/usr/bin/lua",566],["local bin = require \"bin\"",239],["local bin = require \"bin\"",239],["#!/usr/bin/env luajit",229],["#!/usr/local/bin/lua",225],["#! /usr/bin/env lua",208],["#!/usr/bin/env tarantool",161],["\"bin\",",160]]},{"word":"bit","context":[["local bit = require(\"bit\")",455],["local bit = require(\"bit\")",455],["local band = bit.band",304],["local bit = require \"bit\"",303],["local bit = require \"bit\"",303],["local bor = bit.bor",176],["local rshift = bit.rshift",175],["local lshift = bit.lshift",147],["local bit = require('bit')",134],["local bit = require('bit')",134]]},{"word":"black","context":[["fucked by black boys",20000],["term.setBackgroundColor(colors.black)",516],["term.setTextColor(colors.black)",197],["InfoColour (\"black\")",74],["description = \"Plugin to manage bans, kicks and white/black lists.\",",55],["use_material('black')",54],["black = \"000\",",50],["..\"Color through text: red|green|blue|purple|black|white|gray\\n\"",48],["\"dye:black\",",47],["highlight_colour = \"black\",",44]]},{"word":"block","context":[["\"block\",",342],["text = text..\"\\n\"..serpent.block(v.message.action, {comment=false})",220],["reaper.Undo_BeginBlock() -- Begining of the undo block. Leave it at the top of your main function.",173],["return \"You can't block admins\"",168],["print(serpent.block(value, {comment=false}))",153],["<th colspan=\"2\"> area block </th><th> </th><th> Notes </th>",152],["if matches[1] == \"block\" then",149],["local text = serpent.block(result, {comment=false})",137],["block.initial.collision(id, oid)",136],["serialized = serpent.block(data, {",135]]},{"word":"body","context":[["local body = cjson.decode(response)",1198],["-- body",786],["-- button body",601],["<body>",512],["</body>",488],["\"location\" : \"body\",",332],["body = {",315],["local body = json.decode(response)",309],["assert.are.equal(2, utils.table_size(body))",267],["body = { INVEN = 10, MAINHAND=1, OFFHAND=1, BODY=1 },",257]]},{"word":"boneAmount","context":[["boneAmount = 0,",8152],["boneAmount = 2,",127],["boneAmount = 30,",118],["boneAmount = 35,",118],["boneAmount = 180,",87],["boneAmount = 5,",80],["boneAmount = 15,",75],["boneAmount = 10,",74],["boneAmount = 3,",69],["boneAmount = 25,",63]]},{"word":"boneType","context":[["boneType = \"\",",9333],["boneType = \"bone_mammal\",",1796],["boneType = \"bone_avian\",",472],["boneType = \"bone_mammal_tatooine\",",76],["boneType = \"bone_mammal_corellia\",",70],["boneType = \"bone_mammal_naboo\",",68],["boneType = \"bone_mammal_dathomir\",",65],["boneType = \"bone_mammal_rori\",",45],["boneType = \"bone_mammal_lok\",",44],["boneType = \"bone_mammal_yavin4\",",44]]},{"word":"bool","context":[["-- @return bool#bool ret (return value: bool)",3689],["-- @return bool#bool ret (return value: bool)",3689],["-- @return bool#bool ret (return value: bool)",3689],["type = 'bool',",1946],["-- @param #bool bool",1467],["-- @param #bool bool",1467],["if bool then",338],["if (bool) then",211],["-- @param #bool cleanup",178],["-- @param #bool enabled",176]]},{"word":"boolean","context":[["Type = \"boolean\",",1106],["type = \"boolean\"",677],["-- @paramsig number or boolean",520],["-- @return A boolean value for the result of the comparison.",503],["else -- number, string, boolean, etc",268],["-- @return A boolean value.",200],["-- @paramsig boolean",200],["type = \"boolean\",",188],["if type(result) == 'boolean' then",183],["{type = \"boolean\", name = \"var\", optional = false, },",157]]},{"word":"bot","context":[["-- wipe the data to allow the bot to read service messages",2726],["-- Before bot was started",2726],["require(\"./bot/utils\")",2686],["if redis:get(\"bot:markread\") == \"on\" then",1160],["if redis:get(\"bot:markread\") then",1160],["An advance Administration bot based on yagop/telegram-bot",787],["An advance Administration bot based on yagop/telegram-bot",787],["-- lock/unlock group name. bot automatically change group name when locked",374],["--lock/unlock group member. bot automatically kick new added user when locked",373],["--lock/unlock group photo. bot automatically keep group photo when locked",371]]},{"word":"bots","context":[["if matches[2] == 'bots' then",1084],["*Only owner and mods can add bots in group",872],["*Only admins and sudo can add bots in group",780],["Locks [member|name|bots|leaveing]",762],["Unlocks [member|name|bots|leaving]",761],["!lock [member|name|bots|leave]",751],["!unlock [member|name|bots|leave]",750],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked bots \")",521],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked bots \")",511],["» Only mods, owner and admin can add bots in group",470]]},{"word":"box","context":[["collisionVolumeType    = [[box]],",295],["leg2 = box.d",210],["leg1 = box.c",210],["return box",158],["leg1 = box.a",126],["leg2 = box.b",126],["box.snapshot()",113],["box.begin()",106],["local box = ZyMessageBoxEx:new()",97],["physic_shape = \"box\",",91]]},{"word":"boys","context":[["fucked by black boys",20000],["dialogId(\"d1-5-nevadi0\", \"font_viking5\", \"Take it easy, boys. Solo for Olaf!\")",11],["dialogId(\"d1-5-nevadi2\", \"font_viking5\", \"Never mind, boys. We can sing ourself, like in the old times!\")",11],["dialogId(\"d1-5-nevadi1\", \"font_viking5\", \"Never mind that, boys. We can sing ourself!\")",11]]},{"word":"br","context":[["!br [group_id] [text]",465],["!br 123456789 Hello !",278],["<br>",217],["-- js NA<br>",181],["<br/>",160],["-- <br>",140],["<br />",101],["\"<br />- \" ..",99],[".. [[<br />]]",87],["-- Author : Renato Maia <maia@inf.puc-rio.br>                                 --",84]]},{"word":"break","context":[["break",38342],["break;",5285],["if not name then break end",380],["if not line then break end",336],["if not ln then break end",156],["if (math.random(100) < 20 and mob:AnimationSub() == 0) then  -- 20% change to break that horn on crit",155],["else break end",141],["if not npos then break end",124],["do break end;",124],["if line == nil then break end",111]]},{"word":"buffer","context":[["local buffer = get_buffer()",642],["local buffer = {}",416],["return buffer",256],["local buffer = buffer",206],["local buffer = buffer",206],["local buffer = \"\"",175],["buffer[buflen] = \",\"",143],["client.buffer = \"\"",123],["buflen, msg = addpair (k, v, prev, indent, level, buffer, buflen, tables, globalorder)",105],["buffer = 0,",103]]},{"word":"bus","context":[["-- specify available bus cores",49],["-- bus will always let up eventually, don't bother with timeout",49],["require \"slimta.bus\"",22],["local bus = require \"ubus\"",15],["MAME_DIR .. \"src/devices/bus/scsi/s1410.h\",",14],["MAME_DIR .. \"src/devices/bus/cpc/mface2.cpp\",",14],["MAME_DIR .. \"src/devices/bus/ql/cst_qdisc.cpp\",",14],["MAME_DIR .. \"src/devices/bus/coco/coco_dwsock.h\",",14],["MAME_DIR .. \"src/devices/bus/c64/rex_ep256.h\",",14],["--@src/devices/bus/intv/slot.h,BUSES[\"INTV\"] = true",14]]},{"word":"but","context":[["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to deleted picture but failed  \")",485],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to change picture but failed  \")",477],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to change name but failed  \")",476],["-- Same as send_photo_from_url but as callback function",136],["-- Same as send_large_msg_callback but friendly params",133],["print('I can\\'t kick '..data.user..' but should be kicked')",103],["the developers, but NO GUARANTEE is made it will work for you",95],["-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...",93],["appreciated but is not required.",81],["\"-Wno-unused-but-set-variable\",",81]]},{"word":"button","context":[["-- button body",601],["return button",495],["type = 'button',",447],["awful.button({ }, 4, awful.tag.viewnext),",438],["awful.button({ }, 5, awful.tag.viewprev)",433],["-- button border",422],["- desc: called when the player presses a mouse button",404],["- func: mousepressed(x, y, button)",403],["awful.button({ modkey }, 1, awful.mouse.client.move),",390],["awful.button({ }, 1, function (c) client.focus = c; c:raise() end),",383]]},{"word":"by","context":[["#by ⚠️OffLiNeTeam⚠️",42236],["Fucked by SBSS Team",37368],["fucked by black boys",20000],["hacked by motafeghin",10773],["You can also do it by reply",3331],["Promote an admin by id OR username *Sudo only",1360],["Demote an admin by id OR username *Sudo only",1227],["-- Auto-Script: Requires Verification (Verified by Brawndo)",1075],["-- Sort users by msgs number",929],["--Automatically generated by SWGEmu Spawn Tool v0.12 loot editor.",796]]},{"word":"byte","context":[["\"byte\",",263],["local byte = string.byte",173],["local byte = string.byte",173],["if packet:byte() ~= proxy.COM_QUERY then",122],["function (c) return string.format (\"%%%02X\", string.byte(c)) end)",104],["local r,b='',x:byte()",100],["return string.format(\"%%%02X\", string.byte(c))",84],["local c2 = s:byte(i + 1)",82],["return string.format(\"\\\\u%04x\", c:byte())",78],["local sub, format, byte, char = _s.sub, _s.format, _s.byte, _s.char",75]]},{"word":"c","context":[["local e1=Effect.CreateEffect(c)",17703],["c:RegisterEffect(e1)",16552],["c:RegisterEffect(e2)",9014],["local e2=Effect.CreateEffect(c)",8648],["local c=e:GetHandler()",7669],["c:RegisterEffect(e3)",4833],["local e3=Effect.CreateEffect(c)",4351],["c:EnableReviveLimit()",2516],["c:RegisterEffect(e4)",2357],["local e4=Effect.CreateEffect(c)",2096]]},{"word":"call","context":[["local r = redis.call(\"SCAN\", cursor, \"MATCH\", KEYS[1])",491],["call =",339],["-- Do the call",251],["-- Internal, do not call",186],["-- automatically unloaded in low memory situations, or explicitly via a call to",170],["-- Finally call the callback",133],["if (not PlayFabClientApi.IsClientLoggedIn()) then error(\"Must be logged in to call this method\") end",108],["if event == \"call\" then",97],["return xpcall(call, eh)",90],["local function call() return method(ARGS) end",90]]},{"word":"callback","context":[["callback = function()",1432],["if callback then",694],["local function callback (extra , success, result)",625],["callback()",605],["-- cb_function and cb_extra are optionals callback",543],["return export_chat_link(receiver, callback, true)",541],["local function callback(extra, success, result)",436],["function(callback)",297],["chat_add_user(chat, user, callback, false)",281],["local function callback(cb_extra, success, result)",281]]},{"word":"called","context":[["-- This function is called when tg receive a msg",2732],["-- via bcnmLeave(1) or bcnmLeave(2). LeaveCodes 3 and 4 are called",567],["- desc: called when the player presses a mouse button",404],["- desc: called when the player releases a mouse button",344],["local called = false",157],["called = true",155],["--onBought = function(ply, shipment, ent) end, -- function that is called when the shipment is bought",93],["-- Check whether the active camera has entered a zone. To be called within Update()",84],["-- @param #function EventFunction The function to be called when the event occurs for the unit.",81],["OBJDEF:onEncodeError(\"JSON:encode must be called in method format\", etc)",73]]},{"word":"can","context":[["You can also do it by reply",3331],["**U can use both \"/\" and \"!\"",1358],["Only sudo users can run this command",927],["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only owner and mods can add bots in group",872],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["*Only admins and sudo can add bots in group",780],["return \"Only admins can do it for now\"",778],["*Only admins and sudo can use res, setowner, commands",768]]},{"word":"caster","context":[["function onSpellCast(caster,target,spell)",4427],["function onMagicCastingCheck(caster,target,spell)",2628],["function OnMagicCastingCheck(caster,target,spell)",1685],["local caster = event.caster",970],["local caster = event.caster",970],["if (caster:hasStatusEffect(EFFECT_COMPOSURE) == true and caster:getID() == target:getID()) then",517],["if (caster:hasStatusEffect(EFFECT_COMPOSURE) == true and caster:getID() == target:getID()) then",517],["local caster = keys.caster",426],["local caster = keys.caster",426],["dmg = addBonuses(caster,spell,target,dmg);",407]]},{"word":"category","context":[["category         = [[heaps]],",686],["category         = [[corpses]],",537],["category = 'vendor',",519],["category = 'general',",488],["category               = [[LAND]],",339],["category = \"chemistry\",",319],["category = \"corpses\",",296],["category \t= \"feature\",",295],["category = \"heaps\",",261],["category = 'cms',",248]]},{"word":"cb_extra","context":[["local receiver = cb_extra.receiver",7373],["local msg = cb_extra.msg",3696],["local data = cb_extra.data",3431],["local cb_extra = {",1043],["local chat_id = cb_extra.chat_id",746],["local function killchat(cb_extra, success, result)",614],["local function killrealm(cb_extra, success, result)",612],["local function username_id(cb_extra, success, result)",601],["local member = cb_extra.member",588],["send_large_msg(cb_extra.receiver, text)",560]]},{"word":"cbres_extra","context":[["local cbres_extra = {",4743],["resolve_username(username,  callbackres, cbres_extra)",951],["res_user(username, kick_ban_res, cbres_extra)",871],["return res_user(username, promote_demote_res, cbres_extra)",664],["resolve_username(username, kick_ban_res, cbres_extra)",609],["return resolve_username(username, callbackres, cbres_extra)",565],["return res_user(username,  callbackres, cbres_extra)",564],["--[[local cbres_extra = {",546],["resolve_username(username, callbackres, cbres_extra)]]",544],["resolve_username(username, callbackres, cbres_extra)",293]]},{"word":"cc","context":[["-- @parent_module cc",1818],["local s = cc.Director:getInstance():getWinSize()",984],["local layer = cc.Layer:create()",947],["local scene = cc.Scene:create()",771],["-- @param #cc.Node node",650],["-- @return Node#Node self (return value: cc.Node)",591],["-- @return Node#Node ret (return value: cc.Node)",483],["-- @return ParticleSystem#ParticleSystem self (return value: cc.ParticleSystem)",437],["-- @param #cc.Renderer renderer",412],["alert:setColor(cc.c3b(159, 168, 176))",369]]},{"word":"certificationsRequired","context":[["certificationsRequired = {},",15849],["certificationsRequired = {\"cert_ordnance_level1\"},",342],["certificationsRequired = {\"cert_ordnance_levelten\"},",276],["certificationsRequired = {\"cert_ordnance_level9\"},",252],["certificationsRequired = {\"cert_ordnance_level4\"},",232],["certificationsRequired = {\"cert_ordnance_level3\"},",216],["certificationsRequired = {\"cert_ordnance_level2\"},",202],["certificationsRequired = {\"cert_ordnance_level7\"},",196],["certificationsRequired = {\"cert_ordnance_level5\"},",188],["certificationsRequired = {\"cert_ordnance_level6\"},",186]]},{"word":"cfg","context":[["for cfg in project.eachconfig(prj) do",712],["-- @param cfg",595],["local cfg = require(\"luarocks.cfg\")",286],["local cfg = require(\"luarocks.cfg\")",286],["local cfg = test.getconfig(prj, \"Debug\")",152],["local sln, prj, cfg",148],["local cfg = premake.getconfig(prj, cfginfo.src_buildcfg, cfginfo.src_platform)",142],["for index, unit in ipairs(wesnoth.get_units(cfg)) do",140],["for _, cfg in ipairs(tr.configs) do",125],["local cfg = project.getfirstconfig(prj)",116]]},{"word":"chance","context":[["chance = 1,",1086],["{group = \"junk\", chance = 10000000},",909],["{group = \"wearables_common\", chance = 2000000},",881],["{group = \"pistols\", chance = 1000000},",757],["{group = \"carbines\", chance = 1000000},",692],["{group = \"rifles\", chance = 1000000},",676],["{group = \"color_crystals\", chance = 100000},",665],["{group = \"junk\", chance = 4000000},",662],["{group = \"loot_kit_parts\", chance = 2000000},",567],["{group = \"wearables_common\", chance = 1000000}",566]]},{"word":"chanceHit","context":[["chanceHit = 1,",1282],["chanceHit = 0.28,",576],["chanceHit = 0.31,",567],["chanceHit = 0.33,",553],["chanceHit = 0.32,",506],["chanceHit = 0.27,",460],["chanceHit = 0.36,",458],["chanceHit = 0.24,",447],["chanceHit = 0.3,",442],["chanceHit = 0.35,",429]]},{"word":"changed","context":[["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["local namehash = 'name:changed:'..msg.to.id..':'..msg.from.id",1587],["self.changed = true",636],["changed = true",539],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] has changed group description to [\"..matches[3]..\"]\")",503],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] has changed group rules to [\"..matches[3]..\"]\")",503],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] has changed group rules to [\"..matches[2]..\"]\")",271],["local changed = false",202],["send_large_msg(receiver, 'Photo changed!', ok_cb, false)",199],["if changed then",184]]},{"word":"channel","context":[["elseif msg.to.type == 'channel' then",1975],["if msg.to.type == 'channel' then",1439],["channel = get_receiver(msg),",1404],["local receiver = extra.channel",1400],["local group = string.gsub(receiver, 'channel#id', '')",1133],["local channel = 'channel#id'..result.to.peer_id",1083],["local channel = 'channel#id'..result.to.peer_id",1083],["return send_large_msg(\"channel#id\"..channel_id, \"Leave using kickme command\")",1056],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["local group_owner = data[tostring(channel)]['set_owner']",838]]},{"word":"channel_id","context":[["send_large_msg(channel_id, text)",2239],["return send_large_msg(\"channel#id\"..channel_id, \"Leave using kickme command\")",1056],["kick_user(user_id, channel_id)",854],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["channel_set_admin(channel_id, user_id, ok_cb, false)",839],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["local channel_id = \"channel#id\"..result.to.peer_id",560],["if is_momod2(member_id, channel_id) and not is_admin2(msg.from.id) then",560],["local channel_id = result.to.peer_id",560],["local channel_id = extra.channel",558]]},{"word":"char","context":[["-- @param #char char",440],["-- @param #char char",440],["str = str..string.char(math.random(97, 122));",173],["local char = string.char",165],["local char = string.char",165],["return 'RTL char. in names is already unlocked'",160],["return 'RTL char. in names has been unlocked'",160],["return 'RTL char. in names is already locked'",159],["return 'RTL char. in names has been locked'",159],["out:write(\"static const char *const \", name, \"[] = {\\n\")",148]]},{"word":"chat","context":[["if msg.to.type == 'chat' then",7144],["function on_chat_update (chat, what)",2738],["-- Table exists and chat has disabled plugins",2730],["-- Checks if plugin is disabled on this chat",2729],["print('\\27[36mNot valid: Encrypted chat\\27[39m')",2721],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["local chat_id = \"chat#id\"..result.id",2030],["send_large_msg('chat#id'..login_group_id, msg.text)",1818],["--It will send login codes to this chat",1817],["local hash = 'chat:'..chat_id..':users'",1812]]},{"word":"chat_id","context":[["local chat_id = msg.to.id",7420],["unmute(chat_id, msg_type)",2418],["mute(chat_id, msg_type)",2414],["if is_muted(chat_id, msg_type..': yes') then",2389],["if not is_muted(chat_id, msg_type..': yes') then",2386],["chat_id = msg.to.id,",2273],["local chat_id = \"chat#id\"..result.id",2030],["local hash = 'chat:'..chat_id..':users'",1812],["if not is_owner2(msg.from.id, chat_id) then",1258],["kick_user(user_id, chat_id)",1109]]},{"word":"check","context":[["then    --This is a check to see if the player has enough notes",403],["-- check moderation plugin",302],["then    --This is a check to see if the player has enough units",273],["Allowed = \"check-single-research\",",261],["local name = params[1] -- No syntax check. You get to keep the pieces.",224],["-- check",212],["<span class=\"select-menu-item-icon octicon octicon-check\"></span>",196],["}, check[[",183],["-- TODO: Add code to check all progress",175],["then    --This is a check to see if the player has enough bayld",155]]},{"word":"children","context":[["local children = self.children",1197],["local children = self.children",1197],["[\"children\"] = {",1134],["children = {",868],["for k, v in ipairs(children) do",857],["self.children = {}",291],["if children then",265],["children = (",206],["local children = {}",139],["for i=1,#children do",131]]},{"word":"chk","context":[["if chk==0 then return true end",3499],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",2436],["if chk==0 then",698],["if chk==0 then return e:GetHandler():CheckRemoveOverlayCard(tp,1,REASON_COST) end",595],["if chk==0 then return e:GetHandler():IsAbleToRemoveAsCost() end",409],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>-1",363],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_SZONE)>0",313],["if chk==0 then return e:GetHandler():IsReleasable() end",302],["if chk==0 then return e:GetHandler():IsAbleToGraveAsCost() end",256],["if chk==0 then return Duel.IsExistingTarget(Card.IsFaceup,tp,LOCATION_MZONE,LOCATION_MZONE,1,nil) end",201]]},{"word":"chunk","context":[["if chunk then",404],["if not chunk then",320],["return chunk",266],["chunk()",123],["__call = function(self, chunk, err)",111],["function(meta, chunk, eof)",108],["return function(chunk)",98],["if chunk == nil then",90],["return function(chunk, err)",82],["url = url:sub((chunk and #chunk or 0) + 1)",76]]},{"word":"cid","context":[["npcHandler.topic[cid] = 0",5888],["local player = Player(cid)",2314],["function onUse(cid, item, fromPosition, itemEx, toPosition)",1150],["function onCreatureAppear(cid)\t\t\tnpcHandler:onCreatureAppear(cid)\t\t\tend",1146],["function onCreatureAppear(cid)\t\t\tnpcHandler:onCreatureAppear(cid)\t\t\tend",1146],["function onCreatureDisappear(cid)\t\tnpcHandler:onCreatureDisappear(cid)\t\t\tend",1139],["function onCreatureDisappear(cid)\t\tnpcHandler:onCreatureDisappear(cid)\t\t\tend",1139],["}, cid)",1125],["function onCreatureSay(cid, type, msg)\t\tnpcHandler:onCreatureSay(cid, type, msg)\t\tend",1113],["function onCreatureSay(cid, type, msg)\t\tnpcHandler:onCreatureSay(cid, type, msg)\t\tend",1113]]},{"word":"class","context":[["ValueType = \"class\",",2977],["-- @class function",2014],["class              = [[CSimpleParticleSystem]],",936],["-- @class table",902],["require \"engine.class\"",865],["class Tx with",732],["function ITEM.Create( ply, class, pos )",677],["<pre class=\"prettyprint lang-lua\">",663],["class T with",656],["class              = [[CExpGenSpawner]],",647]]},{"word":"clear","context":[["Will clear [modlist|rules|about] and set it to nil",1123],["term.clear()",1102],["self:clear()",254],["clear()",243],["love.graphics.clear()",240],["--clear that table on the top of the plugins",140],["screen:clear()",131],["pilot.clear()",124],["clear(theme.background, theme.text)",114],["Screen.clear(TOP_SCREEN)",87]]},{"word":"clearFloraRadius","context":[["clearFloraRadius = 0,",24245],["clearFloraRadius = 25,",1366],["clearFloraRadius = 15,",312],["clearFloraRadius = 30,",165],["clearFloraRadius = 38,",85],["clearFloraRadius = 36,",33],["clearFloraRadius = 40,",24],["clearFloraRadius = 10,",14],["clearFloraRadius = 35,",14],["clearFloraRadius = 12,",14]]},{"word":"client","context":[["if client.focus then client.focus:raise() end",1626],["if client.focus then client.focus:raise() end",1626],["client.focus = c",1423],["if client.focus then",874],["awful.client.focus.byidx(-1)",783],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["client.focus:raise()",440],["awful.client.focus.byidx(1)",413],["awful.button({ modkey }, 1, awful.mouse.client.move),",390],["awful.button({ }, 1, function (c) client.focus = c; c:raise() end),",383]]},{"word":"clientDataFile","context":[["clientDataFile = \"\",",20590],["clientDataFile = \"clientdata/client_shared_lair_small.cdf\",",736],["clientDataFile = \"clientdata/weapon/client_melee_lightsaber_basic.cdf\",",374],["clientDataFile = \"clientdata/lair/shared_poi_all_lair_bones.cdf\",",162],["clientDataFile = \"clientdata/installation/battlefield/client_shared_base_destructible_building.cdf\",",112],["clientDataFile = \"clientdata/lair/shared_lair_fog_gray.cdf\",",56],["clientDataFile = \"clientdata/lair/shared_lair_evil_fire_red.cdf\",",54],["clientDataFile = \"clientdata/lair/shared_lair_fog_red.cdf\",",54],["clientDataFile = \"clientdata/lair/shared_lair_fog_green.cdf\",",54],["clientDataFile = \"clientdata/lair/shared_lair_fog_mustard.cdf\",",52]]},{"word":"clientGameObjectType","context":[["clientGameObjectType = 2049,",2127],["clientGameObjectType = 5,",1523],["clientGameObjectType = 8211,",1442],["clientGameObjectType = 512,",920],["clientGameObjectType = 4,",687],["clientGameObjectType = 8203,",432],["clientGameObjectType = 1073741824,",344],["clientGameObjectType = 536870913,",304],["clientGameObjectType = 8205,",217],["clientGameObjectType = 1073741829,",209]]},{"word":"clone","context":[["local output = module:forward(input):clone()",595],["local gconv = sconv:clone():cuda()",458],["local res2 = res1:clone():zero()",408],["local err = res1:clone():zero()",336],["return clone",240],["local gradOutput2 = output2:clone():uniform(0,1)",217],["local gradInput = module:backward(input, gradOutput):clone()",217],["local gradOutput = output:clone():uniform(0,1)",217],["local input2 = input1:clone()",164],["local target = input:clone():add(torch.rand(10))",160]]},{"word":"close","context":[["f:close()",14596],["file:close()",7765],["file.close()",1023],["sock:close()",668],["self:close()",661],["fd:close()",648],["fh:close()",543],["s:close()",535],["io.close(f)",435],["cmd:close()",405]]},{"word":"cmd","context":[["cmd:text()",1724],["cmd = torch.CmdLine()",594],["local result = cmd:read('*all')",440],["cmd:close()",405],["local cmd = io.popen(str)",342],["local cmd = torch.CmdLine()",326],["cmd:text('Options')",312],["cmd:text('Options:')",272],["os.execute(cmd)",230],["opt = cmd:parse(arg or {})",205]]},{"word":"code","context":[["--provided that you include the source code of that other code when",29626],["--provided that you include the source code of that other code when",29626],["local code = [[",422],["\\\"type\\\": \\\"code\\\"\\",420],["-- <code>",412],["-- </code>",408],["</code></pre>",407],["Source code:\t\thttps://github.com/GTWCode/GTW-RPG/",396],["if code ~= 200 then return nil end",375],["if code ~=200 then return nil  end",362]]},{"word":"collisionActionBlockFlags","context":[["collisionActionBlockFlags = 0,",21114],["collisionActionBlockFlags = 255,",5272]]},{"word":"collisionActionFlags","context":[["collisionActionFlags = 51,",15414],["collisionActionFlags = 0,",5069],["collisionActionFlags = 1,",3274],["collisionActionFlags = 255,",2629]]},{"word":"collisionActionPassFlags","context":[["collisionActionPassFlags = 1,",14582],["collisionActionPassFlags = 0,",11804]]},{"word":"collisionMaterialBlockFlags","context":[["collisionMaterialBlockFlags = 0,",20212],["collisionMaterialBlockFlags = 1,",6174]]},{"word":"collisionMaterialFlags","context":[["collisionMaterialFlags = 1,",21387],["collisionMaterialFlags = 0,",4999]]},{"word":"collisionMaterialPassFlags","context":[["collisionMaterialPassFlags = 0,",26386]]},{"word":"color","context":[["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["color = {",622],["type = \"color\",",532],["if color then",328],["local color",288],["\"&markers=color:red\"..URL.escape(\"|\"..area)",214],["statschildren[#statschildren+1] = Label:New{ caption = '', textColor = color.stats_header,}",194]]},{"word":"com","context":[["-- See http://www.ocdsoft.com/files/defense.xls",875],["-- See http://www.ocdsoft.com/files/speed.xls",875],["-- See http://www.ocdsoft.com/files/accuracy.xls",875],["-- See http://www.ocdsoft.com/files/certifications.xls",871],["https://github.com/SEEDTEAM/TeleSeed",603],["Source code:\t\thttps://github.com/GTWCode/GTW-RPG/",396],["Suggestions:\t\thttp://forum.404rq.com/mta-servers-development/",259],["Bugtracker: \t\thttp://forum.404rq.com/bug-reports/",259],["local base_api = \"https://maps.googleapis.com/maps/api\"",220],["* Author URI: http://extremraym.com",212]]},{"word":"combat","context":[["combat = {",1191],["mod:RegisterCombat(\"combat\")",954],["local combat = createCombatObject()",930],["return doCombat(cid, combat, var)",817],["local combat = Combat()",769],["return combat:execute(creature, var)",454],["setCombatArea(combat, area)",381],["[\"combat\"] = \"In Combat\";",314],["combat:setCallback(CALLBACK_PARAM_LEVELMAGICVALUE, \"onGetFormulaValues\")",295],["combat:setCondition(condition)",254]]},{"word":"combination","context":[["--cover the whole combination.",29626],["-- can be dodge, counterattack, or block or a combination",54],["cBlockArea can hold any combination of the following datatypes:<ul>",27],["(SetLevel()), or by using a string description of the enchantment combination. This string",27],["-- bad or unsupported combination of operand modes or sizes.",26],["-- TRANSLATORS: This is an access key combination. Localize, but do not change the key.",25],["translate(\"can not detect local IP. Please select a different Source combination\")",22],["\"The combination of these potions causes an explosion. You feel your health declining.\")",16],["providing convenient access to them. Cuberite supports multiple worlds in any combination of",16],["-- creates a function to combine to 32bit numbers using an 8bit combination function",16]]},{"word":"combined","context":[["--is making a combined work based on Engine3.",29626],["<p>The strategy parameter specifies how individual blocks are combined together, using the table below.",27],["translate(\"Dnsmasq is a combined <abbr title=\\\"Dynamic Host Configuration Protocol\" ..",26],["-- opts, combined options from .plugins and args",24],["-- This function is called whenever an item is combined to create a new item",22],["Although many node names are in combined-word form, the required form for new",20],["return combined",15],["-- This module just exports the 64 bit functions from the combined",15],["-- This module just sets 64 bit mode for the combined x86/x64 module.",13],["--- Create a combined dispatching target for non argv and argv requests.",12]]},{"word":"command","context":[["This command will send text to [group_id]",1180],["return send_large_msg(\"channel#id\"..channel_id, \"Leave using kickme command\")",1056],["Only sudo users can run this command",927],["» Only sudo users can run this command",247],["♻️ You can send your Ideas and messages to Us By sending them into bots account by this command :",232],["commandanswer (nick, gettext (\"This command is either disabled or you don't have access to it.\"))",191],["This command will send text to [group_id]✉️",183],["print(\"Invalid command\")",157],["command = {",145],["sendresponse(\"Error 005: Invalid Player\", command, executor)",135]]},{"word":"commands","context":[["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only admins and sudo can use res, setowner, commands",768],["» Only owner can use res,setowner,promote,demote and log commands",470],["**You can use \"#\", \"!\", or \"/\" to begin all commands",337],["-- commands.lua --",273],["Get commands list",223],["commands = {",194],["set_text(LANG, 'commands:0', 2)",134],["local commands = {}",123],["\"commands\",",123]]},{"word":"common","context":[["local common = require(\"base.common\")",845],["local common = require(\"base.common\")",845],["require(\"base.common\")",372],["require(\"scripts/globals/common\");",272],["common.HighInformNLS(User,",249],["common.HighInformNLS( User,",247],["local loveframes = require(path .. \".libraries.common\")",222],["return common.GetNLS(user, german, english)",204],["return common.GetNLS(user, Title[GERMAN], Title[ENGLISH])",204],["require \"common\"",184]]},{"word":"concat","context":[["local concat = table.concat",480],["local concat = table.concat",480],["return table.concat(",285],["local tconcat = table.concat",280],["return table.concat(txt, '\\n')",227],["local concat = nn.ConcatTable()",219],["local table_concat = table.concat",208],["return table.concat(t)",207],["file:write(table.concat(respbody))",178],["concat:add(nn.Identity())",132]]},{"word":"config","context":[["print ('saved config into ./data/config.lua')",3389],["print ('saved config into ./data/config.lua')",3389],["config = {",3229],["return config",3042],["-- A simple config with basic plugins and ourselves as privileged user",2852],["for v,user in pairs(config.sudo_users) do",2776],["-- Save the content of _config to config.lua",2734],["-- Returns the config from config.lua file.",2731],["-- Returns the config from config.lua file.",2731],["-- Create a basic config.json file and saves it.",2728]]},{"word":"configuration","context":[["-- Group configuration",1842],["-- Group configuration removal",907],["configuration \"Debug\"",857],["configuration \"Release\"",793],["configuration {}",747],["configuration( {} )",630],["configuration { }",604],["configuration { \"vs*\" }",416],["-- Realm configuration removal",395],["configuration \"windows\"",382]]},{"word":"containerType","context":[["containerType = 0,",24288],["containerType = 1,",1607],["containerType = 2,",400],["containerType = 4,",48],["containerType = 5,",22],["containerType = 3,",18]]},{"word":"containerVolumeLimit","context":[["containerVolumeLimit = 1,",14512],["containerVolumeLimit = 0,",11452],["containerVolumeLimit = 20,",116],["containerVolumeLimit = 50,",102],["containerVolumeLimit = -1,",57],["containerVolumeLimit = 100,",38],["containerVolumeLimit = 5,",36],["containerVolumeLimit = 10,",34]]},{"word":"content","context":[["-- Save the content of _config to config.lua",2734],["content = {",909],["return content",369],["local content = self.content",283],["local content = self.content",283],["content =",162],["SILE.process(content)",160],["if content then",144],["ne.content = function ()",136],["local content_type = headers[\"content-type\"]",135]]},{"word":"context","context":[["events, context, info = coroutine.yield()",167],["if context then",140],["-- @param cr A cairo context",110],["return context",109],["[\"context\"] = \"AddOn: AskMrRobot\",",100],["local rtNpcGrp = r2.Translator.getRtGroup(context, component.InstanceId)",92],["local context = {}",79],["local context = {",72],["local context = zmq.init(1)",70],["ctx = assert(is_zcontext(zmq.context()))",69]]},{"word":"control","context":[["return control",234],["control:SetLabel(name)",187],["j:control()",167],["if control then",125],["control.data.setFunc(value)",112],["control.width = \"fill\"",112],["control.UpdateValue = UpdateValue",104],["--control",92],["assert.are.equal(\"no-store\", headers[\"cache-control\"])",91],["if not control then",83]]},{"word":"conversationTemplate","context":[["conversationTemplate = \"\",",8126],["local conversationTemplate = LuaConversationTemplate(pConversationTemplate)",144],["return conversationTemplate:getScreen(optionLink)",129],["conversationTemplate = \"imperialRecruiterConvoTemplate\",",63],["conversationTemplate = \"rebelRecruiterConvoTemplate\",",57],["conversationTemplate = \"theme_park_rebel_mission_target_convotemplate\",",55],["conversationTemplate = \"heraldConvoTemplate\",",42],["conversationTemplate = \"theme_park_imperial_mission_target_convotemplate\",",38],["local conversation = LuaConversationTemplate(conversationTemplate)",38],["conversationTemplate = \"theme_park_rebel_mission_giver_convotemplate\",",30]]},{"word":"copy","context":[["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1897],["return copy",703],["-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",562],["[\"copy\"] = false,",478],["local copy",334],["copy = {}",326],["copy = orig",310],["input2[2]:copy(input)",303],["local copy = {}",259],["copy = {",239]]},{"word":"core","context":[["-- from the core when a player disconnects or the time limit is up, etc",567],["local lib = require(\"core.lib\")",311],["if core.shader.active(4) then",262],["if core.fov.distance(self.x, self.y, x, y) > 1 then return nil end",159],["core.register_craft({",156],["local Emitter = require('core').Emitter",147],["local packet = require(\"core.packet\")",147],["-- https://core.telegram.org/method/messages.sendMessage",142],["local Object = require('core').Object",141],["core.display.forceRedraw()",102]]},{"word":"coroutine","context":[["coroutine.yield()",1091],["return coroutine.wrap(function()",267],["local co = coroutine.running()",267],["return coroutine.yield()",190],["events, context, info = coroutine.yield()",167],["coroutine.wrap(function()",135],["local coroutine = coroutine",133],["local coroutine = coroutine",133],["local coroutine = require \"coroutine\"",111],["local coroutine = require \"coroutine\"",111]]},{"word":"cost","context":[["cost = 5,",331],["cost = 40,",326],["cost = 10,",249],["cost = 60,",183],["cost = 20,",162],["cost = 2,",159],["cost = 30,",158],["cost = 300,",149],["cost = 6,",146],["cost = 10000",132]]},{"word":"count","context":[["local count = 0",4106],["count = count + 1",4097],["count = count + 1",4097],["return count",1723],["count              = 1,",1387],["for s = 1, screen.count() do",1232],["count = trade:getItemCount();",1171],["if (MagicFlyer == true and count == 1) then",937],["for i = 1, count do",795],["count[cid] = getMoneyCount(msg)",629]]},{"word":"counter","context":[["[\"counter\"] = 0,",6344],["counter = counter + 1",844],["counter = counter + 1",844],["local counter = 0",641],["[\"counter\"] = 1,",423],["counter = counter + 1;",278],["counter = counter + 1;",278],["[\"counter\"] = 2,",258],["counter = 0",212],["[\"counter\"] = 3,",204]]},{"word":"cover","context":[["--cover the whole combination.",29626],["-- Table of layouts to cover with awful.layout.inc, order matters.",326],["filename = \"__base__/graphics/entity/pipe-covers/pipe-cover-west.png\",",73],["filename = \"__base__/graphics/entity/pipe-covers/pipe-cover-east.png\",",73],["filename = \"__base__/graphics/entity/pipe-covers/pipe-cover-south.png\",",70],["filename = \"__base__/graphics/entity/pipe-covers/pipe-cover-north.png\",",67],["\"cover\",",44],["-- ferries (doesn't cover routes tagged using relations)",40],["if cover then",27],["-- cover edges",18]]},{"word":"cpp","context":[["objectMenuComponent = {\"cpp\", \"LairMenuComponent\"},",680],["files { \"hello.cpp\" }",241],["<ClCompile Include=\"hello.cpp\">",123],["\"**.cpp\",",121],["RelativePath=\"hello.cpp\"",121],["MAME_DIR .. \"src/emu/emucore.cpp\",",115],["objectMenuComponent = {\"cpp\", \"TrainerMenuComponent\"}",100],["vpaths { [\"Platform Source\"] = { \"**.c\", \"**.cpp\", \"**.cs\", \"**.asm\" } }",91],["objectMenuComponent = {\"cpp\", \"LootSchematicMenuComponent\"},",77],["filter \"files:**.cpp\"",70]]},{"word":"cpu","context":[["tm.cpu = a:time().real",1868],["cpu.PC = (cpu.PC + 1) & 0xffff",204],["cpu.PC = (cpu.PC + 1) & 0xffff",204],["\"cpu\",",182],["name='cpu',",164],["cpu.PC = (cpu.PC + 2) & 0xffff",76],["cpu.PC = (cpu.PC + 2) & 0xffff",76],["contend_read_no_mreq(cpu, I_high | cpu.R, 1)",53],["contend_read_no_mreq(cpu, I_high | cpu.R, 1)",53],["name=\"cpu\",",52]]},{"word":"cr","context":[["cairo_stroke(cr)",836],["cr:stroke()",345],["cr:paint()",340],["cr:fill()",293],["cairo_fill(cr)",278],["cr:close_path()",249],["cr:restore()",199],["cr:save()",194],["cairo_move_to(cr,xc,yc)",189],["cairo_stroke (cr)",175]]},{"word":"create","context":[["-- If file doesn't exist, create it.",2724],["local layer = cc.Layer:create()",947],["create/revoke your group link",905],["local scene = cc.Scene:create()",771],["local layer = CCLayer:create()",496],["function create ()",414],["local alert = ccui.Text:create()",326],["local scene = CCScene:create()",295],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] attempted to create a new SuperGroup link\")",273],["function create()",249]]},{"word":"creature","context":[["height = 1, -- Size of creature",1799],["\"object/creature/player/human_female.iff\",",1745],["\"object/creature/player/sullustan_female.iff\",",1730],["\"object/creature/player/rodian_female.iff\",",1729],["\"object/creature/player/twilek_female.iff\",",1724],["\"object/creature/player/moncal_female.iff\",",1724],["\"object/creature/player/zabrak_male.iff\",",1669],["\"object/creature/player/sullustan_male.iff\",",1656],["\"object/creature/player/human_male.iff\",",1656],["\"object/creature/player/rodian_male.iff\",",1656]]},{"word":"creatureBitmask","context":[["creatureBitmask = 264,",4943],["creatureBitmask = PACK,",3540],["creatureBitmask = PACK + KILLER,",1869],["creatureBitmask = NONE,",1193],["creatureBitmask = PACK + HERD,",983],["creatureBitmask = HERD,",788],["creatureBitmask = PACK + KILLER + STALKER,",529],["creatureBitmask = PACK + STALKER,",454],["creatureBitmask = PACK + HERD + KILLER,",350],["creatureBitmask = KILLER,",229]]},{"word":"cron","context":[["plugin.cron()",2730],["if plugin.cron ~= nil then",2729],["-- Call and postpone execution for cron plugins",2729],["-- Only plugins with cron function",2729],["-- See plugins/isup.lua as an example for cron",905],["local function cron()",425],["cron = cron",267],["cron = cron",267],["cron = cron,",169],["cron = cron,",169]]},{"word":"cron_plugins","context":[["function cron_plugins()",2732],["postpone (cron_plugins, false, 60*5.0)",2687],["postpone (cron_plugins, false, 120)",2045],["postpone (cron_plugins, false, 5*60.0)",685],["postpone (cron_plugins, true, 60*5.0)",46]]},{"word":"cs","context":[["return cs;",2652],["local cs = -1;",1526],["cs = -1;",1170],["cs = 0x7534;",181],["cairo_surface_destroy(cs)",161],["cs = 0x0065;",130],["cs = 0;",129],["cs = 0x0002;",102],["local cr=cairo_create(cs)",92],["vpaths { [\"Platform Source\"] = { \"**.c\", \"**.cpp\", \"**.cs\", \"**.asm\" } }",91]]},{"word":"csid","context":[["--printf(\"CSID: %u\",csid);",32316],["function onEventFinish(player,csid,option)",27584],["function onEventUpdate(player,csid,option)",27159],["-- printf(\"CSID: %u\",csid);",17239],["--printf(\"onFinish CSID: %u\",csid);",615],["player:startEvent(csid,16,0,0,0,1,0,0,255); -- you have brought us supplies !",568],["player:startEvent(csid,1808,0,0,0,0,player:getRank(),0,0);",568],["player:startEvent(csid,arg1,0,0x3F0000,0,0,getArg6(player),0,0);",568],["--printf(\"CSID2: %u\",csid);",554],["--printf(\"onUpdate CSID: %u\",csid);",552]]},{"word":"ctx","context":[["return ctx",234],["local pos = ctx.pos",149],["-- @param ctx",119],["handler = function(ctx, val)",108],["local ctx = {}",95],["ctx.rel = nil",88],["if not opat then return unknown(ctx) end",86],["if ctx._cache[sign] then",74],["ctx = assert(is_zcontext(zmq.context()))",69],["local function unknown(ctx)",64]]},{"word":"cuda","context":[["input = input:cuda()",1544],["gradOutput = gradOutput:cuda()",767],["local gconv = sconv:clone():cuda()",458],["gconv.bias = sconv.bias:cuda()",366],["gconv.weight = sconv.weight:cuda()",366],["model:cuda()",243],["if cuda then",178],["criterion:cuda()",163],["local cinput = input:cuda()",156],["if opt.cuda then",140]]},{"word":"current","context":[["Grt a logfile of current group or realm",809],["Get a logfile of current group or realm",554],["'!info @<user_name>: Return the member @<user_name> information from the current chat.',",305],["-- get the current require path",218],["side = wesnoth.current.side,",212],["return current",188],["if current then",183],["local action = premake.action.current()",166],["current=getnext(current)",140],["current=getnext(current)",140]]},{"word":"custom","context":[["-- custom add",2393],["[\"custom\"] = 0,",1146],["print('custom'..NUM_MSG_MAX)",1053],["explosionGenerator      = [[custom:NONE]],",364],["[[custom:RAIDMUZZLE]],",239],["--custom rank ------------------------------------------------------------------------------------------------",178],["[[custom:NONE]],",163],["[[custom:dirt]],",147],["[[custom:blood_spray]],",143],["[[custom:blood_explode]],",140]]},{"word":"customizationVariableMapping","context":[["customizationVariableMapping = {},",18213]]},{"word":"d","context":[["if string.match(matches[2], '^%d+$') then",1902],["local p,d=Duel.GetChainInfo(0,CHAININFO_TARGET_PLAYER,CHAININFO_TARGET_PARAM)",910],["if string.match(targetuser, '^%d+$') then",708],["-- Area: Northern San d'Oria",609],["elseif string.match(matches[2], '^%d+$') then",583],["return d",519],["elseif msg.text:match(\"@[%a%d]\") then",484],["-- Area: Southern San d'Oria",461],["if string.match(user, '^%d+$') then",420],["local d=Duel.GetAttackTarget()",417]]},{"word":"data","context":[["save_data(_config.moderation.data, data)",60497],["save_data(_config.moderation.data, data)",60497],["local data = load_data(_config.moderation.data)",19729],["local data = load_data(_config.moderation.data)",19729],["return data",5556],["local data = cb_extra.data",3431],["local data = cb_extra.data",3431],["print ('saved config into ./data/config.lua')",3389],["data = {",3372],["if data[tostring(target)]['settings'] then",3153]]},{"word":"data_cat","context":[["local data_cat = 'rules'",3365],["local data_cat = 'description'",3061],["if not data[tostring(msg.to.id)][data_cat] then",1765],["data[tostring(msg.to.id)][data_cat] = nil",1675],["data[tostring(target)][data_cat] = rules",1186],["local rules = data[tostring(msg.to.id)][data_cat]",1092],["data[tostring(target)][data_cat] = about",904],["local about = data[tostring(msg.to.id)][data_cat]",672],["if data[tostring(msg.to.id)][data_cat] == nil then",562],["data[tostring(target)][data_cat] = about_text",392]]},{"word":"date","context":[["if msg.date < now then",2509],["if msg.date < os.time() - 5 then",226],["local dumptime = run_bash('date +%s')",126],["local date = os.date(\"!%a, %d %b %Y %H:%M:%S GMT\")",95],["local date = os.date(\"!%a, %d %b %Y %H:%M:%S GMT\")",95],["local text = (os.date(\"[ %c ]=>  \"..logtxt..\"\\n \\n\"))",90],["return os.time(os.date(\"!*t\"))",90],["local realday = tonumber(os.date(\"%j\")); -- %M for next minute, %j for next day",80],["local currentday = tonumber(os.date(\"%j\"));",77],["secs=os.date(\"%S\")",62]]},{"word":"db","context":[["db:close()",241],["return db",239],["check_db(db)",162],["if not db then",124],["db = self.db.profile",118],["db = self.db.profile",118],["local db = dbmng:getOne()",112],["for _, db in pairs(self.children) do",103],["local db",100],["if db then",92]]},{"word":"debug","context":[["if debug then",671],["-- print(\"[2]\", loot[2]); -- debug",469],["-- print(\"[1]\", loot[1]); -- debug",469],["-- print(\"loot array: \"); -- debug",469],["--[===[@debug@",356],["--@end-debug@]===]",341],["awesome.connect_signal(\"debug::error\", function (err)",293],["local debug = false",234],["debug.sethook()",226],["print(debug.traceback())",195]]},{"word":"decode","context":[["local data = JSON.decode(s)",2460],["local body = cjson.decode(response)",1198],["local data = json:decode(res)",485],["local jdat = json:decode(url)",324],["local body = json.decode(response)",309],["local jdat = JSON.decode(jstr)",256],["local parsed_response = cjson.decode(response)",250],["local jdat = json:decode(jstr)",224],["local data = json:decode(res)[1]",197],["local jdat = json:decode(SEED_gbans)",129]]},{"word":"def","context":[["groups = def.groups,",207],["if def then",205],["sounds = def.sounds,",178],["def                = [[LASER]],",173],["def    = false,",165],["description = def.description,",156],["def    = 1,",116],["local def = 0;",112],["inventory_image = def.inventory_image,",112],["def                = [[SPORES]],",109]]},{"word":"default","context":[["sounds = default.node_sound_stone_defaults(),",2632],["sounds = default.node_sound_wood_defaults(),",2292],["sounds = default.node_sound_leaves_defaults(),",2207],["\"default\" : \"\",",1385],["{name=real, default=1, invisible=true},",1054],["wherein        = \"default:stone\",",937],["{{name=Tensor, default=true, returned=true, method={default='nil'}},",870],["{{name=Tensor, default=true, returned=true, method={default='nil'}},",870],["{{name=Tensor, default=true, returned=true},",849],["-- The values below are the default values.  To be used for blue frog objects primarily",844]]},{"word":"del","context":[["redis:del(hash)",2159],["redis:del(\"bot:photo\")",248],["redis:del(\"bot:markread\")",233],["elseif get_cmd == \"del\" then",228],["get_cmd = 'del',",228],["if matches[1] == 'del' and is_momod(msg) then",197],["del(info)",173],["redis:del(hash, var_name)",158],["redis:del(\"sticker:photo\")",138],["redis:del(\"photo:sticker\")",137]]},{"word":"delMod","context":[["target:delMod(MOD_DEX, 2);",383],["target:delMod(MOD_VIT, 2);",348],["target:delMod(MOD_AGI, 1);",289],["target:delMod(MOD_MND, -4);",261],["target:delMod(MOD_DEX, 3);",257],["target:delMod(MOD_VIT, -1);",227],["target:delMod(MOD_AGI, 2);",213],["target:delMod(MOD_MPHEAL, 1);",208],["target:delMod(MOD_DEX, 4);",206],["target:delMod(MOD_MND, -1);",186]]},{"word":"delay","context":[["[\"delay\"] = 0,",996],["function mod:OnCombatStart(delay)",710],["delay = 1.5",310],["delay = 1.5,",244],["delay                               = {0.000000};",234],["delay              = 0,",177],["berserkTimer:Start(-delay)",173],["if delay > 0 then",113],["delay = 0.5",100],["delay = 250,",92]]},{"word":"delete","context":[["Kick all members and delete realm",1223],["Kick all memebers and delete group",1222],["delete{ dir = \"build\" },",152],["Kick all members and delete realm⛔️⛔️",140],["-- Send document to user and delete it when finished.",137],["Kick all memebers and delete group ⛔️⛔️",137],["-- Send image to user and delete it when finished.",136],["m.uci:delete(\"wireless\", section, \"wds\")",110],["delete{ dir = \"build_doc\" },",93],["delete{ dir = \"include\" },",89]]},{"word":"demote","context":[["!demote [username]",1299],["*Only owner can use res,setowner,promote,demote and log commands",875],["elseif get_cmd == \"demote\" then",667],["local function demote(receiver, member_username, member_id)",572],["return demote(receiver, member_username, member_id)",563],["elseif mod_cmd == 'demote' then",515],["return \"You can't demote yourself\"",486],["if matches[1] == 'demote' and matches[2] then",476],["» Only owner can use res,setowner,promote,demote and log commands",470],["return \"Only owner can demote\"",445]]},{"word":"depends","context":[["hidden:depends({mode=\"ap\"})",213],["bssid:depends({mode=\"adhoc\"})",176],["hidden:depends({mode=\"adhoc\"})",151],["depends = \"init\",",121],["depends = \"provide\",",119],["isolate:depends({mode=\"ap\"})",114],["bssid:depends({mode=\"wds\"})",110],["ml:depends({macpolicy=\"allow\"})",109],["ml:depends({macpolicy=\"deny\"})",109],["hidden:depends({mode=\"ap-wds\"})",107]]},{"word":"deprecated","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["print(\"\\n********** \\n\"..old_name..\" was deprecated please use \".. new_name .. \" instead.\\n**********\")",59],["and in games that have saplings; both are deprecated but not",58],["-- @deprecated",52],["return function (_M, private, deprecated)",51],["-- deprecated",50],["--functions of CCFileUtils will be deprecated end",33],["function GS.new(t) return t or {} end -- constructor - deprecated!",30],["--functions of CCControl will be deprecated end",30],["--functions of CCDirector will be deprecated end",28]]},{"word":"desc","context":[["- desc: draws the object",424],["- desc: called when the player presses a mouse button",404],["- desc: initializes the object",359],["- desc: updates the object",351],["- desc: called when the player releases a mouse button",344],["desc = {",287],["desc = \"knife_desc\"",192],["description = desc,",163],["desc:",161],["[\"desc\"] =\t{",143]]},{"word":"description","context":[["description = \"\",",5145],["local data_cat = 'description'",3061],["Group description",1133],["type = \"description\",",947],["return 'Set group description to:\\n'..about",768],["return 'No description available.'",666],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group description\")",514],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] has changed group description to [\"..matches[3]..\"]\")",503],["description = description,",409],["description = description,",409]]},{"word":"destination","context":[["function _send_msg(destination, text)",2729],["send_large_msg(destination, text)",2728],["-- DEPRECATED, use send_large_msg(destination, text)",2726],["destination = destination,",622],["destination = destination,",622],["local destination = cb_extra.destination",304],["local destination = cb_extra.destination",304],["send_msg(destination, text, ok_cb, false)",137],["function send_large_msg(destination, text)",137],["send_msg(destination, my_text, send_large_msg_callback, cb_extra)",135]]},{"word":"detailedDescription","context":[["detailedDescription = \"string_id_table\",",5784],["detailedDescription = \"\",",1763],["detailedDescription = \"@building_detail:base_military_building\",",932],["detailedDescription = \"@string_table:pristine wall\",",804],["detailedDescription = \"@item_n:ship_attachment\",",656],["detailedDescription = \"@string_table:item\",",636],["detailedDescription = \"@hair_detail:hair\",",432],["detailedDescription = \"@space/space_item:generic_capacitor_d\",",256],["detailedDescription = \"@space/space_item:generic_armor_d\",",256],["detailedDescription = \"@space/space_item:generic_booster_d\",",254]]},{"word":"details","context":[["--more details.",29626],["details.",2294],["-- Mission details",163],["5-View details ^",147],["-- Please see LICENCE.txt for details.",114],["details = \"¸Þ¸ð¸®¾ó ´øÀüÀ» ³¡±îÁö ÁøÇà\"",53],["details = \"메모리얼 던전을 끝까지 진행\"",53],["-- more details.",52],["local details = {}",39],["-- Set mission details",38]]},{"word":"device","context":[["local Screen = require(\"device\").screen",338],["local Device = require(\"device\")",282],["if s.device then",190],["num[s.device] = num[s.device] and num[s.device] + 1 or 1",158],["num[s.device] = num[s.device] and num[s.device] + 1 or 1",158],["num[s.device] = num[s.device] and num[s.device] + 1 or 1",158],["device = self,",156],["local device\t= require \"device\"",117],["local device\t= require \"device\"",117],["device.waitForLinks()",94]]},{"word":"devices","context":[["local devices = {}",94],["devices = {",88],["MAME_DIR .. \"src/devices\",",74],["for i, dev in ipairs(devices) do",42],["MAME_DIR .. \"src/devices\", -- accessing imagedev from debugger",37],["is_charging_file = \"/sys/devices/system/wario_charger/wario_charger0/charging\",",37],["batt_capacity_file = \"/sys/devices/system/wario_battery/wario_battery0/battery_capacity\",",37],["for k, v in pairs(luci.sys.net.devices()) do",36],["MAME_DIR .. \"src/devices/sound/ay8910.h\",",35],["MAME_DIR .. \"src/devices/sound/ay8910.cpp\",",35]]},{"word":"dialogId","context":[["dialogId(\"k1-pap-kruci\", \"font_parrot\", \"Good grrrief!\")",22],["dialogId(\"k1-pap-problem\", \"font_parrot\", \"Trrricky prrroblem, isn’t it?\")",22],["dialogId(\"k1-pap-trhnisi\", \"font_parrot\", \"Beat it, sirrr...\")",22],["dialogId(\"k1-pap-sucharek\", \"font_parrot\", \"Polly wants a crrracker!\")",22],["dialogId(\"k1-pap-3xkruty\", \"font_parrot\", \"Crrruel, crrruel, crrruel Captain Silverrrr...\")",22],["dialogId(\"k1-pap-kruty\", \"font_parrot\", \"Crrruel Captain Silverrrr...\")",22],["dialogId(\"1st-v-ven\", \"font_big\", \"We should go and have a look outside.\")",14],["dialogId(\"1st-m-navod8\", \"font_small\", \"Your goal should be to get both of us outside.\")",14],["dialogId(\"1st-v-navod1\", \"font_big\", \"You can control us with arrow keys and use the space bar to switch fish.\")",13],["dialogId(\"1st-m-navod6\", \"font_small\", \"...we’ll follow your clicks.\")",13]]},{"word":"diet","context":[["diet = HERBIVORE,",7552],["diet = CARNIVORE,",2812],["diet = NONE,",37],["LuaSrcDiet: Puts your Lua 5.1 source code on a diet",14]]},{"word":"dir","context":[["dir                = [[dir]],",280],["dir                = [[dir]],",280],["local dir = require(\"luarocks.dir\")",240],["local dir = require(\"luarocks.dir\")",240],["if dir then",200],["emitvector         = [[dir]],",181],["return dir",167],["delete{ dir = \"build\" },",152],["mkdir{ dir = \"build\" },",121],["mkdir{ dir = \"include\" },",120]]},{"word":"direction","context":[["direction=\"l\",",16334],["direction=\"on\",",4447],["direction=\"nsm\",",1290],["direction=\"al\",",1200],["direction=\"r\",",660],["direction=\"bn\",",176],["direction=\"en\",",131],["direction = 1",110],["-- Read WASD keys and move the camera scene node to the corresponding direction if they are pressed",109],["if UIScrollView.DIRECTION_VERTICAL == self.direction then",108]]},{"word":"disable","context":[["print(\"disable: \"..matches[2])",384],["elseif matches[3] == 'disable' then",349],["print(\"disable \"..plugin..' on this chat')",338],["description = \"Plugin to manage other plugins. Enable, disable or reload.\",",304],["--disable",186],["if matches[1] == 'disable' then",174],["mp:value(\"\", translate(\"disable\"))",161],["if matches[1] == 'disable' and matches[3] == 'chat' then",147],["disable = {",139],["\"!plugins disable [plugin] chat : disable plugin only this chat.\",",130]]},{"word":"disabled","context":[["if disabled_plugin == plugin_name and disabled then",2730],["-- Table exists and chat has disabled plugins",2730],["-- Checks if plugin is disabled on this chat",2729],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["disabled = 0,",653],["return 'Bots protection is already disabled'",466],["return 'Bots protection has been disabled'",464],["--  ✔ enabled, ❌ disabled",328],["return 'There aren\\'t any disabled plugins for this chat'",314]]},{"word":"disabled_chats","context":[["if disabled_chats and disabled_chats[receiver] then",2731],["if disabled_chats and disabled_chats[receiver] then",2731],["local disabled_chats = _config.disabled_plugin_on_chat",2730],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729]]},{"word":"disabled_plugin","context":[["if disabled_plugin == plugin_name and disabled then",2730],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["if plugins[disabled_plugin].hidden then",298],["print('Plugin '..disabled_plugin..' is disabled on this chat')",295],["--        local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",16]]},{"word":"disabled_plugin_on_chat","context":[["local disabled_chats = _config.disabled_plugin_on_chat",2730],["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729],["if not _config.disabled_plugin_on_chat then",800],["if not _config.disabled_plugin_on_chat[receiver] then",764],["_config.disabled_plugin_on_chat = {}",398],["_config.disabled_plugin_on_chat[receiver][plugin] = true",384],["_config.disabled_plugin_on_chat[receiver][plugin] = false",382],["_config.disabled_plugin_on_chat[receiver] = {}",381],["if not _config.disabled_plugin_on_chat[receiver][plugin] then",381],["if not _config.disabled_plugin_on_chat[get_receiver(msg)] then",34]]},{"word":"display","context":[["Display*\t\t/* display */,",296],["cairo_stroke(display)",235],["display.setStatusBar( display.HiddenStatusBar )",167],["display.setStatusBar( display.HiddenStatusBar )",167],["cairo_set_line_width(display, graph_thickness)",126],["-- Construct new Text object, set string to display and font to use",125],["t.window.display = 1               -- Index of the monitor to show the window in (number)",122],["display = '<', color_r=255, color_g=255, color_b=0,",116],["-- Called prior to the removal of scene's \"view\" (display group)",111],["Angle = Angle(90,90,90),---- Allows for manual rotation on the display",110]]},{"word":"dmg","context":[["return dmg;",4988],["target:delHP(dmg);",3739],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_SLASH,info.hitslanded);",738],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_SLASH,info.hitslanded);",738],["dmg = dmg*resist;",574],["dmg = dmg*resist;",574],["if (dmg < 0) then",489],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_BLUNT,info.hitslanded);",433],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_BLUNT,info.hitslanded);",433],["dmg = addBonuses(caster,spell,target,dmg);",407]]},{"word":"do","context":[["do",32775],["while true do",15548],["for k,v in pairs(result.members) do",6347],["for name, plugin in pairs(plugins) do",5467],["for i = 1,nloop do",3456],["You can also do it by reply",3331],["for v,user in pairs(config.sudo_users) do",2776],["for name,plugin in pairs(plugins) do",2735],["for k, v in pairs(_config.enabled_plugins) do",2735],["for k, pattern in pairs(plugin.patterns) do",2732]]},{"word":"doesn","context":[["-- If file doesn't exist, create it.",2724],["-- If config.lua doesn't exist",2724],["return \"Plugin doesn't exists\"",293],["-- If file doesn't exists",156],["-- If gbans.lua doesn't exist",134],["-- Note: testJacobian doesn't support table inputs, and rather than re-write",101],["-- Only remove TP if the player doesn't have Trance.",85],["backup    = \"\", --// backup class, if this class doesn't work (old cards,ati's,etc.)",82],["-- warning The physics body doesn't support this.",67],["-- Don't worry, this module doesn't change anything in them.",62]]},{"word":"done","context":[["test.done()",607],["done = true",554],["done()",544],["[\"done\"] = 0,",509],["local done = false",353],["if done then",251],["done=true",201],["-- done",176],["while not done do",167],["return \"done\"",161]]},{"word":"draw","context":[["function love.draw()",1172],["v:draw()",466],["- func: draw()",455],["love.graphics.draw(image, x, y, 0, width, scaley)",448],["if draw then",424],["-- set the object's draw order",394],["function newobject:draw()",394],["draw(self)",378],["local draw = self.Draw",378],["draw()",356]]},{"word":"drawtype","context":[["drawtype = \"nodebox\",",2699],["drawtype = \"plantlike\",",2018],["drawtype = \"mesh\",",455],["drawtype = \"signlike\",",298],["drawtype = \"front\",",294],["drawtype = \"allfaces_optional\",",284],["drawtype = \"glasslike\",",268],["drawtype = \"raillike\",",219],["drawtype = \"liquid\",",167],["drawtype = \"flowingliquid\",",163]]},{"word":"drivers","context":[["-- shared across a number of drivers",50],["MAME_DIR .. \"src/mame/drivers/astrocde.cpp\",",38],["-- the list of drivers",36],["MAME_DIR .. \"src/mame/drivers/cps1.cpp\",",34],["MAME_DIR .. \"src/mame/drivers/neogeo.cpp\",",34],["-- manufacturer-specific groupings for drivers",34],["MAME_DIR .. \"src/mame/drivers/konamim2.cpp\",",33],["MAME_DIR .. \"src/mame/drivers/naomi.cpp\",",33],["MAME_DIR .. \"src/mame/drivers/jaguar.cpp\",",32],["MAME_DIR .. \"src/mame/drivers/3do.cpp\",",32]]},{"word":"drop","context":[["drop = \"\",",1132],["drop = {",945],["[\"4\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",598],["[\"1\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",584],["[\"2\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",576],["[\"3\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",574],["[\"5\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",483],["space:drop()",337],["s:drop()",282],["[\"1\"] = {   [\"drop\"] = \"O\", [\"style\"] = \"\"},",256]]},{"word":"dt","context":[["function love.update(dt)",992],["function update(me, dt)",738],["v:update(dt)",408],["function newobject:update(dt)",394],["update(self, dt)",367],["entity_updateMovement(me, dt)",261],["function widget:Update(dt)",230],["function update(dt)",158],["self.fireTimer = self.fireTimer - args.dt",138],["timer = timer + dt",124]]},{"word":"duration","context":[["duration = \"100\"",1268],["player:addStatusEffect(EFFECT_SIGNET,0,0,duration); -- Grant Signet",730],["duration = \"0\"",557],["duration = duration * 3;",534],["duration = duration * 3;",534],["duration = duration * 2;",527],["duration = duration * 2;",527],["local duration = (player:getRank() + getNationRank(player:getNation()) + 3) * 3600;",504],["local duration = t.getDuration(self, t)",427],["local duration = 120;",396]]},{"word":"dynamically","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["be used to precache dynamically-added datadriven abilities instead of items.  PrecacheUnitByNameAsync will",29],["The contents (i.e. pixel data) of a cMap are dynamically updated by each",27],["-- Action name -> action number (dynamically generated below).",26],["-- Give this database the metatable so it initializes dynamically",25],["\"a fixed hostname while having a dynamically changing \" ..",24],["-- Special callback to dynamically insert lines after end of processing.",22],["local multTargetReduction = 1.0; -- TODO: Make this dynamically change, temp static till implemented.",17],["\"/wd4592\", -- warning C4592: symbol will be dynamically initialized (implementation limitation)",14],["-- if height not given, dynamically calculate it",13]]},{"word":"e","context":[["local c=e:GetHandler()",7669],["local e1=Effect.CreateEffect(e:GetHandler())",3195],["if tc:IsRelateToEffect(e) then",1920],["if not e:GetHandler():IsRelateToEffect(e) then return end",966],["if not e:GetHandler():IsRelateToEffect(e) then return end",966],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,e:GetHandler(),1,0,0)",932],["if not c:IsRelateToEffect(e) then return end",682],["e:GetHandler():RemoveOverlayCard(tp,1,1,REASON_COST)",649],["if e then",626],["if chk==0 then return e:GetHandler():CheckRemoveOverlayCard(tp,1,REASON_COST) end",595]]},{"word":"e1","context":[["local e1=Effect.CreateEffect(c)",17703],["c:RegisterEffect(e1)",16552],["e1:SetType(EFFECT_TYPE_SINGLE)",6530],["e1:SetType(EFFECT_TYPE_ACTIVATE)",5739],["e1:SetCode(EVENT_FREE_CHAIN)",5290],["e1:SetRange(LOCATION_MZONE)",3692],["e1:SetProperty(EFFECT_FLAG_CARD_TARGET)",3325],["local e1=Effect.CreateEffect(e:GetHandler())",3195],["e1:SetCategory(CATEGORY_SPECIAL_SUMMON)",2336],["e1:SetType(EFFECT_TYPE_FIELD)",2163]]},{"word":"e2","context":[["c:RegisterEffect(e2)",9014],["local e2=Effect.CreateEffect(c)",8648],["e2:SetRange(LOCATION_MZONE)",2336],["e2:SetType(EFFECT_TYPE_SINGLE)",2070],["local e2=e1:Clone()",1475],["e2:SetType(EFFECT_TYPE_IGNITION)",1400],["e2:SetCountLimit(1)",1378],["e2:SetType(EFFECT_TYPE_FIELD)",1371],["e2:SetRange(LOCATION_SZONE)",1260],["e2:SetProperty(EFFECT_FLAG_CARD_TARGET)",1206]]},{"word":"e3","context":[["c:RegisterEffect(e3)",4833],["local e3=Effect.CreateEffect(c)",4351],["e3:SetRange(LOCATION_MZONE)",1337],["e3:SetType(EFFECT_TYPE_SINGLE)",959],["e3:SetCountLimit(1)",742],["e3:SetRange(LOCATION_SZONE)",629],["e3:SetType(EFFECT_TYPE_IGNITION)",604],["local e3=e2:Clone()",600],["e3:SetType(EFFECT_TYPE_FIELD)",523],["e3:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",512]]},{"word":"e4","context":[["c:RegisterEffect(e4)",2357],["local e4=Effect.CreateEffect(c)",2096],["e4:SetRange(LOCATION_MZONE)",562],["e4:SetType(EFFECT_TYPE_SINGLE)",517],["e4:SetRange(LOCATION_SZONE)",298],["e4:SetCountLimit(1)",289],["local e4=e3:Clone()",264],["e4:SetProperty(EFFECT_FLAG_CARD_TARGET)",251],["e4:SetType(EFFECT_TYPE_IGNITION)",245],["e4:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)",230]]},{"word":"each","context":[["-- Create a promptbox for each screen",377],["-- Create a wibox for each screen and add it",372],["-- For each status insert a list of positions where the quest will continue, i.e. a new status can be reached there",308],["-- Insert an extensive description of each status here, in both languages",305],["-- each. Can be: WEAPON_... MELEE, PISTOL, HEAVY, NADE, CARRY, EQUIP1, EQUIP2 or ROLE.",234],["for sln in premake.solution.each() do",129],["-- for each divider found",109],["-- the map update function handles checks done on each game tick.",84],["each R in LEVEL.rooms do",82],["-- for each input perturbation, do central difference",79]]},{"word":"easy","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["-- You can call framework.string() to export all functions to the string table to the global table for easy access.",31],["c = assert(scurl.easy{",31],["c = assert(curl.easy{",29],["-- This syntax allows for easy overriding",29],["Sending a chat message that is composed of multiple different parts has been made easy thanks to",27],["cIniFile is very easy to use. For example, you can find out what port the server is supposed to",27],["c  = assert(scurl.easy{",24],["-- A Boundary Plugin Framework for easy development of custom Boundary.com plugins.",23],["-- First, note that \"foreign\" binaries are easy to handle, no problem there.",23]]},{"word":"effect","context":[["function onEffectLose(target,effect)",5649],["function onEffectGain(target,effect)",5640],["function onEffectTick(target,effect)",1485],["effect = {",708],["spell:setMsg(75); -- no effect",630],["return effect;",413],["local power = effect:getPower();",265],["-- no effect",179],["Draw the effect",149],["effect = 5;",140]]},{"word":"element","context":[["-- find maximum element of error",336],["return element",219],["prev = true -- add a seperator before the next element",208],["local ForceUpdate = function(element)",183],["if element then",140],["\"        </element>\" ..",130],["\"        <element type=\\\"Text\\\">\" ..",107],["-- Do not move if the UI has a focused element (the console)",104],["if value == element then",98],["for _, element in ipairs(value) do",90]]},{"word":"else","context":[["else",635822],["} else {",1153],["--else",952],["else\\",921],["-- else",916],["else -- citizen or allied",568],["else return false end",469],["#else",381],["npcHandler:say('Well, can I help you with something else?', cid)",330],["else return a[i], t[a[i]]",313]]},{"word":"elseif","context":[["elseif msg.to.type == 'channel' then",1975],["elseif group_photo_lock == 'no' then",1268],["elseif is_momod(msg) then",807],["elseif get_cmd == \"setadmin\" then",724],["elseif chat_type == 'channel' then",703],["elseif is_owner(msg) then",679],["elseif (Class == 3 or Class == 9 or Class == 10) then",670],["elseif get_cmd == \"demote\" then",667],["elseif (Class == 4 or Class == 11 or Class == 12) then",667],["elseif (Class == 2 or Class == 7 or Class == 8) then",667]]},{"word":"empty","context":[["-- determine if table is empty",873],["elseif has_usage_data(plugin) then -- Is not empty",373],["-- The OpenBoobs API sometimes returns an empty array",195],["-- 3=Disconnected or warped out (if dyna is empty: launch 4 after 3)",156],["-- Create a new empty table",155],["--An empty table for solving multiple kicking problem(thanks to @topkecleon )",146],["-- Nil or empty, exit case (no more urls)",141],["-- Returns true if the string is empty",132],["doPlayerSendTextMessage(cid, MESSAGE_INFO_DESCR, \"The chest is empty.\")",119],["empty = false",117]]},{"word":"enable","context":[["[\"enable\"] = true,",594],["-- Re-enable a plugin for this chat",384],["print(\"enable: \"..matches[2])",382],["if matches[3] == 'enable' then",349],["enable = {",342],["print(\"enable \"..plugin..' on this chat')",327],["[\"enable\"] = false,",280],["enable = true,",245],["if matches[1] == 'enable' then",186],["if enable then",184]]},{"word":"enabled","context":[["-- Go over enabled plugins patterns.",2731],["enabled = \"false\",",1725],["enabled = false,",1709],["[\"enabled\"] = false,",1417],["[\"enabled\"] = true,",971],["enabled = true,",838],["-- Check if plugin is enabled",787],["-- Check if is enabled",662],["return 'Bots protection is already enabled'",472],["return 'Bots protection has been enabled'",468]]},{"word":"end","context":[["end",5556564],["end;",303695],["end)",165113],["end,",122096],["-- end",8429],["end),",8091],["--end",7961],["end\\",7634],["end )",6265],["end);",5322]]},{"word":"enemy","context":[["for _, enemy in ipairs(self.enemies) do",664],["enemy:AddEnemy(1);",463],["enemy:NewEnemyParty();",281],["for _, enemy in ipairs(enemies) do",239],["_SetBattleEnvironment(enemy);",165],["enemy = false,",151],["enemy:AddEnemy(2);",149],["roam_zone:AddEnemy(enemy, Map, 1);",119],["if use.to then use.to:append(enemy) end",110],["target = enemy",110]]},{"word":"engine","context":[["require \"engine.class\"",865],["--         Stratagus - A free fantasy real time strategy game engine",714],["local Map = require \"engine.Map\"",481],["local Talents = require(\"engine.interface.ActorTalents\")",375],["local Dialog = require \"engine.ui.Dialog\"",300],["local Stats = require \"engine.interface.ActorStats\"",252],["local Talents = require \"engine.interface.ActorTalents\"",216],["class = \"engine.generator.object.Random\",",207],["engine.configure(c)",192],["class = \"engine.generator.trap.Random\",",155]]},{"word":"ent","context":[["ent:Spawn()",1715],["return ent",878],["ent:SetPos(pos)",758],["ent:SetAngles(Angle(0,0,0))",653],["ent:Activate()",634],["local ent = ents.Create(class)",569],["if ent:IsValid() then",547],["ent:Remove()",433],["local phys = ent:GetPhysicsObject()",391],["name = \"ent\",",315]]},{"word":"entity","context":[["inst.entity:AddTransform()",449],["local trans = inst.entity:AddTransform()",437],["local anim = inst.entity:AddAnimState()",427],["inst.entity:AddAnimState()",418],["inst.entity:AddSoundEmitter()",407],["-- The AmmoEnt is the ammo entity that can be picked up when carrying this gun.",229],["return entity",222],["local minimap = inst.entity:AddMiniMapEntity()",164],["local sound = inst.entity:AddSoundEmitter()",152],["type = \"create-entity\",",122]]},{"word":"env","context":[["#!/usr/bin/env lua",1567],["local meta = minetest.env:get_meta(pos)",528],["return env",303],["local env = {}",273],["#!/usr/bin/env luajit",229],["#! /usr/bin/env lua",208],["#!/usr/bin/env tarantool",161],["local env = {",144],["minetest.env:remove_node(pos)",131],["local node = minetest.env:get_node(pos)",128]]},{"word":"equal","context":[["assert.equal(200, status)",959],["assert.are.equal(200, status)",839],["-- @param operator Optional. Comparison operator: less, atMost, equal, atLeast, more.",439],["assert.equal([[",384],["assert.are.equal(400, status)",360],["assert.are.equal(2, utils.table_size(body))",267],["assert.are.equal(1, utils.table_size(body))",179],["assert.equal(403, status)",173],["assert.are.equal(\"invalid_request\", body.error)",161],["assert.equal(201, status)",152]]},{"word":"err","context":[["if err then",5172],["return nil, err",3602],["print('\\27[31m'..err..'\\27[39m')",2756],["local ok, err =  pcall(function()",2756],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["mytester:assertlt(err, precision, string.format(",2191],["mytester:assertlt(err,precision, 'error on state ')",1962],["local err = jac.testJacobian(module,input)",1875],["assert.falsy(err)",1717]]},{"word":"error","context":[["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["'error on weight [%s]', t))",1119],["local error = error",918],["local error = error",918],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["local error = rescuda:float() - groundtruth",736],["mytester:assertlt(err,precision, 'error on weight ')",719],["local error = rescuda:float() - groundgrad",705]]},{"word":"escape","context":[["escape 1;",1938],["escape ret;",819],["escape a;",452],["escape 0;",424],["escape v;",364],["escape _V;",269],["escape 10;",232],["if key == \"escape\" then",228],["local parameters = \"address=\".. (URL.escape(area) or \"\")",215],["\"&markers=color:red\"..URL.escape(\"|\"..area)",214]]},{"word":"etc","context":[["alternateWeaponDamageType = \"\", -- ELECTRICITY, KINETIC, etc",1760],["weaponDamageType = \"KINETIC\", -- ELECTRICITY, KINETIC, etc",1465],["-- from the core when a player disconnects or the time limit is up, etc",567],["--add on bonuses (staff/day/weather/jas/mab/etc all go in this function)",512],["else -- number, string, boolean, etc",268],["-- enforcing ANY rules (SJ/number of people/etc), moving",196],["-- equipment menu (if buyable), etc.",195],["weaponDamageType = \"ENERGY\", -- ELECTRICITY, KINETIC, etc",165],["if etc ~= nil then",161],["message = message .. \" (\" .. OBJDEF:encode(etc) .. \")\"",146]]},{"word":"event","context":[["EventManager:RegisterEvent(event);",3118],["local caster = event.caster",970],["local ability = event.ability",797],["function (event)",776],["local phase = event.phase",703],["local function onNodeEvent(event)",593],["love.event.quit()",474],["local target = event.target",391],["function scene:createScene( event )",288],["local origin, stanza = event.origin, event.stanza;",275]]},{"word":"ex","context":[["alternateWeaponName = \"\", -- Name ex. 'a Vibrolance'",1760],["alternateWeaponClass = \"\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1760],["alternateWeaponTemp = \"\", -- Weapon Template ex. 'lance_vibrolance'",1760],["weaponClass = \"UnarmedMeleeWeapon\", -- Weapon Class ex. 'PolearmMeleeWeapon'",1403],["weaponTemp = \"creature_default_weapon\", -- Weapon Template ex. 'lance_vibrolance'",1401],["weaponName = \"Creature Defualt\", -- Name ex. 'a Vibrolance'",1393],["weaponName = \"\", -- Name ex. 'a Vibrolance'",117],["weaponTemp = \"\", -- Weapon Template ex. 'lance_vibrolance'",116],["weaponClass = \"\", -- Weapon Class ex. 'PolearmMeleeWeapon'",116],["weaponClass = \"PistolRangedWeapon\", -- Weapon Class ex. 'PolearmMeleeWeapon'",101]]},{"word":"exception","context":[["--this exception also makes it possible to release a modified version",29626],["--to grant this special exception for their modified versions;",29624],["--which carries forward this exception.",7399],["-- (with the possible exception of 'n')",95],["return exception('reference cycle', value, state, buffer, buflen)",72],["local exception = require \"exception\"",40],["local exception = require \"exception\"",40],["local handler = state.exception",36],["if not ret then return exception('custom encoder failed', value, state, buffer, buflen, msg) end",36],["local function exception(reason, value, state, buffer, buflen, defaultmessage)",36]]},{"word":"exist","context":[["-- If config.lua doesn't exist",2724],["-- If file doesn't exist, create it.",2724],["-- \"createScene\" event is dispatched if scene's view does not exist",168],["-- Called when the scene's view does not exist:",148],["-- If gbans.lua doesn't exist",134],["-- redirect to overview page if network does not exist anymore (e.g. after a revert)",77],["npcHandler:say('This player does not exist.', cid)",66],["-- Called when the scene's view does not exist.",54],["-- if already does not exist)",54],["-- setup basic defaults if it doesn't exist",49]]},{"word":"exists","context":[["-- Function exists",2732],["-- Table exists and chat has disabled plugins",2730],["-- Returns true if file exists in plugins folder",474],["-- Checks if plugin exists",394],["-- Check if plugins exists",394],["print('checking if '..plugin_name..' exists')",378],["return \"Plugin doesn't exists\"",293],["return 'Plugin '..name..' does not exists'",218],["return 'Plugin '..plugin_name..' does not exists'",205],["if j:exists() then",193]]},{"word":"exit","context":[["os.exit(1)",2617],["os.exit()",1240],["os.exit(0)",1007],["os.exit(-1)",409],["function exit()",339],["if tag == \"exit\" then",240],["elseif event == \"exit\" then",236],["skynet.exit()",231],["elseif tag == \"exit\" then",231],["ngx.exit(ngx.HTTP_OK)",192]]},{"word":"expected","context":[["is(got, expected, caption)",254],["mytester:assertlt(torch.norm(output-expected), precision, 'error on forward ')",178],["assert.same(expected, input:totable())",143],["local expected",142],["assert_equal(groucho.render(template, data), expected)",99],["expected, actual = actual, expected",97],["expected, actual = actual, expected",97],["local expected = {",96],["assert.is_equal(normpath(expected), errmsg)",85],["elseif type(actual) ~= type(expected) then",75]]},{"word":"extra","context":[["function ok_cb(extra, success, result)",2747],["priority = \"extra-high\",",2398],["local receiver = extra.receiver",1926],["local receiver = extra.channel",1400],["local get_cmd = extra.get_cmd",1176],["local function callbackres(extra, success, result)",1086],["local chat = 'chat#id'..extra.chatid",916],["local chat_id = extra.chat_id",764],["send_msg(extra.receiver, text, ok_cb,  true)",747],["local um_hash = 'msgs:'..result.id..':'..extra.chat2",692]]},{"word":"f","context":[["f:close()",14596],["if not f then",6687],["local f = io.open('./data/config.lua', \"r\")",2711],["f:write(s)",2523],["local f = io.open(filename)",2495],["local f = io.open(filename, 'w')",2483],["local s = f:read('*all')",2480],["if f then",2002],["return f",1240],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620]]},{"word":"faction","context":[["faction = \"\",",4518],["faction = \"townsperson\",",1487],["faction = \"imperial\",",979],["faction = \"rebel\",",765],["[\"faction\"] = \"Alliance\",",522],["faction = \"thug\",",367],["faction = \"jabba\",",170],["faction = \"tusken_raider\",",125],["faction = \"nightsister\",",118],["faction = \"corsec\",",111]]},{"word":"false","context":[["return false",99012],["[\"HealthFrame\"] = false,",8260],["return false;",6339],["walkable = false,",4045],["delete_msg(msg.id, ok_cb, false)",3385],["[\"isColor\"] = false,",3064],["[\"isStacks\"] = false,",3062],["IsNumber = false,",3007],["started = false",2775],["msg.out = false",2727]]},{"word":"ferocity","context":[["ferocity = 0,",11372],["ferocity = 9,",98],["ferocity = 6,",96],["ferocity = 2,",88],["ferocity = 5,",82],["ferocity = 4,",68],["ferocity = 3,",66],["ferocity = 7,",53],["ferocity = 10,",53],["ferocity = 8,",45]]},{"word":"ffi","context":[["ffi.cdef[[",3795],["local ffi = require(\"ffi\")",1634],["local ffi = require(\"ffi\")",1634],["local ffi = require 'ffi'",825],["local ffi = require 'ffi'",825],["local ffi = require \"ffi\"",764],["local ffi = require \"ffi\"",764],["local C = ffi.C",705],["ffi.cdef [[",594],["local ffi = require('ffi')",425]]},{"word":"field","context":[["compare = function(field, a, b, processor)",132],["if field then",127],["store = function(field, current, value, processor)",110],["field = \"container.name\",",106],["-- required field",102],["field = \"proc.pid\",",99],["return field",88],["if not field then",84],["local field = fields[i]",84],["for k,field in pairs(fields) do",73]]},{"word":"fields","context":[["fields = {",788],["return fields",354],["minetest.register_on_player_receive_fields(function(player, formname, fields)",299],["on_receive_fields = function(pos, formname, fields, sender)",260],["local fields = {}",252],["local sep, fields = sep or \":\", {}",240],["self:gsub(pattern, function(c) fields[#fields+1] = c end)",229],["self:gsub(pattern, function(c) fields[#fields+1] = c end)",229],["for k, v in pairs(fields) do",91],["local field = fields[i]",84]]},{"word":"file","context":[["file:close()",7765],["file:flush()",3632],["-- Returns the config from config.lua file.",2731],["-- Create a basic config.json file and saves it.",2728],["-- If file doesn't exist, create it.",2724],["print (\"Created new config file: data/config.lua\")",2708],["--  This file is part of Invertika.                                             --",2706],["file:write(text)",2464],["os.rename(result, file)",1695],["print('File moved to:', file)",1657]]},{"word":"filename","context":[["local f = io.open(filename)",2495],["local f = io.open(filename, 'w')",2483],["function load_data(filename)",2438],["function save_data(filename, data)",2432],["filename = \"__core__/graphics/gui.png\",",302],["if not filename then",242],["t[i] = filename",196],["return filename",190],["if filename then",183],["-- @param #string filename",163]]},{"word":"files","context":[["files {",13959],["files = {",1110],["-- See http://www.ocdsoft.com/files/accuracy.xls",875],["-- See http://www.ocdsoft.com/files/speed.xls",875],["-- See http://www.ocdsoft.com/files/defense.xls",875],["-- See http://www.ocdsoft.com/files/certifications.xls",871],["local files = {}",553],["files",530],["return files",379],["files( {",273]]},{"word":"filter","context":[["and awful.client.focus.filter(c) then",377],["filter {}",374],["focus = awful.client.focus.filter,",295],["mytasklist[s] = awful.widget.tasklist(s, awful.widget.tasklist.filter.currenttags, mytasklist.buttons)",277],["mytaglist[s] = awful.widget.taglist(s, awful.widget.taglist.filter.all, mytaglist.buttons)",276],["filter \"configurations:Debug\"",166],["trace.filter = ply",165],["if filter then",149],["filter \"configurations:Release\"",140],["\"filter\",",119]]},{"word":"find","context":[["-- find maximum element of error",336],["-- find absolute error",336],["local find = string.find",237],["local find = string.find",237],["local s, e, cap = str:find(fpat, 1)",181],["s, e, cap = str:find(fpat, last_end)",179],["local strfind = string.find",171],["interface.find(ifname)",162],["if find then",136],["bannedidthree =string.find(msg.from.id, '678')",135]]},{"word":"first","context":[["if first then",783],["first = false",734],["local first = true",591],["return \"Create a link using /newlink first !\"",560],["if not first then",265],["send_large_msg(receiver, \"Promote me to admin first!\")",197],["npc:setPos(pathfind.first(path));",183],["return \"Create a link using /newlink first!\\n\\nOr if I am not creator use /setlink to set your link\"",145],["-- Send first and postpone the others as callback",141],["local first = true -- Frist param",136]]},{"word":"fixed","context":[["type = \"fixed\",",6743],["fixed = {",2653],["local right_layout = wibox.layout.fixed.horizontal()",559],["local left_layout = wibox.layout.fixed.horizontal()",538],["fixed = {-0.5, -0.5, -0.5, 0.5, -5/16, 0.5},",327],["fixed = {-0.3, -0.5, -0.3, 0.3, 0.35, 0.3}",198],["fixed = {-1/2, -1/2, -1/2, 1/2, -1/2+1/16, 1/2},",156],["fixed = {-2/16, -1/2, -2/16, 2/16, 1/2, 2/16},",131],["fixed = {-0.3, -0.5, -0.3, 0.3, 0.5, 0.3}",127],["fixed = {-1/7, -1/2, -1/7, 1/7, 1/2, 1/7},",105]]},{"word":"flags","context":[["flags { \"Symbols\" }",713],["flags {",528],["flags { \"Optimize\" }",444],["flags = {\"goes-to-main-inventory\"},",439],["return flags",425],["flags = {\"goes-to-quickbar\"},",385],["flags = \"place_center_x, place_center_z\",",378],["flags = { \"goes-to-quickbar\" },",290],["flags = { \"goes-to-main-inventory\" },",232],["flags          = \"absheight\",",185]]},{"word":"float","context":[["-- @param #float float",2878],["-- @param #float float",2878],["-- @return float#float ret (return value: float)",2682],["-- @return float#float ret (return value: float)",2682],["-- @return float#float ret (return value: float)",2682],["local error = rescuda:float() - groundtruth",736],["local error = rescuda:float() - groundgrad",705],["-- @param #float time",492],["-- @param #float duration",300],["module:float()",261]]},{"word":"flood","context":[["local group_flood_lock = data[tostring(target)]['settings']['flood']",2347],["Set [value] as flood sensitivity",1224],["if matches[2] == 'flood' then",1187],["data[tostring(target)]['settings']['flood'] = 'yes'",1142],["data[tostring(target)]['settings']['flood'] = 'no'",1142],["flood = 'yes',",1136],["flood = 'yes'",950],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked flood \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set flood to [\"..matches[2]..\"]\")",785],["return 'Group flood is locked'",761]]},{"word":"floor","context":[["local floor = math.floor",811],["local floor = math.floor",811],["return math.floor(num * mult + 0.5) / mult",288],["0x80 + (floor(value) % 0x40))",216],["0x80 + (floor(value/0x40) % 0x40),",144],["floor(n / 0x10000) % 0x100,",140],["floor(n / 0x100) % 0x100,",140],["local dINT = math.floor(pet:getStat(MOD_INT) - target:getStat(MOD_INT));",119],["if ceil_mode then module:ceil() else module:floor() end",116],["local math_floor = math.floor",115]]},{"word":"focus","context":[["if client.focus then client.focus:raise() end",1626],["if client.focus then client.focus:raise() end",1626],["focus = 0,",1624],["client.focus = c",1423],["if client.focus then",874],["awful.client.focus.byidx(-1)",783],["['focus'] = { Index = 0, Min = 0.0, Max = 1.0 },",625],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["client.focus:raise()",440],["awful.client.focus.byidx(1)",413]]},{"word":"following","context":[["furnished to do so, subject to the following conditions:",1919],["-- furnished to do so, subject to the following conditions:",595],["the following conditions:",390],["-- Without this, the following",283],["subject to the following conditions:",167],["self.following = nil",148],["-- This files is following a special format compared to other animation scripts.",116],["* the following conditions:",106],["-- subject to the following conditions:",101],["-- the following conditions:",83]]},{"word":"font","context":[["love.graphics.setFont(font)",1144],["font = {",252],["-- tooltip_[font|opacity|fg_color|bg_color|border_width|border_color]",240],["local Font = require(\"ui/font\")",195],["local theight = font:getHeight(\"a\")",179],["local font = love.graphics.getFont()",156],["-- Themes define colours, icons, font and wallpapers.",141],["local font = self.font",131],["local font = self.font",131],["-- Construct new Text object, set string to display and font to use",125]]},{"word":"for","context":[["--to grant this special exception for their modified versions;",29624],["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["for k,v in pairs(result.members) do",6347],["for name, plugin in pairs(plugins) do",5467],["for i = 1,nloop do",3456],["for v,user in pairs(config.sudo_users) do",2776],["for name,plugin in pairs(plugins) do",2735],["for k, v in pairs(_config.enabled_plugins) do",2735],["for k, pattern in pairs(plugin.patterns) do",2732],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729]]},{"word":"format","context":[["mytester:assertlt(err, precision, string.format(",2191],["local format = string.format",680],["local format = string.format",680],["player:PrintToPlayer( string.format( \"Player named '%s' not found!\", target ) );",411],["string.format(",344],["local pattern = string.format(\"([^%s]+)\", sep)",297],["error(string.format(",283],["send_document(\"user#id\"..cb_extra.target,\"dialog_list.txt\", ok_cb, false)--.txt format",218],["send_document(\"user#id\"..cb_extra.target,\"dialog_list.json\", ok_cb, false)--json format",218],["send_document(\"user#id\"..cb_extra.target,\"contact_list.json\", ok_cb, false)--json format",217]]},{"word":"forward","context":[["--which carries forward this exception.",7399],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["local output = module:forward(input)",1512],["gconv:forward(input)",868],["local groundtruth = sconv:forward(input)",864],["local rescuda = gconv:forward(input)",828],["sconv:forward(input)",817],["groundtruth = sconv:forward(input)",762],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["rescuda = gconv:forward(input)",704]]},{"word":"found","context":[["found = true",1493],["local found = false",1159],["[\"found\"] = true,",928],["if not found then",775],["if found then",762],["-- If not found",531],["player:PrintToPlayer( string.format( \"Player named '%s' not found!\", target ) );",411],["local found",324],["return found",312],["found = false",227]]},{"word":"frame","context":[["return frame",562],["frame:Hide()",558],["frame:Show()",401],["frame:ClearAllPoints()",364],["self.frame:Hide()",325],["local self = frame.obj",299],["if baseparent and baseparent.type == \"frame\" then",279],["self.frame = frame",248],["self.frame = frame",248],["frame:MakePopup()",247]]},{"word":"from","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["local name = user_print_name(msg.from)",6387],["if msg.from.id == our_id then",5480],["kick_user(msg.from.id, msg.to.id)",3616],["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["-- Returns the config from config.lua file.",2731],["msg.from.id = 0",2724],["if not msg.from.id then",2723],["if msg.from.id == 777000 then",2720],["print('\\27[36mNot valid: Msg from our id\\27[39m')",2619]]},{"word":"fs","context":[["local fs = require \"nixio.fs\"",532],["local fs = require \"nixio.fs\"",532],["local fs = require(\"luarocks.fs\")",296],["local fs = require(\"luarocks.fs\")",296],["local fs = require('fs')",244],["local fs = require('fs')",244],["fs.pop_dir()",190],["local fs = require(\"filesystem\")",130],["local fs   = require \"nixio.fs\"",92],["local fs   = require \"nixio.fs\"",92]]},{"word":"fuck","context":[["بدخواه نگاییدم (fuck) (fuck) -○",13310],["بدخواه نگاییدم (fuck) (fuck) -○",13310],["-- check if the command is lock and by command i mean when you write /fuck lock   : lock here is the command",26],["-- the command will be like /fuck <arg> { the arg can be \"?\" or \"lock\" or \"unlock\" }",26],["CheckCommand = \"?\" -- The command to check for the statue of the fuck see",26],["-- if you want to see fuck use this command /fuck lock",25],["-- if you want to disable the protection use this command /fuck unlock",25],["-- if you want to see fuck use this command /fuck lock",25],["statue = { Locked2 = \"The fuck see is locked here\", UnLocked2 = \"The fuck see is unlocked here\" }",25],["statue = { Locked2 = \"The fuck see is locked here\", UnLocked2 = \"The fuck see is unlocked here\" }",25]]},{"word":"fucked","context":[["fucked by black boys",20000],["text = \"You fucked everything up. Well done\",",33]]},{"word":"func","context":[["if func then",905],["func = function(name, param)",822],["func = function()",587],["func = function(unitDef)",501],["- func: draw()",455],["- func: update(deltatime)",449],["- func: initialize()",424],["- func: mousepressed(x, y, button)",403],["- func: mousereleased(x, y, button)",343],["if not func then",343]]},{"word":"function","context":[["function onEventFinish(player,csid,option)",27584],["function onEventUpdate(player,csid,option)",27159],["function onTrigger(player,npc)",25472],["function onTrade(player,npc,trade)",24940],["function onMobSpawn(mob)",15118],["function onMobDeath(mob,killer)",14108],["function onMobEngaged(mob,target)",12350],["function onMobInitialize(mob)",11037],["function onMobFight(mob,target)",10839],["local function run(msg, matches)",10338]]},{"word":"functions","context":[["-- Global functions",403],["-- Global vars/functions that we don't upvalue since they might get hooked, or upgraded",280],["-- Utility functions",213],["-- functions",181],["-- Public module functions.",178],["-- Helper functions",175],["-- Don't forget npcHandler = npcHandler in the parameters. It is required for all StdModule functions!",153],["-- OTServ event handling functions start",146],["-- OTServ event handling functions end",145],["-- Map Custom functions",134]]},{"word":"g","context":[["if g:GetCount()>0 then",2773],["local tc=g:GetFirst()",1362],["Duel.ConfirmCards(1-tp,g)",1183],["Duel.SendtoHand(g,nil,REASON_EFFECT)",1008],["Duel.SetOperationInfo(0,CATEGORY_DESTROY,g,1,0,0)",983],["Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,g,1,0,0)",877],["Duel.SpecialSummon(g,0,tp,tp,false,false,POS_FACEUP)",865],["Duel.SetOperationInfo(0,CATEGORY_DESTROY,g,g:GetCount(),0,0)",839],["Duel.SetOperationInfo(0,CATEGORY_DESTROY,g,g:GetCount(),0,0)",839],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678]]},{"word":"game","context":[["--         Stratagus - A free fantasy real time strategy game engine",714],["local target = game.level.map(x, y, Map.ACTOR)",487],["game:unregisterDialog(self)",199],["game:playSoundNear(self, \"talents/spell_generic\")",199],["game:onTickEnd(function()",193],["game:playSoundNear(self, \"talents/arcane\")",164],["game:registerDialog(d)",161],["game.level.map:addEffect(self,",156],["local target = game.level.map(px, py, Map.ACTOR)",151],["game:playSoundNear(self, \"talents/slime\")",144]]},{"word":"gameObjectType","context":[["gameObjectType = 2049,",4254],["gameObjectType = 5,",3046],["gameObjectType = 8211,",2884],["gameObjectType = 512,",1808],["gameObjectType = 4,",1374],["gameObjectType = 8203,",863],["gameObjectType = 1073741824,",688],["gameObjectType = 536870913,",608],["gameObjectType = 531,",444],["gameObjectType = 8205,",434]]},{"word":"gconv","context":[["gconv:zeroGradParameters()",1056],["gconv:forward(input)",868],["local rescuda = gconv:forward(input)",828],["local rescuda = gconv:backward(input, gradOutput)",724],["rescuda = gconv:forward(input)",704],["rescuda = gconv:backward(input, gradOutput)",679],["local gconv = sconv:clone():cuda()",458],["gconv.bias = sconv.bias:cuda()",366],["gconv.weight = sconv.weight:cuda()",366],["local weightcuda = gconv.gradWeight",283]]},{"word":"get","context":[["\"get\",",2429],["user_info_msgs = tonumber(redis:get(um_hash) or 0)",1431],["!get [value]",1316],["if redis:get(\"bot:markread\") == \"on\" then",1160],["if redis:get(\"bot:markread\") then",1160],["local picprotectionredis = redis:get(picturehash)",1062],["if redis:get(hash) then",1023],["user_info.msgs = tonumber(redis:get(um_hash) or 0)",773],["-- get the name",660],["local nameprotectionredis = redis:get(namehash)",531]]},{"word":"getVar","context":[["local kills = killer:getVar(\"FOMOR_HATE\");",522],["local MissionStatus = player:getVar(\"MissionStatus\");",285],["MissionStatus = player:getVar(\"MissionStatus\");",253],["kills = killer:getVar(\"EVERYONES_GRUDGE_KILLS\");",202],["local dynaWaitxDay = player:getVar(\"dynaWaitxDay\");",201],["if (player:getMainJob() ~= player:getVar(\"PlayerMainJob\")) then",175],["local WildcatJeuno = player:getVar(\"WildcatJeuno\");",173],["local WildcatSandy = player:getVar(\"WildcatSandy\");",148],["local AFHandsActivated = player:getVar(\"BorghertzAlreadyActiveWithJob\");",127],["player:setVar(\"FFR\",player:getVar(\"FFR\") - 1);",127]]},{"word":"get_cmd","context":[["local get_cmd = extra.get_cmd",1176],["local get_cmd = extra.get_cmd",1176],["channel_get_users (receiver, in_channel_cb, {get_cmd=get_cmd, receiver=receiver, msg=msg, user_id=user_id})",846],["channel_get_users (receiver, in_channel_cb, {get_cmd=get_cmd, receiver=receiver, msg=msg, username=username})",846],["channel_get_users (receiver, in_channel_cb, {get_cmd=get_cmd, receiver=receiver, msg=msg, user_id=user_id})",846],["channel_get_users (receiver, in_channel_cb, {get_cmd=get_cmd, receiver=receiver, msg=msg, username=username})",846],["user_info(user_id, cb_user_info, {receiver = receiver, get_cmd = get_cmd})",845],["user_info(user_id, cb_user_info, {receiver = receiver, get_cmd = get_cmd})",845],["elseif get_cmd == \"setadmin\" then",724],["local get_cmd = \"mute_user\"",685]]},{"word":"get_message","context":[["get_message(msg.reply_id, get_message_callback, cbreply_extra)",1131],["msgr = get_message(msg.reply_id, demote_by_reply, false)",402],["msgr = get_message(msg.reply_id, promote_by_reply, false)",401],["msgr = get_message(msg.reply_id, setowner_by_reply, false)",378],["msgr = get_message(msg.reply_id, action_by_reply, {receiver=receiver, Reply=Reply})",366],["id = get_message(msg.reply_id,get_message_callback_id, false)",366],["msgr = get_message(msg.reply_id,Kick_by_reply, false)",365],["msgr = get_message(msg.reply_id,ban_by_reply, false)",364],["msgr = get_message(msg.reply_id, action_by_reply2, {receiver=receiver, Reply=Reply, value=value})",364],["local msgr = get_message(msg.reply_id,unban_by_reply, false)",350]]},{"word":"get_receiver","context":[["local receiver = get_receiver(msg)",23972],["receiver = get_receiver(msg)",3021],["channel = get_receiver(msg),",1404],["local chat = get_receiver(msg)",565],["channel = get_receiver(msg)",560],["return promote(get_receiver(msg), member_username, member_id)",394],["return demote(get_receiver(msg), member_username, member_id)",394],["--[[]\tlocal receiver = get_receiver(msg)",250],["send_document(get_receiver(msg), file, ok_cb, false)",213],["local receiver\t= get_receiver(msg)",189]]},{"word":"gl","context":[["gl.Color(1,1,1,1)",416],["gl.PushMatrix()",373],["gl.PopMatrix()",360],["gl.DepthTest(false)",185],["gl.Texture(0,false)",175],["gl.Texture(false)",148],["gl.DepthTest(true)",123],["gl.DepthMask(true)",116],["gl.DepthMask(false)",116],["gl.bindBuffer(gl.ARRAY_BUFFER, 0)",100]]},{"word":"globals","context":[["require(\"scripts/globals/status\");",21426],["require(\"scripts/globals/settings\");",21058],["require(\"scripts/globals/quests\");",7607],["require(\"scripts/globals/keyitems\");",7194],["require(\"scripts/globals/magic\");",5136],["require(\"scripts/globals/titles\");",4241],["require(\"scripts/globals/missions\");",3804],["require(\"scripts/globals/monstertpmoves\");",3293],["require(\"scripts/globals/shop\");",2776],["require(\"/scripts/globals/settings\");",2675]]},{"word":"gradInput","context":[["return self.gradInput",1465],["local gradInput = module:backward(input, gradOutput)",478],["mytester:assert(math.abs(gradInput:mean() - (1-p)) < 0.05, 'dropout gradInput')",277],["mytester:assert(math.abs(gradInput:mean() - (1-p)) < 0.05, 'dropout gradInput')",277],["local gradInput = module:backward(input, input)",248],["mytester:assert(#gradInput == 2, 'gradInput must be table of size 2')",246],["mytester:assert(#gradInput == 2, 'gradInput must be table of size 2')",246],["for i, expertGradInput in ipairs(gradInput[2]) do",225],["self.gradInput:resizeAs(input)",218],["local gradInput = module:backward(input, gradOutput):clone()",217]]},{"word":"gradOutput","context":[["local groundgrad = sconv:backward(input, gradOutput)",850],["gradOutput = gradOutput:cuda()",767],["gradOutput = gradOutput:cuda()",767],["groundgrad = sconv:backward(input, gradOutput)",753],["local rescuda = gconv:backward(input, gradOutput)",724],["rescuda = gconv:backward(input, gradOutput)",679],["local gradInput = module:backward(input, gradOutput)",478],["local gradInput = module:backward(input, gradOutput):clone()",217],["gradOutput2[2]:copy(gradOutput)",217],["local gradOutput = output:clone():uniform(0,1)",217]]},{"word":"grant","context":[["--to grant this special exception for their modified versions;",29624],["box.schema.user.grant('guest', 'read,write,execute', 'universe')",47],["-- Does not grant Limit Points.",26],["box.schema.user.grant(cfg.login, 'read,write,execute', 'universe')",15],["-- Checking that there is no refresh token since it's an implicit grant",14],["return grant(uid, user_name, ...)",14],["-- Implicit grant, override expiration to zero",13],["box.schema.user.grant('guest','read,write,execute','universe')",12],["box.schema.user.grant('guest', 'replication')",12]]},{"word":"graphics","context":[["love.graphics.setColor(255, 255, 255, 255)",1973],["love.graphics.setColor(bordercolor)",1220],["love.graphics.setFont(font)",1144],["love.graphics.setColor(255, 255, 255)",1059],["love.graphics.pop()",781],["love.graphics.push()",734],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["love.graphics.setColor(bodycolor)",558],["love.graphics.setColor(255,255,255)",511],["love.graphics.draw(image, x, y, 0, width, scaley)",448]]},{"word":"grass","context":[["\"solid\", { \"light-grass\", \"land\", \"unpassable\",",6945],["\"solid\", { \"light-grass\", \"land\",",345],["type = \"grass\",",269],["subgroup = \"grass\",",96],["type = \"floor\", subtype = \"grass\",",78],["-- place a random grass node",52],["type = \"wall\", subtype = \"grass\",",46],["-- Use texture of a taller grass stage in inventory",30],["-- place a random dry grass node",29],["These constants are used to differentiate the various sources of spreads, such as grass growing.",27]]},{"word":"group","context":[["if not data[group] then",2317],["type = \"group\",",1996],["local group = msg.to.id",1488],["Get group type",1371],["Unock a group's setting",1367],["Lock a group's setting",1367],["Set a group's rules",1365],["Set a group's about text",1364],["Get a list of members in group/realm",1360],["Get a file of members in group/realm",1360]]},{"word":"group_member_lock","context":[["local group_member_lock = data[tostring(target)]['settings']['lock_member']",2334],["if group_member_lock == 'yes' then",1695],["if group_member_lock == 'no' then",1579],["local group_member_lock = settings.lock_member",666],["local group_member_lock = data[tostring(target)]['settings']['public']",600],["elseif group_member_lock == 'no' then",591],["elseif group_member_lock == 'yes' and tonumber(msg.from.id) == tonumber(our_id) then",522],["if group_member_lock == 'yes' and not is_owner2(msg.action.user.id, msg.to.id) then",517],["local group_member_lock = data[tostring(msg.to.id)]['settings']['lock_member']",278],["elseif group_bot_lock == 'no' or group_member_lock == 'no' then",42]]},{"word":"group_owner","context":[["if group_owner then",1454],["local user = \"user#id\"..group_owner",1118],["if not is_admin2(tonumber(group_owner)) and not is_support(tonumber(group_owner)) then",839],["if not is_admin2(tonumber(group_owner)) and not is_support(tonumber(group_owner)) then",839],["local group_owner = data[tostring(channel)]['set_owner']",838],["local group_owner = data[tostring(msg.to.id)]['set_owner']",805],["if not group_owner then",803],["if not is_admin2(group_owner) and not is_support(group_owner) then",612],["if not is_admin2(group_owner) and not is_support(group_owner) then",612],["message = message .. '- '.. name .. ' (' .. v .. ') ['..group_owner..'] \\n {'..group_link..\"}\\n\"",466]]},{"word":"groups","context":[["groups = {",6057],["local groups = 'groups'",3119],["local groups = 'groups'",3119],["if not data[tostring(groups)] then",2705],["!list groups",1395],["Get a list of all groups",1362],["data[tostring(groups)][tostring(msg.to.id)] = msg.to.id",1352],["data[tostring(groups)] = {}",1349],["Send text to all groups",1187],["data[tostring(groups)] = nil",908]]},{"word":"gsub","context":[["local username = string.gsub(matches[2], '@', '')",5217],["set_name = string.gsub(msg.to.print_name, '_', ' '),",2070],["local print_name = user_print_name(msg.from):gsub(\"‮\", \"\")",1896],["local username = username:gsub(\"@\",\"\")",1757],["local member = string.gsub(matches[2], \"@\", \"\")",1270],["local name = print_name:gsub(\"_\", \"\")",1183],["local group = string.gsub(receiver, 'chat#id', '')",1162],["local group = string.gsub(receiver, 'channel#id', '')",1133],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["local name = string.gsub(result.print_name, \"_\", \" \")",1020]]},{"word":"h","context":[["craftingToolTab = 8, -- (See DraftSchemticImplementation.h)",665],["[\"h\"] = 1200.0,",423],["return h",351],["craftingToolTab = 8, -- (See DraftSchematicObjectTemplate.h)",348],["craftingToolTab = 2, -- (See DraftSchemticImplementation.h)",335],["craftingToolTab = 131072, -- (See DraftSchemticImplementation.h)",301],["awful.key({ modkey, \"Control\" }, \"h\",     function () awful.tag.incncol( 1)         end),",294],["awful.key({ modkey, \"Shift\"   }, \"h\",     function () awful.tag.incnmaster( 1)      end),",290],["\"sourceSize\": {\"w\":100,\"h\":100},",287],["\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},",287]]},{"word":"hacked","context":[["hacked by motafeghin",10773],["-- An MD5 mplementation in Lua, requires bitlib (hacked to use LuaBit from above, ugh)",23]]},{"word":"handler","context":[["if handler then",307],["minetest.sound_stop(list.handler[player_name])",195],["handler = {},",195],["list.handler[player_name] = nil",195],["if not handler then",186],["if list.handler[player_name] ~= nil then",185],["return handler",182],["handler   = true,",154],["handler = group.handler or handler",144],["handler = group.handler or handler",144]]},{"word":"has","context":[["-- Table exists and chat has disabled plugins",2730],["-- superuser and admins only (because sudo are always has privilege)",2534],["return 'Group members has been locked'",888],["return 'Group photo has been unlocked'",888],["return 'Group members has been unlocked'",887],["return 'Group name has been locked'",882],["return 'Group name has been unlocked'",881],["return 'Group flood has been locked'",758],["return 'Group flood has been unlocked'",757],["return msg_type..\" has been unmuted\"",709]]},{"word":"hasStatusEffect","context":[["if (target:hasStatusEffect(EFFECT_FOOD) == true or target:hasStatusEffect(EFFECT_FIELD_SUPPORT_FOOD) == true) then",2409],["if (target:hasStatusEffect(EFFECT_FOOD) == true or target:hasStatusEffect(EFFECT_FIELD_SUPPORT_FOOD) == true) then",2409],["if (target:hasStatusEffect(EFFECT_FOOD) == true) then",1457],["if (caster:hasStatusEffect(EFFECT_COMPOSURE) == true and caster:getID() == target:getID()) then",517],["if (caster:hasStatusEffect(EFFECT_SOUL_VOICE)) then",350],["elseif (caster:hasStatusEffect(EFFECT_MARCATO)) then",343],["if (caster:hasStatusEffect(EFFECT_TROUBADOUR)) then",340],["if (caster:hasStatusEffect(EFFECT_SABOTEUR)) then",195],["if (player:hasStatusEffect(effectID) or player:hasBustEffect(effectID)) then",176],["if (target:hasStatusEffect(EFFECT_MEDICINE)) then",167]]},{"word":"hash","context":[["redis:del(hash)",2159],["if hash then",1945],["local users = redis:smembers(hash)",1847],["local hash = 'chat:'..chat_id..':users'",1812],["redis:set(hash, true)",1540],["if redis:get(hash) then",1023],["local hash = get_variables_hash(msg)",990],["local hash =  'banned:'..chat_id",965],["redis:incr(hash)",880],["local value = redis:hget(hash, result.id)",693]]},{"word":"have","context":[["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["player:startEvent(csid,16,0,0,0,1,0,0,255); -- you have brought us supplies !",568],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["return msg_type..\" have been unmuted\"",471],["return msg_type..\" have been muted\"",468],["return send_large_msg(receiver, 'You have been promoted as the owner.')",393],["return send_large_msg(receiver, 'Group is added and you have been promoted as the owner ')",381],["-- minimized, since minimized clients can't have the focus.",341],["-- If you do not like this or do not have such a key,",306],["npcHandler:say('You do not have enough gold.', cid)",264]]},{"word":"header","context":[["\"location\" : \"header\",",361],["type = \"header\",",350],["ntop.dumpFile(dirs.installdir .. \"/httpdocs/inc/header.inc\")",320],["if not header then",197],["group = 'header'",189],["return header",159],["if header then",115],["local h = self:header()",112],["-- header body",106],["local header = {}",99]]},{"word":"headers","context":[["headers = {",1094],["local headers = {}",277],["local headers = response[3]",178],["-- nil, code, headers, status",163],["headers = headers,",142],["headers = headers,",142],["return headers",138],["function get_http_file_name(url, headers)",136],["file_name = file_name or get_http_file_name(url, headers)",136],["local content_type = headers[\"content-type\"]",135]]},{"word":"height","context":[["height = 0,",5261],["height = 1, -- Size of creature",1799],["height = 32,",1272],["local height = object:GetHeight()",1114],["height = 16,",860],["skin.OutlinedRectangle(x, y, width, height)",816],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["height           = [[4]],",595],["height = 20",589],["height = 20,",474]]},{"word":"help","context":[["!help",1365],["local function help()",779],["return help()",751],["\"help\",",748],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] Used /help\")",732],["if matches[1] == 'help' then",473],["npcHandler:say('Well, can I help you with something else?', cid)",330],["\"^[!/](help)$\",",266],["{type='torch.Tensor', help='input image', req=true},",231],["elseif matches[1] == 'help' and is_owner(msg) then",225]]},{"word":"here","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["-- Insert the quest title here, in both languages",308],["-- Insert an extensive description of each status here, in both languages",305],["-- Insert the position of the quest start here (probably the position of an NPC or item)",295],["-- List them here for Mikk's FindGlobals script",274],["-- What should go here:",196],["-- What should NOT go here:",196],["-- requires go here",190],["-- localization stuff, translators would work here",151]]},{"word":"hideAmount","context":[["hideAmount = 0,",7780],["hideAmount = 35,",217],["hideAmount = 4,",120],["hideAmount = 3,",111],["hideAmount = 5,",111],["hideAmount = 300,",96],["hideAmount = 10,",83],["hideAmount = 15,",79],["hideAmount = 40,",79],["hideAmount = 1000,",77]]},{"word":"hideType","context":[["hideType = \"\",",8838],["hideType = \"hide_leathery\",",1306],["hideType = \"hide_bristley\",",636],["hideType = \"hide_scaley\",",364],["hideType = \"hide_wooly\",",332],["hideType = \"hide_leathery_dathomir\",",67],["hideType = \"hide_leathery_endor\",",57],["hideType = \"hide_leathery_tatooine\",",53],["hideType = \"hide_leathery_lok\",",50],["hideType = \"hide_bristley_naboo\",",40]]},{"word":"host","context":[["host = host,",228],["host = host,",228],["if host then",166],["if(host[\"ip\"] ~= nil) then",124],["host = \"127.0.0.1\",",111],["local host",107],["-- @param host table",97],["if not host then",95],["<input type=\"hidden\" name=\"host\" value=\"]]",94],["self.host = host",90]]},{"word":"http","context":[["-- See http://www.ocdsoft.com/files/accuracy.xls",875],["-- See http://www.ocdsoft.com/files/speed.xls",875],["-- See http://www.ocdsoft.com/files/defense.xls",875],["-- See http://www.ocdsoft.com/files/certifications.xls",871],["luci.http.prepare_content(\"application/json\")",479],["-- This data should match information on http://wiki.ffxiclopedia.org/wiki/Calculating_Blue_Magic_Damage",467],["Bugtracker: \t\thttp://forum.404rq.com/bug-reports/",259],["Suggestions:\t\thttp://forum.404rq.com/mta-servers-development/",259],["local http = require \"luci.http\"",217],["local http = require \"luci.http\"",217]]},{"word":"https","context":[["https://telegram.me/joinchat/CUn8UjxMJnvrrCLU04fLyQ",11116],["https://github.com/SEEDTEAM/TeleSeed",603],["Source code:\t\thttps://github.com/GTWCode/GTW-RPG/",396],["local res, code = https.request(api..parameters)",323],["\"^(https://telegram.me/joinchat/%S+)$\",",263],["local jstr, res = https.request(url)",224],["local base_api = \"https://maps.googleapis.com/maps/api\"",220],["* Repository URI: https://github.com/X-Raym/REAPER-EEL-Scripts",210],["* File URI: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel",154],["-- https://core.telegram.org/method/messages.sendMessage",142]]},{"word":"i","context":[["i = i + 1",12902],["i = i + 1",12902],["local i = 1",6407],["local i = 0",3986],["for i = 1,nloop do",3456],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["for i = 1, #users do",1856],["return i",1697],["local i",1594]]},{"word":"icon","context":[["if icon then",399],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["icon = dirname .. \"menu.png\",",318],["<span class=\"select-menu-item-icon octicon octicon-check\"></span>",196],["-- This sets the icon shown for the weapon in the DNA sampler, search window,",195],["--icon & rank ------------------------------------------------------------------------------------------------",170],["return icon",143],["icon:Hide()",138],["// Override this in your SWEP to set the icon in the weapon selection",126],["icon:Show()",120]]},{"word":"icons","context":[["-- You can use your own layout icons like this:",201],["-- Themes define colours, icons, and wallpapers",174],["sharedicons   = shared .. \"/icons\"",146],["if not awful.util.file_readable(shared .. \"/icons/awesome16.png\") then",146],["-- Themes define colours, icons, font and wallpapers.",141],["-- Define the icon theme for application icons. If not set then the icons",103],["-- Define the icon theme for application icons. If not set then the icons",103],["-- from /usr/share/icons and /usr/share/icons/hicolor will be used.",100],["-- from /usr/share/icons and /usr/share/icons/hicolor will be used.",100],["theme.awesome_icon = \"/usr/share/awesome/icons/awesome16.png\"",83]]},{"word":"id","context":[["local chat_id = msg.to.id",7420],["if msg.from.id == our_id then",5480],["local target = msg.to.id",4950],["kick_user(msg.from.id, msg.to.id)",3616],["kick_user(msg.from.id, msg.to.id)",3616],["delete_msg(msg.id, ok_cb, false)",3385],["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["if data[tostring(msg.to.id)] then",3127],["local member_id = v.id",2794]]},{"word":"idx","context":[["idx = idx + 1",616],["idx = idx + 1",616],["local idx = 1",362],["if idx then",245],["local idx = 0",192],["local idx",129],["module = nn.SelectTable(idx)",119],["return idx",111],["for idx, value in ipairs(self.m_Data) do",108],["equal(gradInput[nonIdx[idx]], zeros[nonIdx[idx]], \"gradInput[nonIdx] dimension \" .. idx)",92]]},{"word":"if","context":[["if not is_momod(msg) then",30642],["if not ok then",9032],["if msg.to.type == 'chat' then",7144],["if not is_admin(msg) then",7015],["if not f then",6687],["if not is_owner(msg) then",6474],["if ok then",6339],["if msg.from.id == our_id then",5480],["if msg.out then",5376],["if err then",5172]]},{"word":"iff","context":[["slotDescriptorFilename = \"abstract/slot/descriptor/tangible.iff\",",4963],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_datapad.iff\",",4160],["\"object/creature/player/human_female.iff\",",1745],["\"object/creature/player/sullustan_female.iff\",",1730],["\"object/creature/player/rodian_female.iff\",",1729],["\"object/creature/player/moncal_female.iff\",",1724],["\"object/creature/player/twilek_female.iff\",",1724],["\"object/creature/player/zabrak_male.iff\",",1669],["\"object/creature/player/rodian_male.iff\",",1656],["\"object/creature/player/sullustan_male.iff\",",1656]]},{"word":"image","context":[["-- file: b00001\\image\\shadow.png",1165],["require 'image'",763],["local imageheight = image:getHeight()",591],["love.graphics.draw(image, x, y, 0, width, scaley)",448],["if image then",400],["-- Download the image and send to receiver, it will be deleted.",274],["local text = 'Error downloading the image'",266],["image:setFilter(\"nearest\", \"nearest\")",244],["{type='torch.Tensor', help='input image', req=true},",231],["image = \"icons1\",",218]]},{"word":"in","context":[["for k,v in pairs(result.members) do",6347],["for name, plugin in pairs(plugins) do",5467],["for v,user in pairs(config.sudo_users) do",2776],["for name,plugin in pairs(plugins) do",2735],["for k, v in pairs(_config.enabled_plugins) do",2735],["for k, pattern in pairs(plugin.patterns) do",2732],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729],["-- Enable plugins in config.json",2697],["-- Called again in 2 mins",2045],["for k,v in pairs(result) do",2010]]},{"word":"include","context":[["--provided that you include the source code of that other code when",29626],["include('shared.lua')",1754],["include(\"shared.lua\")",1197],["include \"constants.lua\"",498],["include( 'shared.lua' )",300],["include(\"keysym.h.lua\")",207],["include( \"shared.lua\" )",186],["include(\"LuaRules/Configs/customcmds.h.lua\")",169],["\"Symbols\", -- always include minimum symbols for executables",148],["Vector2 = require 'Vector2' -- include 2d vector lib",129]]},{"word":"includes","context":[["--Children folder includes",776],["-- Set any #includes or other C++ code to be placed verbatim at the top of",84],["-- Check handling of forced includes.",48],["-- An NPC has spawned somewhere in game.  This includes heroes",47],["-- TEST CASE 1: non-batch input, same code path but includes a resize",45],["--  This code will be place directly after any #includes at the top of the file",42],["-- Set any #includes or other C++ code to be placed verbatim below the",42],["--   #includes of every generated cpp file or \"\" for none",42],["-- Set the name of the header file that will have the #includes from the",42],["MAME_DIR .. \"src/mame/includes/astrocde.h\",",38]]},{"word":"index","context":[["index = index + 1",1666],["index = index + 1",1666],["index=0,",1321],["function index()",952],["local index = 1",828],["local index = 0",631],["if index then",603],["-- Returns the key (index) in the config.enabled_plugins table",467],["return index",376],["index = index + 1;",326]]},{"word":"info","context":[["info = function(self, t)",3295],["-- Get user info",1323],["local info = MobPhysicalMove(mob,target,skill,numhits,accmod,dmgmod,TP_NO_EFFECT);",1090],["return info",793],["info = {",772],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_SLASH,info.hitslanded);",738],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_SLASH,info.hitslanded);",738],["UIDropDownMenu_AddButton(info, level)",576],["\"info\",",548],["UIDropDownMenu_AddButton(info);",519]]},{"word":"ini","context":[["local ini = math.random(3,5)",1471],["local ini = (outi-1)*si+ki",1039],["local input = torch.Tensor(ini,inj,ink):zero()",486],["local input = torch.Tensor(ink, inj, ini):zero()",464],["ini(Monster);",344],["local input = torch.Tensor(from, inj, ini):zero()",337],["local input = torch.randn(from,inj,ini)",335],["input = torch.Tensor(batch,from,inj,ini):zero()",278],["local input = torch.Tensor(ini):zero()",269],["local input = torch.randn(bs,from,inj,ini)",263]]},{"word":"init","context":[["..';.luarocks/share/lua/5.2/?/init.lua'",2742],["function init()",802],["function init(me)",801],["self:init()",724],["super.init(self,conf)",680],["init()",397],["if init==nil then",344],["local super = require \"script.card.init\"",339],["local function init()",272],["init = function(self)",228]]},{"word":"inj","context":[["local inj = math.random(3,5)",1206],["local inj = (outj-1)*sj+kj",821],["local input = torch.Tensor(ini,inj,ink):zero()",486],["local input = torch.Tensor(ink, inj, ini):zero()",464],["local input = torch.Tensor(from, inj, ini):zero()",337],["local input = torch.randn(from,inj,ini)",335],["input = torch.Tensor(batch,from,inj,ini):zero()",278],["local input = torch.randn(bs,from,inj,ini)",263],["from, inj, ini, kj, ki, to, outj, outi)",179],["local input1 = torch.rand(ink, inj, ini)",164]]},{"word":"input","context":[["local err = jac.testJacobian(module,input)",1875],["local err = jac.testJacobian(module, input)",1639],["input = input:cuda()",1544],["input = input:cuda()",1544],["local output = module:forward(input)",1512],["local ferr, berr = jac.testIO(module, input)",1393],["local ferr,berr = jac.testIO(module,input)",1387],["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261],["for t,err in pairs(jac.testAllUpdate(module, input, 'weight', 'gradWeight')) do",1209],["local err = jac.testJacobianUpdateParameters(module, input, module.weight)",1126]]},{"word":"insert","context":[["table.insert(fingerprints, {",1983],["table.insert(users_info, user_info)",1071],["local tinsert = table.insert",503],["table.insert(_config.enabled_plugins, plugin_name)",382],["table.insert(update_table, subinit)",375],["for n in pairs(t) do table.insert(a, n) end",313],["-- For each status insert a list of positions where the quest will continue, i.e. a new status can be reached there",308],["local insert = table.insert",281],["local insert = table.insert",281],["local table_insert = table.insert",229]]},{"word":"inst","context":[["return inst",1351],["local inst = CreateEntity()",892],["onenter = function(inst)",792],["inst:AddComponent(\"inspectable\")",737],["inst.Physics:Stop()",470],["inst.entity:AddTransform()",449],["local trans = inst.entity:AddTransform()",437],["local anim = inst.entity:AddAnimState()",427],["inst.entity:AddAnimState()",418],["inst.entity:AddSoundEmitter()",407]]},{"word":"instance","context":[["return instance",979],["function onBcnmEnter(player,instance)",513],["function onBcnmLeave(player,instance,leavecode)",511],["function onBcnmRegister(player,instance)",509],["if instance then",430],["instance = nil",403],["instance:hide()",381],["local instance = {",253],["local instance = {}",246],["function OnBcnmRegister(player,instance)",214]]},{"word":"int","context":[["-- @param #int int",1413],["-- @param #int int",1413],["-- @return int#int ret (return value: int)",1316],["-- @return int#int ret (return value: int)",1316],["-- @return int#int ret (return value: int)",1316],["\"type\" : \"int\"",786],["var int ret = 0;",528],["input int A;",472],["int",435],["var int v;",364]]},{"word":"interface","context":[["local Talents = require(\"engine.interface.ActorTalents\")",375],["interface.select(ifname)",347],["interface I with",256],["local Stats = require \"engine.interface.ActorStats\"",252],["local Talents = require \"engine.interface.ActorTalents\"",216],["interface I;",162],["interface.find(ifname)",162],["-- Public interface ------------------------------------------------------",152],["ifstats = interface.getStats()",147],["interface Global with",119]]},{"word":"into","context":[["print ('saved config into ./data/config.lua')",3389],["print('saved config into ./data/config.lua')",2031],["-- Make sure we don't go into an endless error loop",325],["♻️ You can send your Ideas and messages to Us By sending them into bots account by this command :",232],["-- putting loot into treasure pool,",196],["-- Save into file the data serialized for lua.",139],["print ('saved gbans into ./data/gbans.lua')",134],["print ('saved gban into ./data/gbans.lua')",134],["-- Send a picture of the map, which takes scale into account",87],["--- Scans a JSON object into a Lua object.",78]]},{"word":"io","context":[["local f = io.open('./data/config.lua', \"r\")",2711],["local f = io.open(filename)",2495],["local f = io.open(filename, 'w')",2483],["print(tostring(io.popen(\"lua plugins/\"..v..\".lua\"):read('*all')))",1238],["io.flush()",815],["io.stdout:flush()",711],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["io.write(\"\\n\")",584],["io.close(f)",435],["local io = io",395]]},{"word":"ipairs","context":[["local ipairs = ipairs",1427],["local ipairs = ipairs",1427],["for k, v in ipairs(internals) do",905],["for k, v in ipairs(children) do",857],["for _, enemy in ipairs(self.enemies) do",664],["for _, card in ipairs(cards) do",550],["for _, friend in ipairs(self.friends_noself) do",321],["for i,v in ipairs(t) do",254],["for _, enemy in ipairs(enemies) do",239],["for i, expertGradInput in ipairs(gradInput[2]) do",225]]},{"word":"is","context":[["--This File is part of Core3.",29626],["--is making a combined work based on Engine3.",29626],["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["🔹 1984 is attacking🔸 ...",8225],["🔹íղƒҽɾղɑӀ™ is attacking🔸 ...",3880],["🔹🔸🔴HORROR™ is attacking🔴🔸🔹",2919],["-- This function is called when tg receive a msg",2732],["-- Checks if plugin is disabled on this chat",2729],["-- If plugin is for privileged users only",2729],["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729]]},{"word":"is_admin","context":[["if not is_admin(msg) then",7015],["if is_admin(msg) then",545],["if not is_admin(msg) and is_momod2(matches[2], msg.to.id) then",424],["if is_sudo(msg) or is_realm(msg) and is_admin(msg) then",286],["if matches[2] and is_admin(msg) then",248],["elseif is_admin(msg) then",243],["if type(msg.reply_id) ~=\"nil\" and is_admin(msg) then",227],["if is_admin(msg) and msg.to.type == 'chat' then",163],["if not is_sudo(msg) or not is_admin(msg) and not is_realm(msg) then",137],["if matches[1] == 'setgpname' and is_admin(msg) then",127]]},{"word":"is_admin1","context":[["if not is_admin1(msg) then",3550],["if is_admin1(msg) then",609],["if not is_admin1(msg) and not is_support(support_id) then",398],["elseif is_admin1(msg) then",341],["if matches[1] == 'msg.to.id' and is_admin1(msg) then",277],["if matches[1] == 'peer_id' and is_admin1(msg)then",277],["if not is_admin1(msg) and is_momod2(matches[2], msg.to.id) then",274],["if matches[2] == 'username' and is_admin1(msg) then",214],["if matches[1] == \"setusername\" and is_admin1(msg) then",207],["if not is_support(msg.from.id) and not is_admin1(msg) then",177]]},{"word":"is_momod","context":[["if not is_momod(msg) then",30642],["if type(msg.reply_id)~=\"nil\" and is_momod(msg) then",1145],["if is_momod(msg) then",883],["elseif is_momod(msg) then",807],["if matches[1] == 'setphoto' and is_momod(msg) then",723],["if matches[1] == 'res' and is_momod(msg) then",567],["if matches[1] == 'setname' and is_momod(msg) then",530],["if not is_momod(msg) or is_realm(msg) then",389],["if not is_momod(msg) then -- Ignore normal users",365],["if msg.media.type == 'photo' and data[tostring(msg.to.id)]['settings']['set_photo'] == 'waiting' and is_momod(msg) then",281]]},{"word":"is_owner","context":[["if not is_owner(msg) then",6474],["if tonumber(picprotectionredis) == 4 and not is_owner(msg) then",1052],["if tonumber(picprotectionredis) ==  8 and not is_owner(msg) then",982],["elseif is_owner(msg) then",679],["if not is_support(msg.from.id) and not is_owner(msg) then",558],["if tonumber(nameprotectionredis) == 4 and not is_owner(msg) then",525],["if tonumber(nameprotectionredis) ==  8 and not is_owner(msg) then",490],["if string.gsub(matches[2], \"@\", \"\") == msg.from.username and not is_owner(msg) then",396],["if is_owner(msg) then",300],["elseif is_owner(extra.msg) then",280]]},{"word":"is_sudo","context":[["if not is_sudo(msg) then",1977],["if is_sudo(msg) then",989],["if not is_sudo(msg) then-- Sudo only",478],["elseif is_sudo(msg) then",451],["if is_sudo(msg) or is_realm(msg) and is_admin(msg) then",286],["if matches[1] == 'md' and is_sudo(msg) then",269],["if matches[1] == 'mp' and is_sudo(msg) then",269],["if matches[1] == \"invite\" and is_sudo(msg) then",261],["elseif msg.action.type == \"chat_add_user\" and msg.action.user.id == tonumber(bot_id) and not is_sudo(msg) then",179],["if is_sudo(msg) or is_realm(msg) and is_admin1(msg) then",168]]},{"word":"it","context":[["--this exception also makes it possible to release a modified version",29626],["You can also do it by reply",3331],["-- Create a basic config.json file and saves it.",2728],["-- If file doesn't exist, create it.",2724],["-- Go over patterns. If one matches it's enough.",2724],["lootGroup = \"0\", -- Group it belongs to for loot",1544],["Will clear [modlist|rules|about] and set it to nil",1123],["if banned or is_gbanned(user_id) then -- Check it with redis",973],["return \"Only admins can do it for now\"",778],["-- Create a wibox for each screen and add it",372]]},{"word":"item","context":[["type = \"item\",",1228],["function onUse(cid, item, fromPosition, itemEx, toPosition)",1150],["if item then",931],["return item",675],["lookAtText = \"@string_table:item\",",660],["detailedDescription = \"@string_table:item\",",636],["function onUse(cid, item, frompos, item2, topos)",485],["function onUse(player, item, fromPosition, target, toPosition, isHotkey)",438],["if not item then",324],["if item ~= nil then",299]]},{"word":"items","context":[["items = {",1821],["[\"items\"] = 1,",1066],["[\"items\"] = {",471],["local items = {}",469],["[\"items\"] = 2,",296],["for i = 1, #items do",252],["mymainmenu = awful.menu({ items = { { \"awesome\", myawesomemenu, beautiful.awesome_icon },",235],["return items",223],["[\"items\"] = 3,",215],["-- giving key items, playing ENDING cutscenes",196]]},{"word":"j","context":[["j = j + 1",944],["j = j + 1",944],["s, i, j = c.s, c.i, c.j",396],["s, i, j = c.s, c.i, c.j",396],["local j = 1",373],["awful.key({ modkey, \"Shift\"   }, \"j\", function () awful.client.swap.byidx(  1)    end),",321],["awful.key({ modkey, \"Control\" }, \"j\", function () awful.screen.focus_relative( 1) end),",316],["local j = 0",314],["awful.key({ modkey,           }, \"j\",",310],["local s, i, j = c.s, c.i, c.j",276]]},{"word":"jac","context":[["local err = jac.testJacobian(module,input)",1875],["local err = jac.testJacobian(module, input)",1639],["local ferr, berr = jac.testIO(module, input)",1393],["local ferr,berr = jac.testIO(module,input)",1387],["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261],["for t,err in pairs(jac.testAllUpdate(module, input, 'weight', 'gradWeight')) do",1209],["local err = jac.testJacobianUpdateParameters(module, input, module.weight)",1126],["local err = jac.testJacobianParameters(module, input, module.bias, module.gradBias)",960],["local err = jac.testJacobianUpdateParameters(module, input, module.bias)",953],["for t,err in pairs(jac.testAllUpdate(module, input, 'bias', 'gradBias')) do",943]]},{"word":"join","context":[["if matches[2] == 'join' then",443],["globalkeys = awful.util.table.join(globalkeys,",400],["globalkeys = awful.util.table.join(",398],["clientkeys = awful.util.table.join(",392],["clientbuttons = awful.util.table.join(",391],["mytaglist.buttons = awful.util.table.join(",371],["root.buttons(awful.util.table.join(",370],["mytasklist.buttons = awful.util.table.join(",365],["mylayoutbox[s]:buttons(awful.util.table.join(",357],["!lock join",301]]},{"word":"joinchat","context":[["https://telegram.me/joinchat/CUn8UjxMJnvrrCLU04fLyQ",11116],["\"^(https://telegram.me/joinchat/%S+)$\",",263],["if segment == 'joinchat' then",39],["#Dev : https://telegram.me/joinchat/B-5QgD-MTEjbNrWUgWF85w🔰☠",35],["\"telegram.me/joinchat/\",",18],["link = 'https://telegram.me/joinchat/'..blocks[2]",11]]},{"word":"json","context":[["-- Create a basic config.json file and saves it.",2728],["-- Enable plugins in config.json",2697],["moderation = {data = 'data/moderation.json'},",2008],["local data = json:decode(res)",485],["luci.http.prepare_content(\"application/json\")",479],["file:write(json:encode_pretty(result))",438],["moderation = {data = 'data/moderation.json'}",382],["-- data saved to moderation.json",341],["local jdat = json:decode(url)",324],["local body = json.decode(response)",309]]},{"word":"k","context":[["for k,v in pairs(result.members) do",6347],["for k, v in pairs(_config.enabled_plugins) do",2735],["for k, pattern in pairs(plugin.patterns) do",2732],["for k,v in pairs(result) do",2010],["for k,v in pairs(data[tostring(msg.to.id)]['moderators']) do",1689],["for k,v in pairs(t) do",1595],["for k, v in pairs(t) do",1454],["return k",1369],["for k,user in pairs(users_info) do",1064],["for k,v in pairsByKeys(result) do",926]]},{"word":"keeping","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["if (leavecode == 2) then -- play end CS. Need time and battle id for record keeping + storage",289],["if(leavecode == 2) then -- play end CS. Need time and battle id for record keeping + storage",252],["-- for the sake of keeping this unit test simple,",18],["-- while keeping track of the gsub() count. A non-zero value -> failure",12],["--                 max_epoch=180, -- start decreasing learning rate, keeping lr > 0.004",12]]},{"word":"key","context":[["if key then",659],["return key",581],["parameters = parameters .. \"&key=\"..api_key",518],["-- Returns the key (index) in the config.enabled_plugins table",467],["-- Player traded a key.",455],["-- Bind all key numbers to tags.",375],["awful.key({ modkey, \"Shift\" }, \"#\" .. i + 9,",374],["awful.key({ modkey, \"Control\" }, \"#\" .. i + 9,",373],["awful.key({ modkey }, \"#\" .. i + 9,",372],["awful.key({ modkey, \"Control\", \"Shift\" }, \"#\" .. i + 9,",371]]},{"word":"keys","context":[["local keys = {}",750],["DebugPrintTable(keys)",536],["local caster = keys.caster",426],["root.keys(globalkeys)",401],["-- Set keys",393],["keys = clientkeys,",387],["return keys",380],["local ability = keys.ability",360],["table.sort(keys)",235],["local target = keys.target",212]]},{"word":"ki","context":[["local ini = (outi-1)*si+ki",1039],["local ki = math.random(1,5)",516],["local ki = math.random(2,4)",391],["local ki = math.random(3,15)",258],["local si = math.random(1,ki)",213],["local ki = math.random(3,4)",202],["from, inj, ini, kj, ki, to, outj, outi)",179],["local ini = (outi-1)*si+ki-2*padW",152],["bs, from, inj, ini, kj, ki, bs, to, outj, outi)",149],["local ini = (outi-1)*si+ki-padW*2",134]]},{"word":"kick","context":[["!kick [username|id]",1280],["Will kick user",1124],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["return send_large_msg(receiver, \"You can't kick mods/owner/admins\")",400],["--lock/unlock group member. bot automatically kick new added user when locked",373],["return 'Only a moderator can kick inactive users'",327],["return \"You can't kick your self !\"",256],["--[[if matches[1] == 'kick' and is_momod(msg) then",248],["if matches[1]:lower() == 'kick' then",243]]},{"word":"kick_user","context":[["kick_user(msg.from.id, msg.to.id)",3616],["kick_user(user_id, msg.to.id)",1179],["kick_user(user_id, chat_id)",1109],["kick_user(user_id, channel_id)",854],["kick_user(v.id, result.id)",469],["kick_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 3 times",358],["kick_user(msg.action.user.id, msg.to.id)",349],["return kick_user(member_id, chat_id)",292],["kick_user(member_id, channel_id)",280],["kick_user(user_id, channel_id)]]",270]]},{"word":"killer","context":[["function onMobDeath(mob,killer)",14108],["function onMobDeath(mob,killer,ally)",2467],["function onMobDeath(mob, killer)",2395],["killer = 0,",1084],["killer = 1,",750],["function onMobDeath(mob, killer, ally)",742],["local kills = killer:getVar(\"FOMOR_HATE\");",522],["killer:setVar(\"FOMOR_HATE\",kills + 2);",336],["killer:setVar(\"EVERYONES_GRUDGE_KILLS\",kills + 1);",237],["function onMobEngaged(mob, killer)",231]]},{"word":"kind","context":[["kind \"ConsoleApp\"",1801],["kind \"StaticLib\"",1796],["kind = \"string\",",1138],["kind \"SharedLib\"",1103],["[\"kind\"] = \"\\\"none\\\"\"",758],["[\"kind\"] = \"steel\"",588],["kind = \"list:string\",",533],["kind \"WindowedApp\"",474],["[\"kind\"] = [==[value]==],",412],["[\"kind\"] = \"none\"",379]]},{"word":"l","context":[["direction=\"l\",",16334],["return l",569],["local l = {}",376],["awful.key({ modkey, \"Control\" }, \"l\",     function () awful.tag.incncol(-1)         end),",294],["awful.key({ modkey, \"Shift\"   }, \"l\",     function () awful.tag.incnmaster(-1)      end),",290],["awful.key({ modkey,           }, \"l\",     function () awful.tag.incmwfact( 0.05)    end),",283],["if l then",259],["local l = 0",238],["local token, word_match = l.token, l.word_match",223],["local token, word_match = l.token, l.word_match",223]]},{"word":"label","context":[["label:SizeToContents()",294],["layer:addChild(label)",185],["label = function(Out, A)",170],["return label",167],["label:setAnchorPoint(cc.p(0.5, 0.5))",150],["type = \"label\",",135],["label = function(Out)",116],["label:SetJustifyH(\"LEFT\")",104],["if label then",103],["self.label:SetText(text)",101]]},{"word":"land","context":[["\"solid\", { \"light-grass\", \"land\", \"unpassable\",",6945],["Type = \"land\",",505],["\"solid\", { \"light-grass\", \"land\",",345],["function land()",185],["hook.land(\"land\")",147],["hook.land(\"land\")",147],["Construction = \"construction-land\",",126],["land = {",90],["function land ()",85],["if ud.weapons[1].onlyTargets.land then",55]]},{"word":"last","context":[["if last then",173],["killer[Monster.id]=Enemy.id; --Keeps track who attacked the monster last",156],["pos = last+1",150],["local last",147],["-- will get the text after the last \"/\" for filename",134],["until cont == 'last'",124],["-- @param secs Seconds since the last update.",101],["killer={}; --A list that keeps track of who attacked the monster last",86],["return last",84],["local last = 0",81]]},{"word":"layer","context":[["return layer",2455],["local layer = cc.Layer:create()",947],["Helper.initWithLayer(layer)",766],["layer     = 0,",712],["scene:addChild(layer)",616],["local layer = CCLayer:create()",496],["layer:initExtend()",483],["local layer = getBaseLayer()",447],["layer:registerScriptHandler(onNodeEvent)",343],["initWithLayer(layer)",312]]},{"word":"layout","context":[["local layout = wibox.layout.align.horizontal()",575],["local layout = wibox.layout.align.horizontal()",575],["layout:set_right(right_layout)",561],["local right_layout = wibox.layout.fixed.horizontal()",559],["local left_layout = wibox.layout.fixed.horizontal()",538],["layout:set_left(left_layout)",533],["if awful.layout.get(c.screen) ~= awful.layout.suit.magnifier",375],["if awful.layout.get(c.screen) ~= awful.layout.suit.magnifier",375],["-- Be careful: we use keycodes to make it works on any keyboard layout.",363],["awful.layout.suit.tile,",361]]},{"word":"left","context":[["-- Widgets that are aligned to the left",508],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] left using kickme \")-- Save to logs",332],["left = 0,",328],["awful.layout.suit.tile.left,",289],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] left via kickme\")",268],["left,",228],["align = \"left\",",176],["-- left",131],["-- N.B.: left, right, top, bottom",128],["--left",123]]},{"word":"len","context":[["local stringLen = string.len(s)",375],["for i = 1, len do",369],["len = len + 1",320],["len = len + 1",320],["local len = 0",271],["local text_len = text:len()",232],["return len",208],["for i=1,len do",200],["local text_len = string.len(text)",181],["if len > 0 then",169]]},{"word":"length","context":[["for i = 1, length do",346],["function string.random(length)",178],["local length = 0",146],["length = length + 1",144],["length = length + 1",144],["length = 3,",132],["if length then",119],["length = 0.8,",116],["length = 2.0,",115],["if length > 0 then",99]]},{"word":"level","context":[["level = 100,",1391],["level = 10,",698],["level = 4,",622],["UIDropDownMenu_AddButton(info, level)",576],["[\"level\"] = 0.0,",527],["level = level + 1",507],["level = level + 1",507],["local target = game.level.map(x, y, Map.ACTOR)",487],["[\"level\"] = 0,",463],["level = 7,",460]]},{"word":"lib","context":[["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["use the lib:",939],["local lib = require(\"core.lib\")",311],["MAME_DIR .. \"src/lib/util\",",311],["local lib = require(\"core.lib\")",311],["if not lib then return end",270],["MAME_DIR .. \"src/lib\",",191],["return lib",186],["lib:SetCurrentTranslations {",158],["local lib = {}",149]]},{"word":"light","context":[["paramtype = \"light\",",7367],["\"solid\", { \"light-grass\", \"land\", \"unpassable\",",6945],["\"solid\", { \"light-grass\", \"land\",",345],["paramtype = 'light',",242],["local light = lightNode:CreateComponent(\"Light\")",104],["light.lightType = LIGHT_DIRECTIONAL",95],["light = {",88],["id = \"light\",",78],["def.paramtype = \"light\"",78],["light.castShadows = true",74]]},{"word":"line","context":[["return line",561],["if not line then",538],["line = line + 1",465],["line = line + 1",465],["for line in file:lines() do",455],["for line in f:lines() do",390],["if line then",362],["if not line then break end",336],["local line",268],["print(line)",208]]},{"word":"lines","context":[["local lines = {}",652],["for line in file:lines() do",455],["for line in f:lines() do",390],["return lines",359],["local lines = self.lines",206],["local lines = self.lines",206],["for line in io.lines(arg[1]) do",193],["for filename in popen('ls -a \"'..directory..'\"'):lines() do",162],["for line in io.lines() do",137],["table.insert(lines, line)",129]]},{"word":"link","context":[["!link",1594],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group link [\"..group_link..\"]\")",952],["returns group link",905],["create/revoke your group link",905],["if matches[1] == 'link' then",623],["return \"Group link:\\n\"..group_link",609],["send_large_msg(receiver, \"Created a new link\")",598],["return send_large_msg(receiver, '*Error: Invite link failed* \\nReason: Not creator.')",584],["return \"Create a link using /newlink first !\"",560],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] revoked group link \")",508]]},{"word":"list","context":[["!list groups",1395],["!list realms",1395],["Get a list of all realms",1363],["Get a list of all groups",1362],["Get a list of members in group/realm",1360],["local list = {}",1322],["Commands list :",1180],["Members list",1130],["Moderators list",1116],["return list",975]]},{"word":"load","context":[["-- load plugins",2735],["-- Start and load values",2734],["function love.load()",1064],["-- todo: load data",680],["super.load(self,data)",678],["-- The file to load the frames from",390],["-- This file will describe the frames used to load an animation",270],["-- Define the image to load",207],["load(\"/data/general/grids/basic.lua\")",154],["-- This file will describe the frames used to load the sprite animations",119]]},{"word":"load_data","context":[["local data = load_data(_config.moderation.data)",19729],["function load_data(filename)",2438],["local data = load_data(_config.moderation.data, data)",304],["data = load_data(_config.moderation.data)",130],["local data = load_data(_config.administration[gid])",90],["local data = load_data(_config.moderation.data) -- FLUX MOD",70],["local DData = load_data(_config.moderation.data);",33],["local Xdata = load_data(_config.moderation.data);",33],["local moddat = load_data('moderation.json')",21],["local _memes = load_data()",21]]},{"word":"loaded","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["package.loaded[\"scripts/zones/Southern_San_dOria/TextIDs\"] = nil;",988],["package.loaded[\"scripts/zones/Northern_San_dOria/TextIDs\"] = nil;",880],["package.loaded[\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\"] = nil;",712],["package.loaded[\"scripts/zones/Lower_Jeuno/TextIDs\"] = nil;",653],["package.loaded[\"scripts/zones/Port_San_dOria/TextIDs\"] = nil;",583],["package.loaded[\"scripts/zones/Port_Bastok/TextIDs\"] = nil;",575],["package.loaded[\"scripts/zones/Temenos/TextIDs\"] = nil;",574],["package.loaded[\"scripts/zones/Windurst_Waters/TextIDs\"] = nil;",572],["package.loaded[\"scripts/zones/Metalworks/TextIDs\"] = nil;",546]]},{"word":"local","context":[["local receiver = get_receiver(msg)",23972],["local data = load_data(_config.moderation.data)",19729],["local e1=Effect.CreateEffect(c)",17703],["local function run(msg, matches)",10338],["local e2=Effect.CreateEffect(c)",8648],["local c=e:GetHandler()",7669],["local chat_id = msg.to.id",7420],["local receiver = cb_extra.receiver",7373],["local i = 1",6407],["local name = user_print_name(msg.from)",6387]]},{"word":"location","context":[["\"location\" : \"query\",",849],["\"location\",",612],["\"location\" : \"pathReplace\",",546],["location \"build\"",385],["\"location\" : \"header\",",361],["\"location\" : \"body\",",332],["lng  = data.results[1].geometry.location.lng",212],["lat  = data.results[1].geometry.location.lat",212],["-- The map name, subname and location image",129],["local location = touch:getLocation()",128]]},{"word":"locationReservationRadius","context":[["locationReservationRadius = 0,",26313]]},{"word":"lock","context":[["!lock [GroupID] [setting]",1135],["!lock [member|name|bots|leave]",751],["if matches[1] == 'lock' then",494],["-- lock/unlock group name. bot automatically change group name when locked",374],["--lock/unlock group member. bot automatically kick new added user when locked",373],["--lock/unlock group photo. bot automatically keep group photo when locked",371],["!lock leave",320],["!lock member",314],["!lock join",301],["!lock [grupo_id] [setting]",251]]},{"word":"lock_member","context":[["local group_member_lock = data[tostring(target)]['settings']['lock_member']",2334],["lock_member = 'no',",1957],["data[tostring(target)]['settings']['lock_member'] = 'no'",1513],["data[tostring(target)]['settings']['lock_member'] = 'yes'",1143],["local group_member_lock = settings.lock_member",666],["if not data[tostring(target)]['settings']['lock_member'] then",394],["local group_member_lock = data[tostring(msg.to.id)]['settings']['lock_member']",278],["if data[tostring(matches[2])]['settings']['lock_member'] == 'yes' and not is_owner2(msg.from.id, matches[2]) then",198],["lock_member = 'no'",175],["if settings.lock_member == 'yes' then",133]]},{"word":"locked","context":[["return 'Group members are not locked'",892],["return 'Group members are already locked'",890],["return 'Group members has been locked'",888],["return 'Group photo is not locked'",888],["return 'Group name is already locked'",884],["return 'Group name has been locked'",882],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked flood \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked member \")",788],["return 'Group flood is not locked'",761],["return 'Group flood is locked'",761]]},{"word":"log","context":[["!log",2916],["*Only owner can use res,setowner,promote,demote and log commands",875],["minetest.log(\"action\", player:get_player_name()..",683],["» Only owner can use res,setowner,promote,demote and log commands",470],["log(",411],["if matches[1] == 'log' and is_owner(msg) then",240],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set as log group\")",210],["return 'log group has been disabled'",206],["log.tic()",181],["minetest.log(\"action\", player:get_player_name() ..",180]]},{"word":"lookAtText","context":[["lookAtText = \"string_id_table\",",15254],["lookAtText = \"\",",1677],["lookAtText = \"@building_lookat:base_military_building\",",932],["lookAtText = \"@string_table:pristine wall\",",804],["lookAtText = \"@string_table:item\",",660],["lookAtText = \"@hair_lookat:hair\",",612],["lookAtText = \"@building_lookat:base_cave\",",176],["lookAtText = \"@container_lookat:base_container\",",156],["lookAtText = \"@weapon_lookat:sword_lightsaber\",",130],["lookAtText = \"@weapon_lookat:sword_lightsaber_2h\",",130]]},{"word":"lookups","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["if lookups then",123],["--// table lookups",60],["translate(\"Do not forward reverse lookups for local networks\"))",27],["boundaries, has no chunk lookups for get and set operations and is not subject to multithreading",27],["local lookups=rule.lookups",18],["local lookups=rule.lookups",18],["-- file configuration for it. Track both by key for quick lookups",16],["for _,lookup in next,lookups do",16],["local lookups=data.lookups",15]]},{"word":"lootGroups","context":[["lootGroups = {",5410],["lootGroups = {},",4998],["lootGroups =",24],["lootGroups = { },",20]]},{"word":"love","context":[["love.graphics.setColor(255, 255, 255, 255)",1973],["love.graphics.setColor(bordercolor)",1220],["function love.draw()",1172],["love.graphics.setFont(font)",1144],["function love.load()",1064],["love.graphics.setColor(255, 255, 255)",1059],["function love.update(dt)",992],["love.graphics.pop()",781],["love.graphics.push()",734],["love.graphics.rectangle(\"fill\", x, y, width, height)",711]]},{"word":"loveframes","context":[["local state = loveframes.state",1113],["local base = loveframes.base",670],["local defaultskin = loveframes.config[\"DEFAULTSKIN\"]",423],["local skins = loveframes.skins.available",397],["local skinindex = loveframes.config[\"ACTIVESKIN\"]",395],["local drawcount = loveframes.drawcount",358],["local loveframes = require(path .. \".libraries.common\")",222],["loveframes.templates.ApplyToObject(self)",132],["loveframes.downobject = self",118],["local hoverobject = loveframes.hoverobject",90]]},{"word":"lower","context":[["if matches[2]:lower() == 'rtl' then",516],["if matches[1]:lower() == \"stats\" then",468],["if matches[1]:lower() == \"statslist\" then",396],["if matches[1]:lower() == 'setrank' then",326],["elseif matches[1]:lower() == 'id' then",281],["Media.DisplayMessage(p.GetObjectiveDescription(id), \"New \" .. string.lower(p.GetObjectiveType(id)) .. \" objective\")",279],["if matches[1]:lower() == 'info' and not matches[2] then",263],["if matches[1]:lower() == 'info' and matches[2] then",254],["if matches[1]:lower() == 'ban' then-- /ban",250],["if matches[1]:lower() == \"banlist\" then -- Ban list !",247]]},{"word":"lua","context":[["print ('saved config into ./data/config.lua')",3389],["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["..';.luarocks/share/lua/5.2/?/init.lua'",2742],["..';.luarocks/share/lua/5.2/?/init.lua'",2742],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["-- Save the content of _config to config.lua",2734],["-- Returns the config from config.lua file.",2731],["-- If config.lua doesn't exist",2724],["local t = loadfile(\"plugins/\"..v..'.lua')()",2717]]},{"word":"luarocks","context":[["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["..';.luarocks/share/lua/5.2/?/init.lua'",2742],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["local util = require(\"luarocks.util\")",324],["local fs = require(\"luarocks.fs\")",296],["local cfg = require(\"luarocks.cfg\")",286],["local dir = require(\"luarocks.dir\")",240],["local path = require(\"luarocks.path\")",162],["local deps = require(\"luarocks.deps\")",107],["local fetch = require(\"luarocks.fetch\")",106]]},{"word":"luci","context":[["luci.http.prepare_content(\"application/json\")",479],["local sys = require \"luci.sys\"",338],["local uci = luci.model.uci.cursor()",219],["local http = require \"luci.http\"",217],["local util = require \"luci.util\"",210],["local uci = require \"luci.model.uci\".cursor()",208],["require(\"luci.sys\")",188],["local utl = require \"luci.util\"",151],["luci.sys.reboot()",141],["require(\"luci.util\")",137]]},{"word":"m","context":[["return m",2493],["if m then",668],["if m == 'set_name' then",576],["for m,n in pairs(settings) do",477],["local m = {}",453],["--send_large_msg('chat#id'..msg.to.id, 'I\\'m in matches[1]')",386],["awful.key({ modkey,           }, \"m\",",356],["\"\\027[35m%s\\027[m\",",234],["m.uci:set(\"wireless\", section, \"wds\", 1)",220],["r, m = parse(s)",205]]},{"word":"machine","context":[["type = \"assembling-machine\",",94],["-- This is a helper module used by the LuaJIT machine code dumper module.",64],["subgroup = \"production-machine\",",57],["close_sound = { filename = \"__base__/sound/machine-close.ogg\", volume = 0.75 },",50],["open_sound = { filename = \"__base__/sound/machine-open.ogg\", volume = 0.85 },",50],["-- specify available machine cores",49],["uint16_t type, machine;",44],["State machine for simulator.",43],["-- Moonshine - a Lua virtual machine.",42],["MAME_DIR .. \"src/mame/machine/kabuki.cpp\",",34]]},{"word":"main","context":[["function main()",912],["main()",748],["void main()",557],["local function main()",457],["flags = {\"goes-to-main-inventory\"},",439],["-- Create a laucher widget and a main menu",290],["void main() {",289],["flags = { \"goes-to-main-inventory\" },",232],["reaper.Undo_BeginBlock() -- Begining of the undo block. Leave it at the top of your main function.",173],["inv:set_size(\"main\", 8*4)",172]]},{"word":"make","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- Be careful: we use keycodes to make it works on any keyboard layout.",363],["module(..., package.seeall, class.make)",291],["local make = premake.make",152],["local make = premake.make",152],["-- Note: this mission does not make any system claims.",127],["WG.crude.ShowMenu() --make epic Chili menu appear.",115],["-- INSERT code here to make the scene come alive",92],["Removing the table key entry will make the element fall-back",81],["-- by the user in the Publish Manager dialog. Any changes that you make in",75]]},{"word":"makes","context":[["--this exception also makes it possible to release a modified version",29626],["-- :isvisible() makes no sense",283],["-- is both \">= math.huge\" and \"<= -math.huge\", which makes no sense but that's how it is.",77],["--   makes use of data types (classes, enums, etc) that are declared in this",42],["-- \"resolvconf\" makes resolv.conf to be symlink that",42],["if oredef.makes.ingot then",38],["Returning false makes the entity die",27],["-- This function should be called on each onThink and makes sure the npc faces the player it is talking to.",26],["cache contents also gets updated whenever a player successfully joins, since that makes the server",24],["-- restrictbuypistol - Enabling this feature makes /buy available only to Gun Dealers.",22]]},{"word":"making","context":[["--is making a combined work based on Engine3.",29626],["-\tDivran\t\t\t\t\t\tSuggested improvements for making the code quicker.",20],["-- read_bool and read_null are both making an assumption that I have not tested:",18],["-- making manual comparision of the byte values",18],["-- The returned option is actually the keyitem ID, making this much easier.",17],["-- @param relative_to string or nil: path to prepend when making",16],["--the \"30 seconds of rest\" you get before he attacks you, and making sure he teleports first in range",15],["--      for making sure a lane has ended (results are available); not requiring",13],["--check that it was not parenthesized, making it not an lvalue",13],["prerequisites = { \"armor-making-3\" },",13]]},{"word":"mame","context":[["MAME_DIR .. \"src/mame\",",51],["GEN_DIR  .. \"mame/layout\",",48],["MAME_DIR .. \"src/mame/includes/astrocde.h\",",38],["MAME_DIR .. \"src/mame/drivers/astrocde.cpp\",",38],["MAME_DIR .. \"src/mame/video/astrocde.cpp\",",38],["MAME_DIR .. \"src/mame/audio/gorf.cpp\",",38],["MAME_DIR .. \"src/mame/audio/wow.cpp\",",38],["MAME_DIR .. \"src/mame/machine/ng_memcard.cpp\",",34],["MAME_DIR .. \"src/mame/includes/cps1.h\",",34],["MAME_DIR .. \"src/mame/includes/neogeo.h\",",34]]},{"word":"map","context":[["local target = game.level.map(x, y, Map.ACTOR)",487],["map = {",385],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["return map",315],["local map = {}",295],["-- Set Firefox to always map on tags number 2 of screen 1.",269],["animationMapFilename = \"all_male.map\",",262],["local map = {",254],["ret:addChild(map, 0, kTagTileMap)",222],["Map = \"maps/random/random-map-forest.smp\",",221]]},{"word":"match","context":[["if string.match(matches[2], '^%d+$') then",1902],["match = '',",802],["if string.match(targetuser, '^%d+$') then",708],["v = string.match (v, \"(.*)%.lua\")",672],["elseif string.match(matches[2], '^%d+$') then",583],["elseif msg.text:match(\"@[%a%d]\") then",484],["-- This data should match information on http://wiki.ffxiclopedia.org/wiki/Calculating_Blue_Magic_Damage",467],["elseif string.match(user, '^@.+$') then",425],["if string.match(user, '^%d+$') then",420],["-- All clients will match this rule.",385]]},{"word":"matches","context":[["local function run(msg, matches)",10338],["local username = matches[2]",5894],["local username = string.gsub(matches[2], '@', '')",5217],["function run(msg, matches)",4315],["local user_id = matches[2]",3349],["if matches then",2789],["local matches = match_pattern(pattern, msg.text)",2732],["-- One patterns matches",2730],["local result = plugin.run(msg, matches)",2728],["-- Go over patterns. If one matches it's enough.",2724]]},{"word":"math","context":[["math.randomseed(now)",2729],["local ini = math.random(3,5)",1471],["local ink = math.random(3,5)",1293],["math.randomseed(os.time())",1251],["local inj = math.random(3,5)",1206],["local floor = math.floor",811],["local math = math",671],["local math = math",671],["local ki = math.random(1,5)",516],["local from = math.random(1,64)",516]]},{"word":"max","context":[["\\\"max\\\": \\\"1\\\",\\",3928],["\\\"max\\\": \\\"*\\\",\\",1967],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["max=100,",679],["mytester:assertlt(error:abs():max(), precision_forward, 'error on state (forward) ')",675],["max = 1,",418],["return min, max",388],["local max = 0",320],["local max = math.max",304],["local max = math.max",304]]},{"word":"me","context":[["https://telegram.me/joinchat/CUn8UjxMJnvrrCLU04fLyQ",11116],["return \"Are you trying to troll me?\"",2724],["function init(me)",801],["function update(me, dt)",738],["return 'Please send me new group photo now'",598],["entity_setState(me, STATE_IDLE)",551],["function enterState(me)",404],["function exitState(me)",402],["if entity_isState(me, STATE_IDLE) then",399],["function hitSurface(me)",378]]},{"word":"meatAmount","context":[["meatAmount = 0,",7382],["meatAmount = 65,",182],["meatAmount = 15,",177],["meatAmount = 5,",176],["meatAmount = 10,",157],["meatAmount = 1000,",120],["meatAmount = 35,",89],["meatAmount = 6,",82],["meatAmount = 4,",80],["meatAmount = 3,",79]]},{"word":"meatType","context":[["meatType = \"\",",8316],["meatType = \"meat_carnivore\",",1127],["meatType = \"meat_herbivore\",",630],["meatType = \"meat_insect\",",483],["meatType = \"meat_wild\",",319],["meatType = \"meat_avian\",",272],["meatType = \"meat_reptilian\",",158],["meatType = \"meat_carnivore_endor\",",54],["meatType = \"meat_domesticated\",",53],["meatType = \"meat_carnivore_yavin4\",",46]]},{"word":"media","context":[["if msg.media then",1411],["msg.text = '['..msg.media.type..']'",559],["if not msg.text and msg.media then",555],["\"media\",",458],["if msg.media.type == 'photo' and data[tostring(msg.to.id)]['settings']['set_photo'] == 'waiting' and is_momod(msg) then",281],["[\"rewardTexture\"] = \"Interface\\\\AddOns\\\\WorldQuestTracker\\\\media\\\\icon_artifactpower_red_roundT\",",266],["if msg.media.type == 'photo' and redis:get(\"bot:photo\") then",247],["if matches[2] == 'media' then",207],["local group_media_lock = data[tostring(target)]['settings']['media']",188],["data[tostring(target)]['settings']['media'] = 'no'",181]]},{"word":"member","context":[["if matches[2] == 'member' then",1743],["local member = string.gsub(matches[2], \"@\", \"\")",1270],["chat_info(receiver, username_id, {mod_cmd= mod_cmd, receiver=receiver, member=member})",938],["chat_info(receiver, username_id, {mod_cmd= mod_cmd, receiver=receiver, member=member})",938],["if matches[3] == 'member' then",921],["if vusername == member or vpeer_id == memberid then",841],["local member = string.gsub(matches[2], '@', '')",809],["local member = matches[2]",800],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked member \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked member \")",788]]},{"word":"member_id","context":[["if member_id ~= our_id then",3389],["local member_id = v.id",2794],["set_owner = member_id ,",1332],["local member_id = result.from.peer_id",844],["if is_admin2(member_id) then",837],["local member_id = msg.from.id",674],["local member_id = v.peer_id",601],["if is_momod2(member_id, chat_id) and not is_admin2(sender) then",590],["if data[group]['moderators'][tostring(member_id)] then",587],["data[group]['moderators'][tostring(member_id)] = nil",585]]},{"word":"member_username","context":[["return send_large_msg(receiver, member_username..' is already a moderator.')",818],["member_username = full_name",786],["local member_username = \"@\"..result.username",665],["data[group]['moderators'][tostring(member_id)] = member_username",580],["local function promote(receiver, member_username, member_id)",575],["local function demote(receiver, member_username, member_id)",572],["member_username = member",564],["return demote(receiver, member_username, member_id)",563],["return promote(receiver, member_username, member_id)",563],["local member_username = member_name:gsub(\"_\", \" \")",562]]},{"word":"members","context":[["for k,v in pairs(result.members) do",6347],["Get a list of members in group/realm",1360],["Get a file of members in group/realm",1360],["Kick all members and delete realm",1223],["return 'Group members are not locked'",892],["return 'Group members are already locked'",890],["return 'Group members has been locked'",888],["return 'Group members has been unlocked'",887],["return \"Only admins can clean members\"",437],["description = 'Know your information or the info of a chat members.',",358]]},{"word":"menu","context":[["local menu = DermaMenu()",388],["menu:Open()",359],["icon = dirname .. \"menu.png\",",318],["dofile(dirs.installdir .. \"/scripts/lua/inc/menu.lua\")",306],["-- Create a laucher widget and a main menu",290],["menu = mymainmenu })",275],["menu:AddSpacer()",268],["-- Variables set for theming the menu:",249],["menu:stop()",237],["mymainmenu = awful.menu({ items = { { \"awesome\", myawesomemenu, beautiful.awesome_icon },",235]]},{"word":"message","context":[["return message",2268],["Simple message statistics",1134],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["print('\\27[36mNot valid: Telegram message\\27[39m')",676],["file:write(message)",674],["message = message ..i..' - '..v..' [' ..k.. '] \\n'",663],["message = message ..i..' - '..v..' [' ..k.. '] \\n'",663],["message = message .. '- '.. name .. ' (' .. v .. ') ['..group_owner..'] \\n {'..group_link..\"}\\n\"",466],["message = message .. '- '.. name .. ' (' .. v .. ') ['..group_owner..'] \\n {'..group_link..\"}\\n\"",466],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute message\")",272]]},{"word":"messageSpecial","context":[["player:messageSpecial(FLYER_REFUSED);",1343],["player:messageSpecial(HOMEPOINT_SET);",1001],["player:messageSpecial(NOTHING_OUT_OF_ORDINARY);",936],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["player:messageSpecial(KEYITEM_OBTAINED + 1, getSupplyKey(region));",568],["player:messageSpecial(CONQUEST); -- \"You've earned conquest points!\"",568],["player:messageSpecial(CONQUEST + 94); -- \"Your home point has been set.\"",568],["player:messageSpecial(CHEST_UNLOCKED);",469],["player:messageSpecial(pack[2]);",469],["player:messageSpecial(ITEM_OBTAINED,loot[2]);",469]]},{"word":"messages","context":[["-- wipe the data to allow the bot to read service messages",2726],["-- Don't process outgoing messages",2700],["♻️ You can send your Ideas and messages to Us By sending them into bots account by this command :",232],["text = text..'Total messages : '..user_info_msgs..'\\n\\n'",226],["!feedback (your ideas and messages)",221],["-- https://core.telegram.org/method/messages.sendMessage",142],["messages = {",115],["say(\"Your messages will go here\", false)",110],["require(\"X-Raym_Functions - console debug messages\")",108],["debug = 1 -- 0 => No console. 1 => Display console messages for debugging.",105]]},{"word":"meta","context":[["local meta = minetest.get_meta(pos)",2774],["local inv = meta:get_inventory()",1620],["local meta = minetest.env:get_meta(pos)",528],["local meta = minetest.get_meta(pos);",411],["meta:set_string(\"formspec\",",257],["local alt, ctrl, meta, shift = Spring.GetModKeyState()",238],["if meta then",230],["if jdat.meta.error_message then",212],["if not has_locked_chest_privilege(meta, player) then",207],["meta:get_string(\"owner\")..\" at \"..",167]]},{"word":"method","context":[["method = 'HEAD'",4373],["method = 'GET'",3663],["type = \"method\",",1560],["{{name=Tensor, default=true, returned=true, method={default='nil'}},",870],["method = \"GET\",",858],["class = \"method\",",640],["type = \"method\"",512],["{name=Tensor, method={default=1}},",499],["method = \"POST\",",369],["class=\"method\",",233]]},{"word":"milk","context":[["milk = 0,",11842],["milk = 1,",109],["milk = 100,",21],["-- when cow/sheep eats grass, replace wool and milk",19],["-- bucket of milk",18],["-- milk cow with empty bucket",17],["milk = 125,",16],["milk = 225,",15],["milk = 200,",14],["milk = 135,",14]]},{"word":"min","context":[["\\\"min\\\": 0,\\",5209],["min = 0,",823],["\\\"min\\\": 1,\\",717],["min = 1,",442],["return min, max",388],["[\"min\"] = 0,",365],["local min = math.min",280],["local min = math.min",280],["return -min, -max",229],["[\"min\"] = 70,",155]]},{"word":"minetest","context":[["minetest.register_craft({",14076],["local meta = minetest.get_meta(pos)",2774],["minetest.register_craft( {",1848],["minetest.register_abm({",1846],["minetest.register_ore({",1527],["minetest.register_decoration({",1041],["minetest.register_biome({",994],["minetest.log(\"action\", player:get_player_name()..",683],["if not minetest.setting_getbool(\"creative_mode\") then",608],["minetest.remove_node(pos)",543]]},{"word":"mob","context":[["function onMobSpawn(mob)",15118],["function onMobDeath(mob,killer)",14108],["function onMobEngaged(mob,target)",12350],["function onMobInitialize(mob)",11037],["function onMobFight(mob,target)",10839],["stfName = \"mob/creature_names\",",6333],["function onMobWeaponSkill(target, mob, skill)",3759],["function onMobSkillCheck(target,mob,skill)",3740],["function onMobDeath(mob, player, isKiller)",3026],["function onMobDeath(mob,killer,ally)",2467]]},{"word":"mobile","context":[["\"object/mobile/vendor/human_female.iff\",",824],["\"object/mobile/vendor/bothan_female.iff\",",807],["\"object/mobile/vendor/sullustan_female.iff\",",804],["\"object/mobile/vendor/rodian_female.iff\",",803],["\"object/mobile/vendor/moncal_female.iff\",",798],["\"object/mobile/vendor/twilek_female.iff\",",797],["\"object/mobile/vendor/aqualish_female.iff\",",750],["\"object/mobile/vendor/human_male.iff\",",745],["\"object/mobile/vendor/zabrak_female.iff\",",743],["\"object/mobile/vendor/zabrak_male.iff\" },",732]]},{"word":"mod","context":[["local L\t\t= mod:GetLocalizedStrings()",1089],["mod:RegisterEventsInCombat(",969],["mod:RegisterCombat(\"combat\")",954],["function mod:SPELL_AURA_APPLIED(args)",851],["mod:SetZone()",747],["function mod:SPELL_CAST_START(args)",713],["function mod:OnCombatStart(delay)",710],["function mod:SPELL_CAST_SUCCESS(args)",523],["function mod:SPELL_AURA_REMOVED(args)",499],["function mod:OnCombatEnd()",310]]},{"word":"mode","context":[["mode = \"passive\",",671],["mode = \"sustained\",",466],["[\"mode\"] = 2.0,",371],["moderated = true, -- set to moderator mode",267],["hidden:depends({mode=\"ap\"})",213],["[\"mode\"] = 2,",209],["mode:value(\"monitor\", translate(\"Monitor\"))",198],["\"WPA-Encryption requires wpa_supplicant (for client mode) or hostapd (for AP \" ..",177],["\"and ad-hoc mode) to be installed.\"",177],["bssid:depends({mode=\"adhoc\"})",176]]},{"word":"model","context":[["return model",521],["[\"ClassName\"] = \"model\",",382],["local model = nn.Sequential()",308],["model = nn.Sequential()",296],["model:cuda()",243],["model:add(nn.Tanh())",231],["local uci = luci.model.uci.cursor()",219],["model:evaluate()",209],["local uci = require \"luci.model.uci\".cursor()",208],["model:add(nn.ReLU())",197]]},{"word":"moderation","context":[["save_data(_config.moderation.data, data)",60497],["local data = load_data(_config.moderation.data)",19729],["moderation = {data = 'data/moderation.json'},",2008],["moderation = {data = 'data/moderation.json'},",2008],["moderation = {data = 'data/moderation.json'}",382],["moderation = {data = 'data/moderation.json'}",382],["-- data saved to moderation.json",341],["local data = load_data(_config.moderation.data, data)",304],["-- check moderation plugin",302],["-- moderation.lua --",272]]},{"word":"moderators","context":[["return \"For moderators only!\"",10263],["for k,v in pairs(data[tostring(msg.to.id)]['moderators']) do",1689],["moderators = {},",1345],["if next(data[tostring(msg.to.id)]['moderators']) == nil then --fix way",1121],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["data[tostring(msg.to.id)]['moderators'][tostring(k)] = nil",816],["if data[group]['moderators'][tostring(member_id)] then",587],["data[group]['moderators'][tostring(member_id)] = nil",585],["if not data[group]['moderators'][tostring(member_id)] then",585],["data[group]['moderators'][tostring(member_id)] = member_username",580]]},{"word":"modified","context":[["--this exception also makes it possible to release a modified version",29626],["--Note that people who make modified versions of Engine3 are not obligated",29625],["--to grant this special exception for their modified versions;",29624],["//  modified or distributed  //",73],["cmd:option('-savedataset', false, 'save modified dataset')",58],["-- @param c The client whose titlebar is modified",39],["-- (modified version that uses prefix)",30],["system.modified = true",29],["modified = true",28],["could be modified or even destroyed by another thread while the plugin holds it, so it would be",27]]},{"word":"modkey","context":[["awful.button({ modkey }, 1, awful.mouse.client.move),",390],["awful.button({ modkey }, 1, awful.client.movetotag),",379],["awful.button({ modkey }, 3, awful.mouse.client.resize))",378],["awful.key({ modkey, \"Shift\" }, \"#\" .. i + 9,",374],["awful.button({ modkey }, 3, awful.client.toggletag),",373],["awful.key({ modkey, \"Control\" }, \"#\" .. i + 9,",373],["awful.key({ modkey }, \"#\" .. i + 9,",372],["awful.key({ modkey, \"Control\", \"Shift\" }, \"#\" .. i + 9,",371],["awful.key({ modkey,           }, \"m\",",356],["awful.key({ modkey,           }, \"Tab\",",349]]},{"word":"modlist","context":[["!modlist",1687],["!clean [modlist|rules|about]",1221],["Will clear [modlist|rules|about] and set it to nil",1123],["return modlist(msg)",871],["local function modlist(msg)",856],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group modlist\")",784],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] cleaned modlist\")",778],["if matches[2] == 'modlist' then",665],["if matches[1] == 'modlist' then",508],["\"^[!/](modlist)$\",",210]]},{"word":"mods","context":[["*Only owner and mods can add bots in group",872],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["return \"For mods only !\"",773],["» Only mods, owner and admin can add bots in group",470],["return send_large_msg(receiver, \"You can't kick mods/owner/admins\")",400],["return \"you can't ban mods/owner/admins\"",274],["return \"For mods only!\"",266],["return \"you can't kick mods/owner/admins\"",241],["--Applying server mods....",219],["*only owners can mute | mods and owners can unmute",216]]},{"word":"module","context":[["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["local err = jac.testJacobian(module,input)",1875],["local err = jac.testJacobian(module, input)",1639],["local output = module:forward(input)",1512],["local ferr, berr = jac.testIO(module, input)",1393],["local ferr,berr = jac.testIO(module,input)",1387],["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261],["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261],["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261]]},{"word":"modules","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["package.path = dirs.installdir .. \"/scripts/lua/modules/?.lua;\" .. package.path",718],["for i=1,#self.modules do",232],["applicationFunction = function (modules, sharedData)",194],["local cli = require 'busted.modules.cli'()",179],["modules = {",174],["for i,module in ipairs(self.modules) do",157],["mytester:asserteq((p[{ {1,100} }] - n.modules[2].weight):norm(), 0, 'error when using cloning+sharing')",138],["mytester:asserteq((p[{ {101,110} }] - n.modules[2].bias):norm(), 0, 'error when using cloning+sharing')",138],["t.modules.event = true             -- Enable the event module (boolean)",135]]},{"word":"mohammad","context":[["mohammad",12647]]},{"word":"more","context":[["--more details.",29626],["-- COPYING file in the source package for more information.",586],["-- @param operator Optional. Comparison operator: less, atMost, equal, atLeast, more.",439],["kick_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 3 times",358],["ban_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 7 times",357],["// ========= For more information, visit us at http://www.unknownworlds.com =====================",167],["-- Nil or empty, exit case (no more urls)",141],["--Check if user has spammed is group more than 4 times",129],["if CLIENT then return end -- No more client",84],["-- Features, documentation and more: http://www.scilua.org .",81]]},{"word":"motafeghin","context":[["hacked by motafeghin",10773]]},{"word":"mouse","context":[["local screen = mouse.screen",765],["- desc: called when the player presses a mouse button",404],["awful.button({ modkey }, 1, awful.mouse.client.move),",390],["awful.button({ modkey }, 3, awful.mouse.client.resize))",378],["mypromptbox[mouse.screen].widget,",374],["- desc: called when the player releases a mouse button",344],["awful.mouse.client.move(c)",291],["awful.mouse.client.resize(c)",287],["awful.key({ modkey },            \"r\",     function () mypromptbox[mouse.screen]:run() end),",266],["c:connect_signal(\"mouse::enter\", function(c)",262]]},{"word":"msg","context":[["if not is_momod(msg) then",30642],["local receiver = get_receiver(msg)",23972],["local function run(msg, matches)",10338],["return msg",9893],["local chat_id = msg.to.id",7420],["if msg.to.type == 'chat' then",7144],["if not is_admin(msg) then",7015],["if not is_owner(msg) then",6474],["local name = user_print_name(msg.from)",6387],["if msg.from.id == our_id then",5480]]},{"word":"msg_type","context":[["unmute(chat_id, msg_type)",2418],["mute(chat_id, msg_type)",2414],["if is_muted(chat_id, msg_type..': yes') then",2389],["if not is_muted(chat_id, msg_type..': yes') then",2386],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: mute \"..msg_type)",1911],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute \"..msg_type)",1639],["return \"Mute \"..msg_type..\" is already off\"",988],["return \"SuperGroup mute \"..msg_type..\" is already on\"",865],["return msg_type..\" has been unmuted\"",709],["return msg_type..\" has been muted\"",695]]},{"word":"msgs","context":[["if a.msgs and b.msgs then",1064],["if a.msgs and b.msgs then",1064],["return a.msgs > b.msgs",1064],["return a.msgs > b.msgs",1064],["local um_hash = 'msgs:'..user_id..':'..chat_id",1016],["text = text..user.name..' = '..user.msgs..'\\n'",964],["-- Sort users by msgs number",929],["user_info.msgs = tonumber(redis:get(um_hash) or 0)",773],["local um_hash = 'msgs:'..result.id..':'..extra.chat2",692],["-- Returns a table with `name` and `msgs`",490]]},{"word":"mt","context":[["local mt = {}",527],["local mt = {",466],["local mt = { __index = _M }",261],["if mt then",240],["local mt = getmetatable(t)",192],["mt = {}",133],["setmetatable(t, mt)",122],["return setmetatable({}, mt)",114],["if mt == nil then",102],["local mt = getmetatable(obj)",102]]},{"word":"must","context":[["mytester:assert(#gradInput == 2, 'gradInput must be table of size 2')",246],["-- param urls must be a table.",136],["commandanswer (nick, string.format (gettext (\"Configuration variable %s must be a number.\"), tvar))",133],["-- The message must come from a chat group",132],["if (not isEncodable(v)) then return false end\t-- All array elements must be encodable",82],["player:PrintToPlayer(\"You must enter a valid amount.\");",80],["-- Otherwise, it must be a constant",78],["-- Negative infinity is properly \"<= -math.huge\". So, we must be sure to check the \">=\"",77],["2. Altered source versions must be plainly marked as such, and must not be",77],["2. Altered source versions must be plainly marked as such, and must not be",77]]},{"word":"mytester","context":[["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["mytester:assertlt(err, precision, string.format(",2191],["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["mytester:assertlt(err,precision, 'error on weight ')",719],["mytester:assertlt(error:abs():max(), precision_forward, 'error on state (forward) ')",675]]},{"word":"n","context":[["n = n + 1",2374],["n = n + 1",2374],["return n",1807],["for i = 1, n do",1503],["local n = 0",1486],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["text = text..user.name..' = '..user.msgs..'\\n'",964],["return 'Set group rules to:\\n'..rules",843],["return 'Set group description to:\\n'..about",768],["if n then",752]]},{"word":"name","context":[["name = \"\",",6575],["local name = user_print_name(msg.from)",6387],["for name, plugin in pairs(plugins) do",5467],["for name,plugin in pairs(plugins) do",2735],["match_plugin(plugin, name, msg)",2729],["print('Preprocess', name)",2698],["[\"name\"] = {",1723],["if name then",1626],["local namehash = 'name:changed:'..msg.to.id..':'..msg.from.id",1587],["!setname [name]",1556]]},{"word":"name_log","context":[["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: mute \"..msg_type)",1911],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute \"..msg_type)",1639],["local name_log = user_print_name(msg.from)",1195],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group link [\"..group_link..\"]\")",952],["local name_log = print_name:gsub(\"_\", \" \")",926],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked member \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked flood \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked member \")",788],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group rules\")",787],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set flood to [\"..matches[2]..\"]\")",785]]},{"word":"names","context":[["local names = {}",471],["for i=1, #names do",470],["local names = redis:hkeys(hash)",437],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked rtl chars. in names\")",325],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked RTL chars. in names\")",323],["text = text..'> '..names[i]..'\\n'",197],["return 'RTL char. in names has been unlocked'",160],["return 'RTL char. in names is already unlocked'",160],["return 'RTL char. in names has been locked'",159],["return 'RTL char. in names is already locked'",159]]},{"word":"net","context":[["net.SendToServer()",997],["net.Broadcast()",727],["net.Send(ply)",638],["return net",272],["local net = nn.Sequential()",267],["net.WriteEntity(self)",245],["net.WriteEntity(ply)",230],["local ent = net.ReadEntity()",214],["local ply = net.ReadEntity()",207],["-- This file is part of libquvi-scripts <http://quvi.sourceforge.net/>.",206]]},{"word":"network","context":[["for net in utl.imatch(s.network) do",125],["local netmd = require \"luci.model.network\".init()",115],["local ntm = require \"luci.model.network\".init()",112],["local nw = require \"luci.model.network\"",104],["translate(\"Distance to farthest network member in meters.\"))",99],["luci.http.redirect(luci.dispatcher.build_url(\"admin/network/wireless\"))",91],["-- redirect to overview page if network does not exist anymore (e.g. after a revert)",77],["uci:foreach(\"network\", \"interface\",",76],["print \"==> test network output:\"",71],["uci:save(\"network\")",69]]},{"word":"new","context":[["print (\"Created new config file: data/config.lua\")",2708],["local npcHandler = NpcHandler:new(keywordHandler)",1986],["local keywordHandler = KeywordHandler:new()",1976],["npcHandler:addModule(FocusModule:new())",1873],["return new",758],["send_large_msg(receiver, \"Created a new link\")",598],["return 'Please send me new group photo now'",598],["GestureRange:new{",504],["UIManager:show(InfoMessage:new{",419],["--lock/unlock group member. bot automatically kick new added user when locked",373]]},{"word":"next","context":[["if next(data[tostring(msg.to.id)]['moderators']) == nil then --fix way",1121],["if not data or not next(data) then",713],["\"next\", -- [6]",712],["if next(data[tostring(msg.to.id)]['moderators']) == nil then",567],["local next = next",298],["local next = next",298],["prev = true -- add a seperator before the next element",208],["for orig_key, orig_value in next, orig, nil do",197],["next()",184],["if next(matches) then",179]]},{"word":"nil","context":[["return nil",38136],["valuetype = nil,",3825],["return nil, err",3602],["if ptr ~= nil then",3078],["if type(msg.reply_id) ~= \"nil\" then",2748],["if plugin.cron ~= nil then",2729],["return nil;",2255],["nil, -- [7]",2028],["nil,",1737],["data[tostring(msg.to.id)][data_cat] = nil",1675]]},{"word":"nn","context":[["require 'nn'",1441],["local n = nn.Sequential()",373],["n:add( nn.Linear(10,10) )",368],["local model = nn.Sequential()",308],["model = nn.Sequential()",296],["local err = nn.Jacobian.testJacobian(module, input)",268],["local net = nn.Sequential()",267],["model:add(nn.Tanh())",231],["local concat = nn.ConcatTable()",219],["local ferr, berr = nn.Jacobian.testIO(module, input)",218]]},{"word":"no","context":[["lock_photo = 'no',",2004],["lock_member = 'no',",1957],["if group_member_lock == 'no' then",1579],["data[tostring(target)]['settings']['lock_member'] = 'no'",1513],["elseif group_photo_lock == 'no' then",1268],["if group_flood_lock == 'no' then",1151],["data[tostring(target)]['settings']['flood'] = 'no'",1142],["data[tostring(target)]['settings']['public'] = 'no'",1072],["if group_photo_lock == 'no' then",1023],["if group_name_lock == 'no' then",1018]]},{"word":"noBuildRadius","context":[["noBuildRadius = 0,",23866],["noBuildRadius = 64,",2332],["noBuildRadius = 8,",60],["noBuildRadius = 1,",42],["noBuildRadius = 20,",26],["noBuildRadius = 32,",24],["noBuildRadius = 128,",14]]},{"word":"node","context":[["return node",1057],["action = function(pos, node, active_object_count, active_object_count_wider)",839],["-- @param #cc.Node node",650],["action = function(pos, node)",644],["local node = minetest.get_node(pos)",489],["if node then",425],["local node",345],["on_rightclick = function(pos, node, clicker)",330],["on_punch = function(pos, node, puncher)",279],["if not node then",277]]},{"word":"none","context":[["[\"kind\"] = \"\\\"none\\\"\"",758],["buildingType = \"none\"",450],["[\"kind\"] = \"none\"",379],["SWEP.Secondary.Ammo\t\t\t= \"none\"",286],["buildingType = \"none\",",216],["-- receive this weapon as soon as the round starts. In this case, none.",209],["SWEP.Secondary.Ammo = \"none\"",190],["Armor = 20, BasicDamage = 0, PiercingDamage = 0, Missile = \"missile-none\",",168],["SWEP.Secondary.Ammo\t\t= \"none\"",161],["-- none",160]]},{"word":"normal","context":[["-- Double ! to discriminate of normal actions",2725],["-- Set PH back to normal, then set to respawn spawn",634],["if not is_momod(msg) then -- Ignore normal users",365],["if titlebars_enabled and (c.type == \"normal\" or c.type == \"dialog\") then",270],["-- menu_[bg|fg]_[normal|focus]",270],["normal = Vector(0,-1,0)",244],["[\"normal\"] = {",231],["normal = Vector(-1,0,0)",208],["normal = Vector(0,1,0)",208],["-- titlebar_[bg|fg]_[normal|focus]",203]]},{"word":"not","context":[["if not is_momod(msg) then",30642],["--Note that people who make modified versions of Engine3 are not obligated",29625],["if not ok then",9032],["if not is_admin(msg) then",7015],["if not f then",6687],["if not is_owner(msg) then",6474],["if not msg.service then",3932],["if not is_admin1(msg) then",3550],["if not status then",3109],["if not started then",2768]]},{"word":"now","context":[["now = os.time()",2786],["math.randomseed(now)",2729],["if msg.date < now then",2509],["-- Leave blank for now",860],["return \"Only admins can do it for now\"",778],["return 'Please send me new group photo now'",598],["return 'Please send me the group photo now'",356],["local text = msg.from.print_name:gsub(\"_\", \" \")..\" is the owner now\"",297],["local now = os.time()",291],["return 'Group is now: public'",271]]},{"word":"npc","context":[["function onTrigger(player,npc)",25472],["function onTrade(player,npc,trade)",24940],["tradeConquestGuard(player,npc,trade,guardnation,guardtype);",728],["mobType = \"npc\",",672],["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["if (npc:getAnimation() == 9) then",453],["local pack = openChance(player,npc,trade,TreasureType,TreasureLvL,TreasureMinLvL,questItemNeeded);",441],["UpdateTreasureSpawnPoint(npc:getID());",410],["[\"npc\"] = \"0\";",352],["npc  = {",342]]},{"word":"npcHandler","context":[["npcHandler.topic[cid] = 0",5888],["local npcHandler = NpcHandler:new(keywordHandler)",1986],["NpcSystem.parseParameters(npcHandler)",1986],["npcHandler:addModule(FocusModule:new())",1873],["npcHandler:setCallback(CALLBACK_MESSAGE_DEFAULT, creatureSayCallback)",1333],["function onCreatureAppear(cid)\t\t\tnpcHandler:onCreatureAppear(cid)\t\t\tend",1146],["function onCreatureDisappear(cid)\t\tnpcHandler:onCreatureDisappear(cid)\t\t\tend",1139],["function onCreatureSay(cid, type, msg)\t\tnpcHandler:onCreatureSay(cid, type, msg)\t\tend",1113],["npcHandler:say({",1051],["npcHandler.topic[cid] = 1",956]]},{"word":"null","context":[["\"default\" : null,",268],["[[null]],",267],["return \"null\"",203],["return 'null'",200],["experimentalSubGroupTitles = {\"null\", \"null\", \"hitpoints\"},",158],["experimentalSubGroupTitles = {\"null\", \"null\", \"hitpoints\"},",158],["experimentalSubGroupTitles = {\"null\", \"null\"},",154],["experimentalSubGroupTitles = {\"null\", \"null\"},",154],["experimentalGroupTitles = {\"null\", \"null\"},",154],["experimentalGroupTitles = {\"null\", \"null\"},",154]]},{"word":"num","context":[["num = num + 1",861],["num = num + 1",861],["num = 0",522],["return num",488],["local num = 1",473],["local num = 0",473],["num = matches[2]",391],["return kick_inactive(chat_id, num, receiver)",390],["if tonumber(nmsg) < tonumber(num) then",387],["local function kick_inactive(chat_id, num, receiver)",387]]},{"word":"number","context":[["Type = \"number\",",5184],["-- Sort users by msgs number",929],["type = \"number\",",852],["type = 'number',",852],["return \"Wrong number,range is [5-20]\"",554],["-- @param number Optional. The number to compare against.",522],["-- @param number Optional. The number to compare against.",522],["-- @paramsig number or boolean",520],["number = number..\"\\nنوع سیمکارت: ایرانسل\"",488],["number = number..\"\\nنوع سیمکارت: ایرانسل\"",488]]},{"word":"o","context":[["return o",4811],["setmetatable(o, self)",2683],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["local o = {}",1228],["o = o or {}",954],["o = o or {}",954],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["o.rmempty = false",657]]},{"word":"obj","context":[["return obj",2722],["local obj = {}",838],["return obj;",780],["if obj then",546],["local obj = setmetatable({}, {__index = self});",531],["local self = this.obj",446],["local obj = {",438],["if obj.Constructor then",411],["obj:Constructor(...);",385],["setmetatable(obj, self)",341]]},{"word":"object","context":[["Map:AddGroundObject(object);",2020],["behaviorScript = \"\", -- Link to the behavior script for this object",1762],["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["\"object/creature/player/human_female.iff\",",1745],["\"object/creature/player/sullustan_female.iff\",",1730],["\"object/creature/player/rodian_female.iff\",",1729],["\"object/creature/player/twilek_female.iff\",",1724],["\"object/creature/player/moncal_female.iff\",",1724],["\"object/creature/player/zabrak_male.iff\",",1669],["\"object/creature/player/sullustan_male.iff\",",1656]]},{"word":"objectName","context":[["objectName = \"string_id_table\",",4312],["objectName = \"@obj_n:unknown_object\",",3352],["objectName = \"\",",2272],["objectName = \"@poi_n:base_poi_building\",",912],["objectName = \"@item_n:ship_attachment\",",656],["objectName = \"@hair_name:hair\",",432],["objectName = \"@npc_name:human_base_male\",",150],["objectName = \"@obj_n:unknown_creature\",",114],["objectName = \"@building_name:garden\",",110],["objectName = \"@building_name:cave\",",106]]},{"word":"objects","context":[["-- The values below are the default values.  To be used for blue frog objects primarily",844],["objects = {",420],["local objects = {}",194],["for _, object in ipairs(layer.objects) do",129],["-- c++ objects instances",109],["return objects",105],["objects = {}",97],["-- Cache some library functions and objects.",92],["load(\"/data/general/objects/objects-maj-eyal.lua\")",81],["load(\"/data/general/objects/objects-maj-eyal.lua\")",81]]},{"word":"obligated","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["this exception to your version of the file, but you are not obligated to",17]]},{"word":"of","context":[["--provided that you include the source code of that other code when",29626],["--This File is part of Core3.",29626],["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- ToME - Tales of Maj'Eyal",3709],["-- Save the content of _config to config.lua",2734],["-- Double ! to discriminate of normal actions",2725],["--  This file is part of Invertika.                                             --",2706],["height = 1, -- Size of creature",1799],["Get a list of all realms",1363],["Get a list of all groups",1362]]},{"word":"off","context":[["return \"Mute \"..msg_type..\" is already off\"",988],["arg1.off = TRUE",365],["if matches[2] == \"off\" then",224],["return \"Mark read > off\"",187],["return \"Mute text is already off\"",175],["return \"Group mute \"..msg_type..\" is already off\"",174],["0,\t\t\t\t\t\t\t\t-- 0/1 hit other entities off/on (uses collideRadius)",134],["if matches[1] == 'off' then",123],["state = mesecon.state.off,",104],["-- Called when the scene is now off screen",97]]},{"word":"offset","context":[["offset = offset + 1",1940],["offset = offset + 1",1940],["offset = offset + 4",771],["offset = offset + 4",771],["offset = 0,",533],["offset = offset + 2",494],["offset = offset + 2",494],["local offset = 0",449],["return offset",254],["local offset = 1",237]]},{"word":"ok","context":[["if not ok then",9032],["if ok then",6339],["local ok, err =  pcall(function()",2756],["ok = {",1046],["if not ok then return nil, err end",765],["ok = false",734],["return \"ok\"",650],["ok = true",519],["local ok = true",492],["return ok",423]]},{"word":"ok_cb","context":[["delete_msg(msg.id, ok_cb, false)",3385],["function ok_cb(extra, success, result)",2747],["send_msg(receiver, warning, ok_cb, false)",2688],["rename_chat(to_rename, group_name_set, ok_cb, false)",1923],["mark_read(receiver, ok_cb, false)",1798],["send_large_msg(receiver, 'Failed, please try again!', ok_cb, false)",1468],["chat_del_user(chat, user, ok_cb, true)",1335],["chat_set_photo(receiver, settings.set_photo, ok_cb, false)",1126],["return reply_msg(msg.id, text, ok_cb, false)",990],["channel_set_admin(receiver, user, ok_cb, false)",895]]},{"word":"on","context":[["--is making a combined work based on Engine3.",29626],["direction=\"on\",",4447],["-- Checks if plugin is disabled on this chat",2729],["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["if redis:get(\"bot:markread\") == \"on\" then",1160],["'error on weight [%s]', t))",1119],["-- Users on chat",935]]},{"word":"onEffectGain","context":[["-- onEffectGain Action",5647],["function onEffectGain(target,effect)",5640]]},{"word":"onEffectLose","context":[["-- onEffectLose Action",5651],["function onEffectLose(target,effect)",5649]]},{"word":"onEventFinish","context":[["function onEventFinish(player,csid,option)",27584],["-- onEventFinish",25696],["-- onEventFinish Action",2111],["function onEventFinish( player, csid, option)",298],["function onEventFinish(player,csid,menuchoice)",223],["function onEventFinish(player,csid,option,npc)",195],["function onEventFinish(player,csid,option,target)",93],["--print(\"onEventFinish\");",40],["-- onEventFinish params",23],["-- Finish FoV onEventFinish",19]]},{"word":"onEventUpdate","context":[["function onEventUpdate(player,csid,option)",27159],["-- onEventUpdate",26930],["function onEventUpdate(player,csid,menuchoice)",535],["function onEventUpdate( player, csid, option)",298],["-- onEventUpdate Action",68],["--print(\"onEventUpdate\");",40],["function onEventUpdate(player,csid,option,target)",24],["-- onEventUpdate params",23],["-- Update FoV onEventUpdate",19],["-- GoV onEventUpdate",16]]},{"word":"onMobDeath","context":[["-- onMobDeath",21833],["function onMobDeath(mob,killer)",14108],["function onMobDeath(mob, player, isKiller)",3026],["function onMobDeath(mob,killer,ally)",2467],["function onMobDeath(mob, killer)",2395],["-- onMobDeath Action",845],["function onMobDeath(mob, killer, ally)",742],["function onMobDeath(mob, killer,ally)",114],["function onMobDeath(mob)",53],["function onMobDeath( mob, killer )",22]]},{"word":"onMobEngaged","context":[["-- onMobEngaged",12474],["function onMobEngaged(mob,target)",12350],["-- onMobEngaged Action",247],["function onMobEngaged(mob, killer)",231],["function onMobEngaged(mob, target)",107],["function onMobEngaged(mob)",18]]},{"word":"onMobFight","context":[["function onMobFight(mob,target)",10839],["-- onMobFight",9947],["-- onMobFight Action",1294],["function onMobFight(mob, target)",550],["function onMobFight(mob)",38],["function onMobFight( mob, target )",25]]},{"word":"onMobInitialize","context":[["function onMobInitialize(mob)",11037],["-- onMobInitialize",9995],["-- onMobInitialize Action",1093],["function onMobInitialize(mob,target)",126],["-- TODO: Allegedly has a 12 hp/sec regen.  Determine if true, and add to onMobInitialize if so.",24],["function onMobInitialize( mob )",19]]},{"word":"onMobSpawn","context":[["function onMobSpawn(mob)",15118],["-- onMobSpawn",10042],["-- onMobSpawn Action",6046]]},{"word":"onTrade","context":[["function onTrade(player,npc,trade)",24940],["-- onTrade Action",23612],["-- onTrade",1176],["-- Call this onTrade for burning circles",24]]},{"word":"onTrigger","context":[["function onTrigger(player,npc)",25472],["-- onTrigger Action",24378],["-- onTrigger",1170],["function onTrigger(player)",205],["function onTrigger(player, target)",118],["function onTrigger(player, x, y, z, zone)",66],["function onTrigger(player, amount, target)",60],["function onTrigger(player, logId, missionId, target)",41],["function onTrigger(player, logId, questId, target)",40],["function onTrigger(player,amount,target)",28]]},{"word":"one","context":[["-- Go over patterns. If one matches it's enough.",2724],["-- We need one layoutbox per screen.",368],["'!info: Return your info and the chat info if you are in one.',",318],["-- overriding the default one when",264],["-- Kind specifies the category this weapon is in. Players can only carry one of",234],["-- If LimitedStock is true, you can only buy one per round.",213],["o = o or {}   -- create object if user does not provide one",191],["To tags the every one and sends your message at bottom",156],["-- Check whether the character is in one of the zones",129],["-- Opened the wrong one",120]]},{"word":"only","context":[["return \"For moderators only!\"",10263],["return \"For admins only!\"",3990],["-- If plugin is for privileged users only",2729],["-- superuser and admins only (because sudo are always has privilege)",2534],["Promote an admin by id OR username *Sudo only",1360],["Demote an admin by id OR username *Sudo only",1227],["return \"For mods only !\"",773],["return \"For admins only !\"",763],["if not is_sudo(msg) then-- Sudo only",478],["return \"For owner only!\"",449]]},{"word":"onlyVisibleInTools","context":[["onlyVisibleInTools = 0,",26242],["onlyVisibleInTools = 1,",144]]},{"word":"open","context":[["local f = io.open('./data/config.lua', \"r\")",2711],["local f = io.open(filename)",2495],["local f = io.open(filename, 'w')",2483],["-- Succeded to open the coffer",469],["local file = io.open(\"./groups/lists/\"..chat_id..\"stats.txt\", \"w\")",354],["local file = io.open(\"./groups/lists/\"..result.id..\"memberlist.txt\", \"w\")",278],["local file = io.open(\"./groups/lists/supergroups/\"..cb_extra.receiver..\".txt\", \"w\")",274],["local file = io.open(\"./groups/lists/supergroups/kicked/\"..cb_extra.receiver..\".txt\", \"w\")",274],["{ \"open terminal\", terminal }",225],["local file = io.open(\"contact_list.txt\", \"w\")",221]]},{"word":"opt","context":[["opt = cmd:parse(arg or {})",205],["torch.manualSeed(opt.seed)",191],["if opt.visualize then",176],["torch.setnumthreads(opt.threads)",165],["local opt = {}",149],["if opt.gpuid >= 0 then",143],["local opt = cmd:parse(arg)",142],["if opt.cuda then",140],["opt = cmd:parse(arg)",138],["if not opt.silent then",137]]},{"word":"option","context":[["--printf(\"RESULT: %u\",option);",31311],["function onEventFinish(player,csid,option)",27584],["function onEventUpdate(player,csid,option)",27159],["-- printf(\"RESULT: %u\",option);",16400],["if (option == 1) then",1556],["--printf(\"OPTION: %u\",option);",882],["-- printf(\"OPTION: %u\",option);",746],["--printf(\"onFinish RESULT: %u\",option);",611],["--printf(\"RESULT2: %u\",option);",554],["--printf(\"onUpdate RESULT: %u\",option);",551]]},{"word":"optional","context":[["optional = false",1650],["[\"optional\"]=false,",920],["optional = true",402],["-- Call to remove with optional callback",268],["{type = \"Object\", name = \"object\", optional = false, },",210],["o.optional = true",180],["[\"optional\"]=true,",162],["{type = \"boolean\", name = \"var\", optional = false, },",157],["optional = {",140],["o.optional = false",125]]},{"word":"options","context":[["options = {",4345],["options = {}",1035],["local options = {",789],["options = options or {}",538],["options = options or {}",538],["local options = {}",405],["return options",310],["local group = options",214],["options.redirect = false",175],["local options",163]]},{"word":"optionsBitmask","context":[["optionsBitmask = 128,",5400],["optionsBitmask = AIENABLED,",2602],["optionsBitmask = AIENABLED + CONVERSABLE,",486],["optionsBitmask = 136,",436],["optionsBitmask = 264,",326],["optionsBitmask = 0,",211],["optionsBitmask = INVULNERABLE + CONVERSABLE,",197],["optionsBitmask = 386,",60],["optionsBitmask = 264",58],["optionsBitmask = 392,",18]]},{"word":"or","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["local action = msg.action or {type=\"\"}",2723],["if (target:hasStatusEffect(EFFECT_FOOD) == true or target:hasStatusEffect(EFFECT_FIELD_SUPPORT_FOOD) == true) then",2409],["par/or do",1921],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1897],["if strict == \"yes\" or to_chat then",1528],["user_info_msgs = tonumber(redis:get(um_hash) or 0)",1431],["if banned or is_gbanned(user_id) then -- Check it with redis",973],["o = o or {}",954],["return group id or user id",895]]},{"word":"order","context":[["order = 1,",1500],["order = 2,",1212],["order = 3,",945],["order = 4,",689],["order = 5,",549],["-- set the object's draw order",394],["order = 10,",382],["-- Table of layouts to cover with awful.layout.inc, order matters.",326],["order = 6,",324],["order = 20,",275]]},{"word":"org","context":[["-- darkgod@te4.org",4510],["-- This data should match information on http://wiki.ffxiclopedia.org/wiki/Calculating_Blue_Magic_Damage",467],["-- (C) 2013-15 - ntop.org",278],["-- Semantic Versioning Specification: http://semver.org/",215],["-- (C) 2013-14 - ntop.org",164],["local url = 'http://api.mathjs.org/v1/'",154],["--  * (c) 2010, Adrian C. <anrxc@sysphere.org>",150],["http://www.splay-project.org",146],["-- https://core.telegram.org/method/messages.sendMessage",142],["-- (C) 2013-16 - ntop.org",142]]},{"word":"os","context":[["now = os.time()",2786],["os.exit(1)",2617],["os.rename(result, file)",1695],["math.randomseed(os.time())",1251],["os.exit()",1240],["os.exit(0)",1007],["os.exit(-1)",409],["local now = os.time()",291],["os.remove(file_path)",270],["local os = os",257]]},{"word":"other","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["--provided that you include the source code of that other code when",29626],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839],["-- I suggest you to remap Mod4 to another key using xmodmap or other tools.",305],["description = \"Plugin to manage other plugins. Enable, disable or reload.\",",304],["-- There are other variable sets",244],["-- See README.txt for licensing and other information.",224],["type = \"other\",",221],["and/or other materials provided with the distribution.",191],["0,\t\t\t\t\t\t\t\t-- 0/1 hit other entities off/on (uses collideRadius)",134]]},{"word":"our_id","context":[["if msg.from.id == our_id then",5480],["if member_id ~= our_id then",3389],["our_id = 0",2706],["our_id = id",2700],["if tonumber(matches[2]) == tonumber(our_id) then",1496],["elseif group_member_lock == 'yes' and tonumber(msg.from.id) == tonumber(our_id) then",522],["local hash = 'msgs:*:'..our_id",489],["if ci_user ~= our_id then",387],["--chat_del_user('chat#id'..msg.to.id,'user#id'..our_id,ok_cb,false)",349],["if tonumber(matches[3]) == tonumber(our_id) then return false end",345]]},{"word":"out","context":[["if msg.out then",5376],["msg.out = false",2727],["return out",1842],["local out = {}",985],["-- 3=Disconnected or warped out",567],["out:write(\"\\n\")",558],["local out = \"\"",215],["stdout[#stdout+1] = out",205],["out:close()",157],["-- 3=Disconnected or warped out (if dyna is empty: launch 4 after 3)",156]]},{"word":"output","context":[["local output = module:forward(input)",1512],["return self.output",1505],["return output",980],["local output = module:forward(input):clone()",595],["local output = {}",464],["--Get and output info about supergroup",281],["--Get and output admins and bots in supergroup",281],["--Get and output members of supergroup",281],["--Get and output list of kicked users for supergroup",281],["mytester:assert(math.abs(output:mean() - (1-p)) < 0.05, 'dropout output')",277]]},{"word":"over","context":[["-- Go over enabled plugins patterns.",2731],["-- Go over patterns. If one matches it's enough.",2724],["--- Converts the class to a string suitable to send over the socket",75],["--double any acc over 50 if it's over 50",60],["doPlayerSendTextMessage(cid,MESSAGE_EVENT_ADVANCE,\"You make an enchanted over you weapon.\")",60],["--double any acc over 50 if it's over 50",60],["-- Auto Ignite get the maximum range to avoid over kill --",52],["-- we dont route over areas",42],["if theQuestStatus == 1 then --Time over!",40],["-- white and grey, default= normal. over= pressed",40]]},{"word":"owner","context":[["!owner",1623],["return \"You are not the owner of this group\"",1151],["Will set id as owner",1129],["returns group owner id",908],["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only owner and mods can add bots in group",872],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick mods/owner/admins\")",811],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] used /owner\")",769],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set [\"..matches[2]..\"] as owner\")",763],["return \"Only owner can clean\"",612]]},{"word":"p","context":[["<p>",2002],["return p",1320],["if p then",1080],["local p,d=Duel.GetChainInfo(0,CHAININFO_TARGET_PLAYER,CHAININFO_TARGET_PARAM)",910],["function ITEM.ToolCheck( p )",724],["</p>",546],["deactivate = function(self, t, p)",492],["local p = premake",439],["local p = {}",373],["local p",331]]},{"word":"pack","context":[["pack = 1,",1560],["success = pack[1];",927],["player:messageSpecial(pack[2]);",469],["local pack = openChance(player,npc,trade,TreasureType,TreasureLvL,TreasureMinLvL,questItemNeeded);",441],["local args = table.pack(...)",326],["if(pack[2] ~= nil) then",272],["pack = 0,",269],["{\"science-pack-1\", 1},",213],["if (pack[2] ~= nil) then",197],["{\"science-pack-2\", 1},",190]]},{"word":"package","context":[["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["module(..., package.seeall)",1177],["package.loaded[\"scripts/zones/Southern_San_dOria/TextIDs\"] = nil;",988],["package.loaded[\"scripts/zones/Northern_San_dOria/TextIDs\"] = nil;",880],["package.path = dirs.installdir .. \"/scripts/lua/modules/?.lua;\" .. package.path",718],["package.path = dirs.installdir .. \"/scripts/lua/modules/?.lua;\" .. package.path",718],["package.loaded[\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\"] = nil;",712]]},{"word":"page","context":[["page.leaf = true",587],["page.dependent = true",337],["local page",323],["page.subindex = true",125],["page:close()",119],["if(page) then",118],["\"page\": \"orders\",",101],["page.order  = 50",94],["return page",91],["local page;",87]]},{"word":"pairs","context":[["for k,v in pairs(result.members) do",6347],["for name, plugin in pairs(plugins) do",5467],["for v,user in pairs(config.sudo_users) do",2776],["for name,plugin in pairs(plugins) do",2735],["for k, v in pairs(_config.enabled_plugins) do",2735],["for k, pattern in pairs(plugin.patterns) do",2732],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729],["local pairs = pairs",2310],["local pairs = pairs",2310],["for k,v in pairs(result) do",2010]]},{"word":"paletteColorCustomizationVariables","context":[["paletteColorCustomizationVariables = {},",18219]]},{"word":"param","context":[["-- @param self",42955],["-- @param #float float",2878],["-- @param #bool bool",1467],["-- @param #string str",1464],["-- @param #int int",1413],["func = function(name, param)",822],["-- @param #cc.Node node",650],["-- @param cfg",595],["-- @param #size_table size",573],["-- @param number Optional. The number to compare against.",522]]},{"word":"parameters","context":[["parameters = {",2597],["[\"parameters\"] = {",619],["parameters = parameters .. \"&key=\"..api_key",518],["parameters = parameters .. \"&key=\"..api_key",518],["local res, code = https.request(api..parameters)",323],["\"parameters\" : {",278],["parameters = {},",266],["local module = parameters.module",232],["return lat, lng, api..parameters",220],["local parameters = \"address=\".. (URL.escape(area) or \"\")",215]]},{"word":"params","context":[["local params = {};",2862],["params = {",2294],["params.atkmulti = 1;",1480],["params.canCrit = false;",1426],["params.acc100 = 0.0; params.acc200= 0.0; params.acc300= 0.0;",1409],["params.acc100 = 0.0; params.acc200= 0.0; params.acc300= 0.0;",1409],["params.acc100 = 0.0; params.acc200= 0.0; params.acc300= 0.0;",1409],["params.crit100 = 0.0; params.crit200 = 0.0; params.crit300 = 0.0;",1316],["params.crit100 = 0.0; params.crit200 = 0.0; params.crit300 = 0.0;",1316],["params.crit100 = 0.0; params.crit200 = 0.0; params.crit300 = 0.0;",1316]]},{"word":"parent","context":[["parent.__init(self)",1291],["local parent = self.parent",803],["local parent = self.parent",803],["parent = ma_midframe,",764],["if parent then",580],["-- move to parent if there is a parent",345],["-- move to parent if there is a parent",345],["self.parent = parent",299],["self.parent = parent",299],["if parent ~= base then",294]]},{"word":"part","context":[["--This File is part of Core3.",29626],["--  This file is part of Invertika.                                             --",2706],["-- This file is part of Aquaria.",914],["-- This file is part of libquvi-scripts <http://quvi.sourceforge.net/>.",206],["-- This file is a part of lua-nucleo library",171],["-- This file is part of Emender.",141],["-- This file is part of Final Frontier.",115],["This file is part of Splay.",115],["This file is part of NCLua.",112],["This file is part of QSanguosha-Hegemony.",111]]},{"word":"path","context":[["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["return path",754],["package.path = dirs.installdir .. \"/scripts/lua/modules/?.lua;\" .. package.path",718],["package.path = dirs.installdir .. \"/scripts/lua/modules/?.lua;\" .. package.path",718],["dirname = path.dirname(__file__)",496],["if path then",417],["if not path then",414]]},{"word":"pattern","context":[["local matches = match_pattern(pattern, msg.text)",2732],["for k, pattern in pairs(plugin.patterns) do",2732],["print(\"msg matches: \", pattern)",2706],["if pattern ~= '' then",445],["send_msg(receiver, pattern, ok_cb, false)",445],["local pattern = add_user_cfg.initial_chat_msg",445],["pattern = template_add_user(pattern, to_username, from_username, chat_name, chat_id)",445],["pattern = template_add_user(pattern, to_username, from_username, chat_name, chat_id)",445],["local pattern = string.format(\"([^%s]+)\", sep)",297],["self:gsub(pattern, function(c) fields[#fields+1] = c end)",229]]},{"word":"patterns","context":[["patterns = {",16250],["for k, pattern in pairs(plugin.patterns) do",2732],["-- Go over enabled plugins patterns.",2731],["-- One patterns matches",2730],["-- Go over patterns. If one matches it's enough.",2724],["return {patterns = {",292],["patterns = {},",242],["patterns ={",136],["for _, pattern in ipairs(patterns) do",77],["local patterns = {",73]]},{"word":"pcall","context":[["local ok, err =  pcall(function()",2756],["local pcall = pcall",517],["local pcall = pcall",517],["pcall(function()",267],["local ok, err = pcall(f)",141],["local ok, err = pcall(function()",134],["local pcall         = _G.pcall;",106],["local pcall         = _G.pcall;",106],["pcall (json.use_lpeg)",93],["local ok, new_tab = pcall(require, \"table.new\")",87]]},{"word":"peer_id","context":[["local user_id = result.peer_id",1922],["local user_id = \"user#id\"..result.peer_id",1675],["local channel = 'channel#id'..result.to.peer_id",1083],["local member_id = result.from.peer_id",844],["vpeer_id = tostring(v.peer_id)",841],["local user = result.peer_id",721],["data[tostring(target)]['long_id'] = msg.to.peer_id",680],["user_id = result.from.peer_id",649],["user_id = result.action.user.peer_id",648],["local user_id = result.from.peer_id",612]]},{"word":"people","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- enforcing ANY rules (SJ/number of people/etc), moving",196],["if bannedidone or bannedidtwo or bannedidthree then                    --for banned people",120],["-- NEW for 2014: Slightly more verbose messages because people keep",75],["--[[ Some people like assertEquals( actual, expected ) and some people prefer",42],["--[[ Some people like assertEquals( actual, expected ) and some people prefer",42],["..'I\\'m a simple bot created in order to help people to manage their groups.\\n'",34],["REGIME_WAIT = 1; --Make people wait till 00:00 game time as in retail. If it's 0, there is no wait time.",30],["BUYBACK_ENABLED = false                 -- Should we allow people to buyback when they die?",23],["-- ironshoot - Enable/disable whether people need iron sights to shoot.",22]]},{"word":"photo","context":[["\"%[(photo)%]\",",1373],["Set and locks group photo",1112],["if matches[2] == 'photo' then",1069],["return 'Group photo has been unlocked'",888],["return 'Group photo is not locked'",888],["if matches[3] == 'photo' then",708],["return 'Please send me new group photo now'",598],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked photo \")",520],["--lock/unlock group photo. bot automatically keep group photo when locked",371],["--lock/unlock group photo. bot automatically keep group photo when locked",371]]},{"word":"picture","context":[["type = \"picture\",",6373],["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to deleted picture but failed  \")",485],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to change picture but failed  \")",477],["picture =",121],["picture = {",91],["-- Send a picture of the map, which takes scale into account",87],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to deleted picture but failed \")",34],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] tried to change picture but failed \")",34],["The following picture, taken from MineCraft Wiki, illustrates the color codes:</p>",27]]},{"word":"player","context":[["function onEventFinish(player,csid,option)",27584],["function onEventUpdate(player,csid,option)",27159],["function onTrigger(player,npc)",25472],["function onTrade(player,npc,trade)",24940],["player:tradeComplete();",8894],["function onMobDeath(mob, player, isKiller)",3026],["function onZoneIn(player,prevZone)",2343],["local player = Player(cid)",2314],["function onRegionEnter(player,region)",2235],["\"object/creature/player/human_female.iff\",",1745]]},{"word":"players","context":[["for name, player in pairs(players) do",1152],["local players = zone:getPlayers();",1151],["[\"players\"] = {",536],["-- If AllowDrop is false, players can't manually drop the gun with Q",234],["local players = {}",225],["-- a role is in this table, those players can buy this.",212],["for i = 1, #players do",208],["if players then",155],["local players = getvalidplayers(player, executor)",121],["local players = player.GetAll()",107]]},{"word":"plugin","context":[["for name, plugin in pairs(plugins) do",5467],["msg = plugin.pre_process(msg)",2736],["for name,plugin in pairs(plugins) do",2735],["if plugin.pre_process and msg then",2735],["for k, pattern in pairs(plugin.patterns) do",2732],["-- Apply plugin.pre_process function",2731],["if plugin.run then",2731],["plugin.cron()",2730],["match_plugin(plugin, name, msg)",2729],["if plugin.cron ~= nil then",2729]]},{"word":"plugin_name","context":[["if disabled_plugin == plugin_name and disabled then",2730],["function match_plugin(plugin, plugin_name, msg)",2729],["local function is_plugin_disabled_on_chat(plugin_name, receiver)",2729],["if is_plugin_disabled_on_chat(plugin_name, receiver) then",2725],["if plugin_enabled(plugin_name) then",388],["local function enable_plugin( plugin_name )",388],["table.insert(_config.enabled_plugins, plugin_name)",382],["if plugin_exists(plugin_name) then",380],["local plugin_name = matches[2]",380],["print(plugin_name..' added to _config table')",378]]},{"word":"plugins","context":[["for name, plugin in pairs(plugins) do",5467],["plugins = {}",3290],["-- A simple config with basic plugins and ourselves as privileged user",2852],["plugins[v] = t",2763],["-- load plugins",2735],["for name,plugin in pairs(plugins) do",2735],["-- Go over enabled plugins patterns.",2731],["-- Table exists and chat has disabled plugins",2730],["-- Call and postpone execution for cron plugins",2729],["-- Only plugins with cron function",2729]]},{"word":"ply","context":[["name = \"ply\",",720],["function ITEM.Use( ply )",680],["function ITEM.Create( ply, class, pos )",677],["net.Send(ply)",638],["if ply:EntIndex() == 0 then",423],["ply:Give(self.WeaponClass)",409],["ply:StripWeapon(self.WeaponClass)",409],["if not IsValid(ply) then return end",379],["local ply = self:GetOwner()",356],["local ply = LocalPlayer()",348]]},{"word":"png","context":[["-- file: b00001\\image\\shadow.png",1165],["icon = dirname .. \"menu.png\",",318],["filename = \"__core__/graphics/gui.png\",",302],["pictures = path.list_files(dirname .. \"idle_??.png\"),",269],["tiles = {\"default_wood.png\"},",246],["pictures = path.list_files(dirname .. \"idle.png\"),",179],["\"3d_armor_trans.png\",",175],["local url = \"http://latex.codecogs.com/png.download?\"",173],["\"default_wood.png\",",165],["local image = skin.images[\"button-nohover.png\"]",160]]},{"word":"point","context":[["player:messageSpecial(CONQUEST + 94); -- \"Your home point has been set.\"",568],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["-- @param #point_table point",450],["if not segment[i].area[segment[i].point[j].x] then",154],["segment[i].area[segment[i].point[j].x] = {}",154],["segment[i].point[j].diffHeight = 0.0001",121],["segment[i].point[j].structure = true",121],["point:setPosition(sprite:getPosition())",116],["ENT.Type = \"point\"",111],["totalCost = totalCost + abs(segment[i].point[j].diffHeight)",110]]},{"word":"points","context":[["points = 5,",2763],["player:messageSpecial(CONQUEST); -- \"You've earned conquest points!\"",568],["points = 1,",342],["local points = {}",225],["-- Initialize all starting navigation points",205],["for j = 1, segment[i].points do",154],["points = points + 1",123],["points = points + 1",123],["return points",120],["for i = 1, terra.points do",89]]},{"word":"port","context":[["port = port,",303],["port = port,",303],["self.port = port",121],["self.port = port",121],["o.datatype = \"port\"",104],["local port",104],["if port then",101],["-- @param port table",97],["local port = math.random(10000,40000)",86],["new = function(self, host, port)",81]]},{"word":"portalLayoutFilename","context":[["portalLayoutFilename = \"\",",25668],["portalLayoutFilename = \"appearance/mun_all_military_storage_shed_rebl_s01.pob\",",44],["portalLayoutFilename = \"appearance/poi_all_impl_bunker_s01.pob\",",24],["portalLayoutFilename = \"appearance/mun_all_military_storage_shed_impl_s01.pob\",",24],["portalLayoutFilename = \"appearance/poi_all_impl_bunker_s02.pob\",",22],["portalLayoutFilename = \"appearance/poi_all_impl_bunker_s03.pob\",",22],["portalLayoutFilename = \"appearance/thm_all_cave_s02_damprock.pob\",",18],["portalLayoutFilename = \"appearance/mun_all_military_base_police_station_rebl_s01.pob\",",18],["portalLayoutFilename = \"appearance/mun_all_military_base_police_station_impl_s01.pob\",",12]]},{"word":"pos","context":[["local meta = minetest.get_meta(pos)",2774],["pos = pos + 1",1264],["pos = pos + 1",1264],["on_construct = function(pos)",1064],["pos = \"TOPLEFT\",",901],["action = function(pos, node, active_object_count, active_object_count_wider)",839],["local pos = 1",816],["pos.y = pos.y + 1",797],["pos.y = pos.y + 1",797],["pos                = [[0, 0, 0]],",772]]},{"word":"position","context":[["-- Put windows in a smart way, only if they does not set an initial position.",334],["-- Insert the position of the quest start here (probably the position of an NPC or item)",295],["-- Insert the position of the quest start here (probably the position of an NPC or item)",295],["function onStepIn(cid, item, position, fromPosition)",238],["mywibox[s] = awful.wibox({ position = \"top\", screen = s })",235],["return position",205],["function onStepIn(creature, item, position, fromPosition)",204],["[\"position\"]=",203],["[\"position\"] = {",193],["[\"posoffset\"]    =     0    -- change the position of the character by this value from the caster away",177]]},{"word":"possible","context":[["--this exception also makes it possible to release a modified version",29626],["-- Leaving the BCNM by every mean possible, given by the LeaveCode",567],["\"/wd4244\", -- warning C4244: 'argument' : conversion from 'xxx' to 'xxx', possible loss of data",144],["-- (with the possible exception of 'n')",95],["-- Leaving the Dynamis by every mean possible, given by the LeaveCode",92],["--                 Handle encoding tables with non-positive numeric keys (unlikely, but possible).",48],["-- the space of all possible nested tables (it's infinite), but here is a",45],["-- 'options' is nil, or a table with possible keys:",39],["--   it's not normally possible to tell which original JSON type a",35],["-- Leaving  by every mean possible, given by the LeaveCode",33]]},{"word":"postpone","context":[["-- Call and postpone execution for cron plugins",2729],["postpone (cron_plugins, false, 60*5.0)",2687],["postpone (cron_plugins, false, 120)",2045],["postpone (cron_plugins, false, 5*60.0)",685],["-- Send first and postpone the others as callback",141],["postpone (cron_plugins, true, 60*5.0)",46],["-- area not loaded, postpone action",18],["postpone(post_kick, false, 3)",16]]},{"word":"power","context":[["power = 0,",423],["power = power * 1.5;",380],["power = power * 1.5;",380],["power = power * 2;",369],["power = power * 2;",369],["[\"power\"] = {",349],["local power = 0;",278],["local power = effect:getPower();",265],["parameters = { power=10 },",202],["power = power + iBoost;",142]]},{"word":"pre_process","context":[["msg = plugin.pre_process(msg)",2736],["if plugin.pre_process and msg then",2735],["-- Apply plugin.pre_process function",2731],["pre_process = pre_process",2297],["pre_process = pre_process",2297],["local function pre_process(msg)",1930],["pre_process = pre_process,",97],["pre_process = pre_process,",97],["--End pre_process function",76],["--Begin pre_process function",68]]},{"word":"precision","context":[["mytester:assertlt(err, precision, string.format(",2191],["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["mytester:assertlt(err,precision, 'error on weight ')",719],["mytester:assertlt(err , precision, 'error on weight ')",513],["mytester:assertlt(err , precision, 'error on bias ')",513],["mytester:assertlt(err,precision, 'error on weight [direct update] ')",474],["mytester:assertlt(err , precision, 'error on bias [direct update] ')",352],["mytester:assertlt(err , precision, 'error on weight [direct update] ')",352],["mytester:assertlt(maxerrnc, precision, 'error in torch.functionname - non-contiguous')",345]]},{"word":"premake","context":[["local p = premake",439],["local project = premake.project",307],["-- Meta-build system using premake created and maintained by",295],["local vc2010 = premake.vstudio.vc2010",265],["premake.bake.buildconfigs()",169],["premake.gcc.ar  = \"ar\"",168],["local action = premake.action.current()",166],["local make = premake.make",152],["local vc200x = premake.vstudio.vc200x",152],["local cfg = premake.getconfig(prj, cfginfo.src_buildcfg, cfginfo.src_platform)",142]]},{"word":"prepare","context":[["prepare()",7439],["local function prepare()",620],["i = prepare()",283],["local function prepare(platform)",121],["local r = prepare(\"all\", \"fullpath\")",98],["prepare { \"ldFlags\", \"linkCmd\" }",54],["function prepare()",52],["prepare { \"ldFlags\", \"libs\", \"ldDeps\" }",46],["prepare(\"C#\")",46],["local stmt = self.db:prepare(sql)",31]]},{"word":"print","context":[["print ('saved config into ./data/config.lua')",3389],["print('\\27[31m'..err..'\\27[39m')",2756],["print(warning)",2728],["print('\\27[36mNot valid: readed\\27[39m')",2721],["print('\\27[36mNot valid: Encrypted chat\\27[39m')",2721],["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["print('\\27[36mNot valid: From id not provided\\27[39m')",2721],["print('\\27[36mNot valid: old msg\\27[39m')",2718],["print('\\27[31mError loading plugin '..v..'\\27[39m')",2716],["print (\"Created new config file: data/config.lua\")",2708]]},{"word":"print_name","context":[["local chatname = result.print_name",2341],["set_name = string.gsub(msg.to.print_name, '_', ' '),",2070],["local print_name = user_print_name(msg.from):gsub(\"‮\", \"\")",1896],["local name = print_name:gsub(\"_\", \"\")",1183],["local message = '\\nList of moderators for ' .. string.gsub(msg.to.print_name, '_', ' ') .. ':\\n'",1080],["local name = string.gsub(result.print_name, \"_\", \" \")",1020],["local name_log = print_name:gsub(\"_\", \" \")",926],["if group_name_set ~= tostring(msg.to.print_name) then",683],["local group_creator = msg.from.print_name",621],["local about = string.gsub(msg.to.print_name, \"_\", \" \")..':\\n\\n'..about",618]]},{"word":"printf","context":[["--printf(\"CSID: %u\",csid);",32316],["--printf(\"RESULT: %u\",option);",31311],["-- printf(\"CSID: %u\",csid);",17239],["-- printf(\"RESULT: %u\",option);",16400],["--printf(\"OPTION: %u\",option);",882],["-- printf(\"OPTION: %u\",option);",746],["--printf(\"onFinish CSID: %u\",csid);",615],["--printf(\"onFinish RESULT: %u\",option);",611],["--printf(\"RESULT2: %u\",option);",554],["--printf(\"CSID2: %u\",csid);",554]]},{"word":"prj","context":[["for cfg in project.eachconfig(prj) do",712],["local sln, prj",361],["-- @param prj",299],["sln, prj = test.createsolution()",242],["local wks, prj",192],["local cfg = test.getconfig(prj, \"Debug\")",152],["local sln, prj, cfg",148],["local cfg = premake.getconfig(prj, cfginfo.src_buildcfg, cfginfo.src_platform)",142],["for _, cfginfo in ipairs(prj.solution.vstudio_configs) do",138],["prj = premake.solution.getproject(sln, 1)",134]]},{"word":"project","context":[["for cfg in project.eachconfig(prj) do",712],["project \"MyProject\"",333],["local project = premake.project",307],["local project = premake.project",307],["scope = \"project\",",301],["local project = p.project",191],["local project = p.project",191],["project \"MyProject2\"",166],["--    The project configuration.",165],["http://www.splay-project.org",146]]},{"word":"promote","context":[["!promote [username]",1298],["*Only owner can use res,setowner,promote,demote and log commands",875],["elseif get_cmd == \"promote\" then",667],["local function promote(receiver, member_username, member_id)",575],["return promote(receiver, member_username, member_id)",563],["if mod_cmd == 'promote' then",515],["if matches[1] == 'promote' and matches[2] then",475],["» Only owner can use res,setowner,promote,demote and log commands",470],["get_cmd = 'promote',",448],["return \"Only owner can promote\"",440]]},{"word":"properties","context":[["properties = {",7409],["properties = {}",5512],["properties = {},",2453],["properties = { floating = true } },",919],["properties = { border_width = beautiful.border_width,",359],["--   properties = { tag = tags[1][2] } },",239],["--<private-static-properties>",199],["--</private-static-properties>",194],["--<public-static-properties>",167],["--</public-static-properties>",163]]},{"word":"provided","context":[["--provided that you include the source code of that other code when",29626],["print('\\27[36mNot valid: From id not provided\\27[39m')",2721],["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["and/or other materials provided with the distribution.",191],["purpose with or without fee is hereby granted, provided that the above",185],["-- If callback not provided",137],["--  Saves file to /tmp/. If file_name isn't provided,",124],["documentation and/or other materials provided with the distribution.",68],["--      documentation and/or other materials provided with the distribution.",56],["-- provided configuration and the operating environment.",56]]},{"word":"public","context":[["data[tostring(target)]['settings']['public'] = 'no'",1072],["local group_public_lock = data[tostring(target)]['settings']['public']",724],["data[tostring(target)]['settings']['public'] = 'yes'",643],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set group to: public\")",617],["local group_member_lock = data[tostring(target)]['settings']['public']",600],["return 'Group is not public'",528],["return 'Group is already public'",527],["if not data[tostring(target)]['settings']['public'] then",457],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set group to: not public\")",344],["--Set supergroup to public or not public function",280]]},{"word":"pvpBitmask","context":[["pvpBitmask = ATTACKABLE,",4651],["pvpBitmask = AGGRESSIVE + ATTACKABLE + ENEMY,",2925],["pvpBitmask = NONE,",2502],["pvpBitmask = AGGRESSIVE + ATTACKABLE,",154],["pvpBitmask = ATTACKABLE + AGGRESSIVE + ENEMY,",107],["pvpBitmask = ATTACKABLE + OVERT,",22],["pvpBitmask = ATTACKABLE + ENEMY + AGGRESSIVE,",12]]},{"word":"query","context":[["\"location\" : \"query\",",849],["mysql_free_result(query)",234],["local query",208],["if query then",183],["if (query) then",176],["MySQLite.query([[",132],["--    The configuration to query.",118],["local function googlethat(query)",115],["local parameters = \"q=\".. (URL.escape(query) or \"\")",108],["local url = \"https://api.instagram.com/v1/users/search?q=\"..URL.escape(query)..\"&access_token=\"..access_token",106]]},{"word":"quests","context":[["require(\"scripts/globals/quests\");",7607],["package.loaded[\"scripts/globals/quests\"] = nil;",303],["ins(quests, {",161],["monster.base.quests.iniQuests();",86],["require(\"monster.base.quests\")",86],["if murderer then --Checking for quests",85],["monster.base.quests.checkQuest(murderer,Monster);",77],["local monsterQuests = require(\"monster.base.quests\")",47],["MAX_LEVEL = 75; -- Level max of the server, lowers the attainable cap by disabling Limit Break quests.",27],["local quests = sys4_quests.initQuests(mod, S)",24]]},{"word":"r","context":[["return r",3316],["local f = io.open('./data/config.lua', \"r\")",2711],["local r = {}",1003],["if r then",927],["color = {color.btn.r, color.btn.g, color.btn.b, transparency.btn}",678],["direction=\"r\",",660],["if not r then",657],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["local r",560],["r = redis:eval(redis_scan, 1, hash)",496]]},{"word":"radius","context":[["radius = 0,",344],["local radius = self:getTalentRadius(t)",226],["radius = 100,",171],["-- mouse_finder_[color|timeout|animate_timeout|radius|factor]",168],["return {type=\"ball\", range=self:getTalentRange(t), radius=self:getTalentRadius(t)}",110],["radius=25,",106],["-- @param #float radius",94],["local xc,yc,ring_r,ring_w,sa,ea=pt['x'],pt['y'],pt['radius'],pt['thickness'],pt['start_angle'],pt['end_angle']",86],["self.ps:emit(radius*266)",85],["local sradius = (radius + 0.5) * (engine.Map.tile_w + engine.Map.tile_h) / 2",82]]},{"word":"rand","context":[["local x = torch.FloatTensor():rand(sz1, sz2)",387],["rand = math.random(1,1000);",302],["if (rand == 1) then",283],["local input = torch.rand(10)",253],["rand = math.random(1,2);",218],["local x = torch.rand(msize,msize)",216],["local input = torch.rand(nbfeatures,inputSize,inputSize/2)",200],["if rand == 5 then",185],["local input1 = torch.rand(ink, inj, ini)",164],["local target = input:clone():add(torch.rand(10))",160]]},{"word":"randn","context":[["local input = torch.randn(size)",362],["local m1 = torch.randn(100,100)",352],["local input = torch.randn(from,inj,ini)",335],["local input = torch.randn(bs,from,inj,ini)",263],["local gradOutput = torch.randn(bSize, M, P)",168],["local gradOutput = torch.randn(size)",157],["local gradOutput = torch.randn(to,outj,outi)",147],["local input = torch.randn(3,4,5)",128],["local gradOutput = torch.randn(bs,to,outj,outi)",128],["local input = torch.randn(ini)",113]]},{"word":"random","context":[["local ini = math.random(3,5)",1471],["local ink = math.random(3,5)",1293],["local inj = math.random(3,5)",1206],["local ki = math.random(1,5)",516],["local from = math.random(1,64)",516],["local kj = math.random(1,5)",472],["local si = math.random(1,4)",458],["local from = math.random(1,5)",439],["local si = math.random(1,3)",400],["local ki = math.random(2,4)",391]]},{"word":"range","context":[["type = \"range\",",1292],["range = 7,",785],["range = 10,",649],["return \"Wrong number,range is [5-20]\"",554],["range = -1",515],["range = 0,",464],["range = Geom:new{",293],["type = 'range',",271],["range = 64,",254],["range = 1,",235]]},{"word":"rangedIntCustomizationVariables","context":[["rangedIntCustomizationVariables = {},",18239]]},{"word":"rank","context":[["local hash = 'rank:'..extra.chat2..':variables'",648],["rank = 3,",555],["rank = 2,",427],["local hash = 'rank:'..msg.to.id..':variables'",345],["hash = 'rank:'..msg.to.id..':variables'",337],["local hash = 'rank:'..result.to.id..':variables'",324],["'(Reply)!setrank <rank>: change members rank.',",320],["'(Reply)!setrank <rank>: change members rank.',",320],["'!setrank <userid> <rank>: change members rank.',",317],["'!setrank <userid> <rank>: change members rank.',",317]]},{"word":"re","context":[["return \"You're not admin\"",1568],["if re:GetHandler():IsRelateToEffect(re) then",345],["if re:GetHandler():IsRelateToEffect(re) then",345],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["if re:GetHandler():IsDestructable() and re:GetHandler():IsRelateToEffect(re) then",307],["if re:GetHandler():IsDestructable() and re:GetHandler():IsRelateToEffect(re) then",307],["if re:GetHandler():IsDestructable() and re:GetHandler():IsRelateToEffect(re) then",307],["© 2013 CloudSixteen.com do not share, re-distribute or modify",114],["-- since we're here, we're working",110],["-- since we're here, we're working",110]]},{"word":"read","context":[["-- wipe the data to allow the bot to read service messages",2726],["local s = f:read('*all')",2480],["print(tostring(io.popen(\"lua plugins/\"..v..\".lua\"):read('*all')))",1238],["VERSION = assert(f:read('*a'))",620],["local result = cmd:read('*all')",440],["usertype = file:read(\"*all\")",196],["io.read()",193],["return \"Mark read > on\"",187],["return \"Mark read > off\"",187],["pad = Controls.read()",149]]},{"word":"real","context":[["tm.gpu = a:time().real",1872],["tm.cpu = a:time().real",1868],["{name=real, default=1, invisible=true},",1054],["--         Stratagus - A free fantasy real time strategy game engine",714],["{name=real, default=0, invisible=true},",317],["{name=real},",311],["{name=real}})",230],["{name=real, default=1},",214],["{name=real}},",150],["{name=real, creturned=true}})",143]]},{"word":"realm","context":[["Get a list of members in group/realm",1360],["Get a file of members in group/realm",1360],["Create a realm",1357],["Set realm name",1354],["Kick all members and delete realm",1223],["!kill realm [RealmID]",1135],["Grt a logfile of current group or realm",809],["Get a logfile of current group or realm",554],["if matches[1] == 'kill' and matches[2] == 'realm' then",491],["if matches[1] == 'chat_created' and msg.from.id == 0 and group_type == \"realm\" then",384]]},{"word":"realms","context":[["local realms = 'realms'",1481],["local realms = 'realms'",1481],["if not data[tostring(realms)] then",1402],["!list realms",1395],["Get a list of all realms",1363],["data[tostring(realms)][tostring(msg.to.id)] = msg.to.id",786],["data[tostring(realms)] = {}",782],["data[tostring(realms)] = nil",393],["data[tostring(realms)][tostring(msg.to.id)] = nil",393],["for k,v in pairs(data[tostring(realms)]) do",222]]},{"word":"receiver","context":[["local receiver = get_receiver(msg)",23972],["local receiver = cb_extra.receiver",7373],["local receiver = cb_extra.receiver",7373],["receiver = get_receiver(msg)",3021],["send_large_msg(receiver, text)",2829],["if disabled_chats and disabled_chats[receiver] then",2731],["for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do",2729],["local function is_plugin_disabled_on_chat(plugin_name, receiver)",2729],["send_large_msg(receiver, result)",2728],["if is_plugin_disabled_on_chat(plugin_name, receiver) then",2725]]},{"word":"recipe","context":[["recipe = {",12436],["type = \"recipe\",",4005],["type = \"unlock-recipe\",",1250],["type = \"unlock-recipe\"",371],["type = \"recipe\"",157],["type = \"recipe-category\",",112],["recipe ={",68],["type = 'recipe',",62],["recipe = def.recipe",56],["recipe = def.recipe",56]]},{"word":"rectangle","context":[["shape = \"rectangle\",",5922],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["shape = \"rectangle\"",76],["love.graphics.rectangle(",70],["love.graphics.rectangle(\"fill\", object:GetX(), object:GetY(), object:GetWidth(), object:GetHeight())",57],["love.graphics.rectangle('fill',",55],["love.graphics.rectangle(\"fill\", object:GetX() + 1, object:GetY() + 1, object:GetWidth() - 2, object:GetHeight() - 2)",54],["local stencilfunc = function() love.graphics.rectangle(\"fill\", x, y, width, height) end",50],["love.graphics.rectangle('line', self.x, self.y, self.w, self.h)",43],["love.graphics.rectangle(\"fill\", x + 1, y + 1, width - 2, height - 2)",42]]},{"word":"redis","context":[["local user = redis:hgetall(uhash)",2629],["redis:del(hash)",2159],["local users = redis:smembers(hash)",1847],["redis:set(hash, true)",1540],["user_info_msgs = tonumber(redis:get(um_hash) or 0)",1431],["if redis:get(\"bot:markread\") == \"on\" then",1160],["if redis:get(\"bot:markread\") then",1160],["local picprotectionredis = redis:get(picturehash)",1062],["redis:incr(picturehash)",1062],["redis:set(picturehash, 0)",1062]]},{"word":"region","context":[["function onRegionEnter(player,region)",2235],["player:delKeyItem(getSupplyKey(region));",1259],["player:addCP(supplyReward[region + 1])",568],["player:messageSpecial(KEYITEM_OBTAINED + 1, getSupplyKey(region));",568],["function onRegionLeave(player,region)",451],["local supply_quests = 2^(region+5);",449],["if (hasOutpost(player, region+5) == 0) then",334],["if (player:hasKeyItem(getSupplyKey(region)) and player:getNation() == guardnation) then",334],["switch (region:GetRegionID()): caseof",328],["function onRegionEnter( player, region)",283]]},{"word":"register_craft","context":[["minetest.register_craft({",14076],["minetest.register_craft( {",1848],["minetest.register_craft(",219],["multicraft.register_craft({",190],["core.register_craft({",156],["crafter.register_craft({",66],["--[[minetest.register_craft( {",53],["--[[minetest.register_craft({",34],["-- minetest.register_craft({",17],["-- register_craft",11]]},{"word":"release","context":[["--this exception also makes it possible to release a modified version",29626],["-- @release @AWESOME_VERSION@",491],["Status:     \t\tStable release",339],["configuration \"release\"",123],["configurations { \"debug\", \"release\" }",89],["Status:\t\t\t\tStable release",84],["_info.arch, _info.version, _info.release))",76],["-- @release",71],["--   20100731.1    initial public release",62],["targetdir \"bin/release\"",55]]},{"word":"remove","context":[["self.object:remove()",1135],["table.remove(_config.enabled_plugins, k)",406],["--remove",312],["--Function to remove supergroup",281],["os.remove(file_path)",270],["-- Call to remove with optional callback",268],["local tremove = table.remove",166],["to remove an admin from global admins",157],["to remove the group and be unknown",157],["assert(os.remove(file))",151]]},{"word":"repeat","context":[["repeat",9641],["'for', 'function', 'goto', 'if', 'in', 'local', 'nil', 'not', 'or', 'repeat',",49],["-- repeat",47],["repeat\\",34],["[\"repeat\"] = true,",33],["repeat -- /./ -> /",29],["'function', 'if', 'in', 'local', 'nil', 'not', 'or', 'repeat',",29],["repeat -- A/../ -> (empty)",29],["wesnoth.play_sound(name, cfg[\"repeat\"])",24],["[\"not\"] = true, [\"or\"] = true, [\"repeat\"] = true,",24]]},{"word":"reply","context":[["You can also do it by reply",3331],["local function action_by_reply(extra, success, result)-- (reply) /info  function",353],["'(Reply)!info: Return info of replied user if used by reply.',",321],["-- Start by reply actions",281],["-- End by reply actions",277],["--savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] kicked: [\"..user_id..\"] by reply\")",273],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] demoted: [\"..user_id..\"] from admin by reply\")",271],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set: [\"..user_id..\"] as admin by reply\")",271],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set: [\"..result.from.peer_id..\"] as owner by reply\")",270],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] deleted a message by reply\")",266]]},{"word":"reply_id","context":[["if type(msg.reply_id) ~= \"nil\" then",2748],["if msg.reply_id then",1911],["if type(msg.reply_id)~=\"nil\" then",1209],["if type(msg.reply_id)~=\"nil\" and is_momod(msg) then",1145],["get_message(msg.reply_id, get_message_callback, cbreply_extra)",1131],["local Reply = msg.reply_id",756],["local reply_id = msg['id']",506],["msgr = get_message(msg.reply_id, demote_by_reply, false)",402],["msgr = get_message(msg.reply_id, promote_by_reply, false)",401],["msgr = get_message(msg.reply_id, setowner_by_reply, false)",378]]},{"word":"request","context":[["local res, code = https.request(api..parameters)",323],["request {",282],["local jstr, res = https.request(url)",224],["-- Do the request",220],["local b,c = http.request(url)",198],["local url , res = http.request('http://api.gpmod.ir/time/')",176],["path = \"/request\",",156],["response = {https.request(options)}",137],["response = {http.request(options)}",135],["local b, c, h = http.request(url)",135]]},{"word":"requested","context":[["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group link [\"..group_link..\"]\")",952],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] requested group stats \")",828],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group rules\")",787],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group modlist\")",784],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group settings \")",519],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group description\")",514],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup muteslist\")",330],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup mutelist\")",330],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested SuperGroup settings \")",274],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested Kicked users list\")",273]]},{"word":"require","context":[["require(\"scripts/globals/status\");",21426],["require(\"scripts/globals/settings\");",21058],["require(\"scripts/globals/quests\");",7607],["require(\"scripts/globals/keyitems\");",7194],["require(\"scripts/globals/magic\");",5136],["require(\"scripts/globals/titles\");",4241],["require(\"scripts/globals/missions\");",3804],["require(\"scripts/globals/monstertpmoves\");",3293],["require(\"scripts/globals/shop\");",2776],["require \"scripts/lua/npclib\"",2715]]},{"word":"res","context":[["return res",4709],["local res = {}",2222],["if not res then",1635],["!res [username]",1400],["if res then",942],["\"!res @username\"",935],["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only admins and sudo can use res, setowner, commands",768],["if res ~= 200 then",698],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] Used /res \"..username)",666]]},{"word":"response","context":[["local body = cjson.decode(response)",1198],["return response",600],["proxy.response = {",467],["local response = {}",438],["local body = json.decode(response)",309],["if response then",301],["response = false",287],["response = toboolean",265],["local response = matches[3]",254],["local parsed_response = cjson.decode(response)",250]]},{"word":"result","context":[["return result",10776],["for k,v in pairs(result.members) do",6347],["return result;",5719],["result = 246;",4006],["if result then",3989],["local result = 0;",3888],["local result = {}",3874],["if result.username then",3524],["function ok_cb(extra, success, result)",2747],["send_large_msg(receiver, result)",2728]]},{"word":"results","context":[["local results = {}",1076],["return results",832],["results=",360],["types= data.results[1].types",213],["lng  = data.results[1].geometry.location.lng",212],["lat  = data.results[1].geometry.location.lat",212],["acc  = data.results[1].geometry.location_type",212],["table.insert(results, {",131],["for key,val in ipairs(results) do",123],["for key,result in ipairs(data.responseData.results) do",119]]},{"word":"ret","context":[["return ret",7648],["-- @return bool#bool ret (return value: bool)",3689],["-- @return float#float ret (return value: float)",2682],["local ret = {}",2162],["-- @return int#int ret (return value: int)",1316],["-- @return string#string ret (return value: string)",1180],["escape ret;",819],["-- @return vec2_table#vec2_table ret (return value: vec2_table)",781],["if ret then",759],["if not ret then",676]]},{"word":"return","context":[["return",154581],["return true",103045],["return false",99012],["return nil",38136],["return {",37830],["return self",18285],["return 0;",16782],["return 0",13056],["return;",12872],["return result",10776]]},{"word":"returns","context":[["returns = \"()\",",5109],["returns = {",2330],["returns group owner id",908],["returns group link",905],["returns user id",898],["-- @returns",766],["returns = \"nil\"",688],["returns = '()',",549],["returns = \"(void)\",",199],["-- The OpenBoobs API sometimes returns an empty array",195]]},{"word":"right","context":[["-- Widgets that are aligned to the right",506],["right = true,",304],["right = 0,",242],["-- right",147],["option1:addEventListener(\"tap\", right)",128],["-- N.B.: left, right, top, bottom",128],["-- Hint: left, right, top, bottom",123],["--right",121],["right=0,",110],["elseif key == \"right\" then",91]]},{"word":"row","context":[["-- the images width and height, and also the frames number (row x col)",390],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["local row = {}",241],["row = row + 1",199],["row = row + 1",199],["T.row {",172],["return row",161],["if row then",139],["f:row {",139],["vf:row {",101]]},{"word":"rules","context":[["local data_cat = 'rules'",3365],["!rules",1526],["Set a group's rules",1365],["return rules",1268],["!clean [modlist|rules|about]",1221],["data[tostring(target)][data_cat] = rules",1186],["if matches[2] == 'rules' then",1146],["Group rules",1130],["Will clear [modlist|rules|about] and set it to nil",1123],["local rules = data[tostring(msg.to.id)][data_cat]",1092]]},{"word":"run","context":[["run = run",11961],["run = run",11961],["local function run(msg, matches)",10338],["run = run,",4622],["run = run,",4622],["function run(msg, matches)",4315],["if plugin.run then",2731],["local result = plugin.run(msg, matches)",2728],["run = 1,",1462],["local function run(msg)",938]]},{"word":"s","context":[["return s",4179],["-- Go over patterns. If one matches it's enough.",2724],["-- In dieser Datei stehen die entsprechenden externen NPC's, Trigger und        --",2686],["f:write(s)",2523],["local s = f:read('*all')",2480],["local s = JSON.encode(data)",2461],["local data = JSON.decode(s)",2460],["function(s)",1404],["Unock a group's setting",1367],["Lock a group's setting",1367]]},{"word":"save","context":[["!save [value] <text>",1088],["-- todo: save data",680],["local data = super.save(self)",678],["!save [value] [text]",224],["cr:save()",194],["rec:save(true)",188],["self:save()",164],["save()",147],["cmd:option('-save', 'results', 'subdirectory to save/log experiments in')",114],["cmd:option('-save', 'results', 'subdirectory to save/log experiments in')",114]]},{"word":"save_data","context":[["save_data(_config.moderation.data, data)",60497],["function save_data(filename, data)",2432],["save_data(data, chat_db)",150],["save_data(_config.moderation.data, data);",126],["save_data(_config.moderation.data, Xdata);",33],["save_data(_config.moderation.data, XXXXX);",33],["testDataSaved = save_data(_config.moderation.data, data)",32],["save_data(data, 'data/'..gid..'/'..gid..'.lua')",27],["save_data(data, 'data/' .. gid .. '/' .. gid .. '.lua')",18],["save_data(_config.ruleta.db, ruletadata)",18]]},{"word":"saved","context":[["print ('saved config into ./data/config.lua')",3389],["print('saved config into ./data/config.lua')",2031],["send_large_msg(receiver, 'Photo saved!', ok_cb, false)",806],["[\"Show\"] = \"saved\",",711],["-- data saved to moderation.json",341],["print ('saved gbans into ./data/gbans.lua')",134],["print ('saved gban into ./data/gbans.lua')",134],["savelog(msg.to.id, name1..\" [\"..msg.from.id..\"] saved [\"..name..\"] as > \"..value )",112],["-- data saved to data/moderation.json",70],["* saved for handling by xcb_request_check().",63]]},{"word":"savelog","context":[["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: mute \"..msg_type)",1911],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute \"..msg_type)",1639],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group link [\"..group_link..\"]\")",952],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] requested group stats \")",828],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked flood \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked member \")",789],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked member \")",788],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group rules\")",787],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set flood to [\"..matches[2]..\"]\")",785],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] requested group modlist\")",784]]},{"word":"say","context":[["npcHandler:say({",1051],["npcHandler:say('There is not enough gold on your account.', cid)",332],["npcHandler:say('Well, can I help you with something else?', cid)",330],["module.npcHandler:say(msg, cid)",296],["npcHandler:say('Here you are.', cid)",283],["say(\"\")",275],["npcHandler:say('You do not have enough gold.', cid)",264],["npcHandler:say('Sorry, you do not have enough platinum coins.', cid)",262],["npcHandler:say('Would you really like to deposit ' .. count[cid] .. ' gold?', cid)",198],["npcHandler:say('Are you sure you wish to withdraw ' .. count[cid] .. ' gold from your bank account?', cid)",132]]},{"word":"scale","context":[["scale = 1,",19944],["scale = 0,",6745],["[\"scale\"] = 1,",532],["priority = \"extra-high-no-scale\",",466],["scale = scale or 1",296],["scale = scale or 1",296],["scale = 1.1,",278],["scale = 1.05,",261],["local scale = types[1]",217],["scale = 1.15,",213]]},{"word":"scaleThresholdBeforeExtentTest","context":[["scaleThresholdBeforeExtentTest = 0.5,",26315],["scaleThresholdBeforeExtentTest = 0,",67]]},{"word":"scene","context":[["return scene",1651],["local scene = cc.Scene:create()",771],["scene:addChild(layer)",616],["scene:addChild(CreateBackMenuItem())",504],["-- @param #cc.Scene scene",328],["local scene = storyboard.newScene()",317],["local scene = CCScene:create()",295],["function scene:createScene( event )",288],["scene:addEventListener( \"createScene\", scene )",272],["scene:addEventListener( \"createScene\", scene )",272]]},{"word":"school","context":[["[\"school\"] = 1,",8412],["[\"school\"] = 4,",4860],["[\"school\"] = 32,",4324],["[\"school\"] = 8,",2178],["[\"school\"] = 16,",873],["[\"school\"] = 64,",861],["[\"school\"] = 2,",558],["[\"school\"] = 40,",104],["[\"school\"] = 68,",104],["[\"school\"] = 36,",49]]},{"word":"sconv","context":[["sconv:zeroGradParameters()",1056],["local groundtruth = sconv:forward(input)",864],["local groundgrad = sconv:backward(input, gradOutput)",850],["sconv:forward(input)",817],["groundtruth = sconv:forward(input)",762],["groundgrad = sconv:backward(input, gradOutput)",753],["local gconv = sconv:clone():cuda()",458],["gconv.bias = sconv.bias:cuda()",366],["gconv.weight = sconv.weight:cuda()",366],["local groundweight = sconv.gradWeight",305]]},{"word":"screen","context":[["for s = 1, screen.count() do",1232],["local screen = mouse.screen",765],["local screen = mouse.screen",765],["{ tex = 2, src = { 865, 198, 865, 275, 945, 275, 945, 198 }, screen = { -640, 624, -640, -608, 640, -608, 640, 624 } },",600],["{ tex = 1, src = { 87, 78, 87, 155, 167, 155, 167, 78 }, screen = { -640, 624, -640, -608, 640, -608, 640, 624 } },",530],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["local tag = awful.tag.gettags(screen)[i]",516],["-- Create a promptbox for each screen",377],["if awful.layout.get(c.screen) ~= awful.layout.suit.magnifier",375],["mypromptbox[mouse.screen].widget,",374]]},{"word":"script","context":[["behaviorScript = \"\", -- Link to the behavior script for this object",1762],["-- \"Flyers for Regine\" conditional script",1002],["</script>",671],["function script.Create()",575],["function script.Killed(recentDamage, maxHealth)",554],["<script>",423],["local super = require \"script.card.init\"",339],["function script.AimWeapon(num, heading, pitch)",327],["function script.StopMoving()",315],["function script.StartMoving()",293]]},{"word":"scripts","context":[["require(\"scripts/globals/status\");",21426],["require(\"scripts/globals/settings\");",21058],["require(\"scripts/globals/quests\");",7607],["require(\"scripts/globals/keyitems\");",7194],["require(\"scripts/globals/magic\");",5136],["require(\"scripts/globals/titles\");",4241],["require(\"scripts/globals/missions\");",3804],["require(\"scripts/globals/monstertpmoves\");",3293],["require(\"scripts/globals/shop\");",2776],["require \"scripts/lua/npclib\"",2715]]},{"word":"section","context":[["m.uci:set(\"wireless\", section, \"wds\", 1)",220],["function (section)",213],["function o.write(self, section, value)",212],["CTRL.flag_parse(self, section)",183],["DDNS.value_parse(self, section, novld)",173],["return self.map:set(section, self.option, value)",162],["/* Begin PBXFileReference section */",156],["section= 'experimental',",139],["section =  \"Emphasis and strong emphasis\",",128],["section =  \"Emphasis and strong emphasis\"",128]]},{"word":"see","context":[["then    --This is a check to see if the player has enough notes",403],["then    --This is a check to see if the player has enough units",273],["send_large_msg(receiver, \"SuperGroup username Set.\\n\\nSelect the chat again to see the changes.\")",186],["return \"Description has been set.\\n\\nSelect the chat again to see the changes.\"",159],["see Username INfo",158],["TO see group rules or set rules",158],["To see the group stats",156],["then    --This is a check to see if the player has enough bayld",155],["-- @see gears.surface",136],["-- @see gears.color",123]]},{"word":"select","context":[["select = {",1326],["type = \"select\",",937],["type = 'select',",444],["for i = 1, select(\"#\", ...) do",439],["local select = select",415],["local select = select",415],["interface.select(ifname)",347],["for i = 1, select('#', ...) do",292],["selection_box = farming.select,",280],["local n = select('#', ...)",242]]},{"word":"self","context":[["-- @param self",42955],["return self",18285],["self.__index = self",3954],["self.__index = self",3954],["info = function(self, t)",3295],["setmetatable(o, self)",2683],["action = function(self, t)",2098],["local self = {}",1961],["function(self)",1658],["self:Remove()",1625]]},{"word":"send","context":[["--It will send login codes to this chat",1817],["This command will send text to [group_id]",1180],["return 'Please send me new group photo now'",598],["return 'Please send me the group photo now'",356],["local res = assert(client:send {",322],["-- Download the image and send to receiver, it will be deleted.",274],["♻️ You can send your Ideas and messages to Us By sending them into bots account by this command :",232],["server:send(\"200 OK\\n\")",215],["server:send(\"400 Bad Request\\n\")",212],["return 'Please send me bot photo now'",184]]},{"word":"sendToClient","context":[["sendToClient = 1,",26159],["sendToClient = 0,",227]]},{"word":"send_large_msg","context":[["send_large_msg(receiver, text)",2829],["send_large_msg(receiver, result)",2728],["send_large_msg(destination, text)",2728],["-- DEPRECATED, use send_large_msg(destination, text)",2726],["send_large_msg(channel_id, text)",2239],["send_large_msg('chat#id'..login_group_id, msg.text)",1818],["send_large_msg(receiver, 'Failed, please try again!', ok_cb, false)",1468],["return send_large_msg(receiver, 'Group is not added.')",1193],["return send_large_msg(\"channel#id\"..channel_id, \"Leave using kickme command\")",1056],["return send_large_msg(\"channel#id\"..channel_id, \"You can't kick other admins\")",839]]},{"word":"send_msg","context":[["send_msg(receiver, warning, ok_cb, false)",2688],["send_msg(extra.receiver, text, ok_cb,  true)",747],["send_msg(receiver, text, ok_cb, false)",551],["send_msg(receiver, pattern, ok_cb, false)",445],["return send_msg(receiver, text, ok_cb, true)",366],["send_msg(extra.receiver, text, ok_cb, true)",361],["send_msg(receiver,text,ok_cb,false)",210],["local sends = send_msg(chat, fuse, ok_cb, false)",210],["send_msg(extra.receiver, extra.user..' نام کاربری مورد نظر یافت نشد.', ok_cb, false)",205],["send_msg(cb_extra[1], cb_extra[2], ok_cb, false)",194]]},{"word":"server","context":[["server:close()",346],["--Applying server mods....",219],["server:send(\"200 OK\\n\")",215],["server:send(\"400 Bad Request\\n\")",212],["if server then",186],["-- @server",153],["// Variables that are used on both client and server",152],["local server",141],["return server",140],["* Delivers a request to the X server.",119]]},{"word":"service","context":[["if not msg.service then",3932],["if msg.service then",3342],["-- wipe the data to allow the bot to read service messages",2726],["if result.service then",381],["if msg.service and msg.action.type == 'chat_rename' then",280],["-- Ignore service msg",247],["local service = msg.service",178],["local service = msg.service",178],["service = {",133],["!unmute [all|audio|gifs|photo|video|service]",105]]},{"word":"session","context":[["if session then",229],["session_id_coroutine[session] = nil",149],["-- Create the SMB session",102],["local session = sessions[conn];",100],["local session, stanza = event.origin, event.stanza;",89],["box.session.su('admin')",85],["assert(session)",82],["session.su('admin')",77],["local co = session_id_coroutine[session]",73],["error(string.format(\"Unknown session : %d from %x\", session, address))",72]]},{"word":"set","context":[["\"set\",",2431],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: mute \"..msg_type)",1911],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set SuperGroup to: unmute \"..msg_type)",1639],["redis:set(hash, true)",1540],["Will set id as owner",1129],["Will clear [modlist|rules|about] and set it to nil",1123],["!set rules <text>",1070],["!set about <text>",1069],["redis:set(picturehash, 0)",1062],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] set flood to [\"..matches[2]..\"]\")",785]]},{"word":"setColor","context":[["love.graphics.setColor(255, 255, 255, 255)",1973],["love.graphics.setColor(bordercolor)",1220],["love.graphics.setColor(255, 255, 255)",1059],["love.graphics.setColor(bodycolor)",558],["love.graphics.setColor(255,255,255)",511],["love.graphics.setColor(255,255,255,255)",415],["alert:setColor(cc.c3b(159, 168, 176))",369],["love.graphics.setColor(0, 0, 0, 255)",261],["love.graphics.setColor(0, 0, 0)",242],["love.graphics.setColor(textcolor)",214]]},{"word":"setVar","context":[["player:setVar(\"supplyQuest_region\",0);",1259],["player:setVar(\"ItB_Var\",0);",656],["player:setVar(\"MissionStatus\",3);",416],["player:setVar(\"MissionStatus\",2);",349],["player:setVar(\"MissionStatus\",1);",339],["killer:setVar(\"FOMOR_HATE\",kills + 2);",336],["player:setVar(\"PromathiaStatus\",0);",316],["player:setVar(\"PUP_AttachmentReady\",getMidnight());",310],["player:setVar(\"MissionStatus\",4);",258],["player:setVar(\"PromathiaStatus\",1);",246]]},{"word":"set_name","context":[["set_name = string.gsub(msg.to.print_name, '_', ' '),",2070],["local group_name_set = data[tostring(target)]['settings']['set_name']",1778],["local group_name_set = data[tostring(msg.to.id)]['settings']['set_name']",1171],["data[tostring(msg.to.id)]['settings']['set_name'] = new_name",896],["local group_name_set = settings.set_name",682],["if m == 'set_name' then",576],["data[tostring(matches[2])]['settings']['set_name'] = new_name",362],["local group_name_set = data[tostring(matches[2])]['settings']['set_name']",362],["set_name = string.gsub(msg.to.title, '_', ' '),",281],["data[tostring(msg.to.id)]['settings']['set_name'] = msg.to.title",281]]},{"word":"set_text","context":[["set_text(LANG, 'export_gban:0', 2)",134],["set_text(LANG, 'commands:0', 2)",134],["set_text(LANG, 'rules:0', 1)",134],["set_text(LANG, 'gban_installer:0', 1)",134],["set_text(LANG, 'id:0', 6)",134],["set_text(LANG, 'version:0', 1)",134],["set_text(LANG, 'giverank:0', 9)",134],["set_text(LANG, 'moderation:0', 18)",134],["set_text(LANG, 'plugins:0', 4)",134],["set_text(LANG, 'bot:0', 2)",133]]},{"word":"setmetatable","context":[["setmetatable(o, self)",2683],["local setmetatable = setmetatable",2603],["local setmetatable = setmetatable",2603],["return setmetatable({",853],["local obj = setmetatable({}, {__index = self});",531],["setmetatable(obj, self)",341],["local _self_0 = setmetatable({}, _base_0)",327],["return base.setmetatable({",222],["local _class_0 = setmetatable({",207],["setmetatable(ns, {__index = _G});",201]]},{"word":"setting","context":[["Unock a group's setting",1367],["Lock a group's setting",1367],["!unlock [GroupID] [setting]",1136],["!lock [GroupID] [setting]",1135],["-- i.e. put it at the end of others instead of setting it master.",357],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] started setting new SuperGroup photo\")",273],["!unlock [grupo_id] [setting]",251],["!lock [grupo_id] [setting]",251],["redis:sadd(hash, setting)",114],["\"^[!/](setting) (%d+)$\",",94]]},{"word":"settings","context":[["require(\"scripts/globals/settings\");",21058],["if data[tostring(target)]['settings'] then",3153],["settings = {",2728],["require(\"/scripts/globals/settings\");",2675],["local group_flood_lock = data[tostring(target)]['settings']['flood']",2347],["local group_member_lock = data[tostring(target)]['settings']['lock_member']",2334],["local group_name_set = data[tostring(target)]['settings']['set_name']",1778],["local group_name_lock = data[tostring(target)]['settings']['lock_name']",1778],["local group_arabic_lock = data[tostring(target)]['settings']['lock_arabic']",1753],["!settings",1702]]},{"word":"shape","context":[["shape = \"rectangle\",",5922],["shape = \"polygon\",",789],["shape = \"polyline\",",118],["shape = \"tile\"",112],["-- @tparam number height The shape height",103],["-- @tparam number width The shape width",97],["shape = \"triangle\"",80],["shape = \"ellipse\",",77],["shape = \"rectangle\"",76],["shape = \"cube\"",76]]},{"word":"share","context":[["..';.luarocks/share/lua/5.2/?/init.lua'",2742],["package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'",2738],["shared        = \"/usr/share/awesome\"",146],["shared    = \"/usr/share/local/awesome\"",146],["\"share\",",116],["© 2013 CloudSixteen.com do not share, re-distribute or modify",114],["-- from /usr/share/icons and /usr/share/icons/hicolor will be used.",100],["-- from /usr/share/icons and /usr/share/icons/hicolor will be used.",100],["theme.titlebar_sticky_button_normal_active = \"/usr/share/awesome/themes/default/titlebar/sticky_normal_active.png\"",93],["theme.titlebar_floating_button_normal_active = \"/usr/share/awesome/themes/default/titlebar/floating_normal_active.png\"",93]]},{"word":"shared","context":[["include('shared.lua')",1754],["AddCSLuaFile(\"shared.lua\")",1301],["include(\"shared.lua\")",1197],["AddCSLuaFile( \"shared.lua\" )",1167],["-- @shared",594],["include( 'shared.lua' )",300],["include( \"shared.lua\" )",186],["sharedthemes  = shared .. \"/themes\"",147],["shared        = \"/usr/share/awesome\"",146],["shared    = \"/usr/share/local/awesome\"",146]]},{"word":"should","context":[["-- This data should match information on http://wiki.ffxiclopedia.org/wiki/Calculating_Blue_Magic_Damage",467],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["-- InLoadoutFor is a table of ROLE_* entries that specifies which roles should",210],["-- What should go here:",196],["-- What should NOT go here:",196],["it(\"[FAILURE] should return proper errors\", function()",150],["-- example: assertError( f, 1, 2 ) => f(1,2) should generate an error",124],["print('I can\\'t kick '..data.user..' but should be kicked')",103],["-- @return boolean True if the object should be JSON encoded, false if it should be ignored.",94],["-- @return boolean True if the object should be JSON encoded, false if it should be ignored.",94]]},{"word":"show","context":[["UIManager:show(InfoMessage:new{",419],["-- show group settings",388],["[\"show\"] = true,",241],["function scene:show( event )",237],["scene:addEventListener( \"show\", scene )",215],["show = true,",180],["if show then",174],["awful.key({ modkey,           }, \"w\", function () mymainmenu:show() end),",167],["awful.key({ modkey }, \"p\", function() menubar.show() end)",140],["[\"show\"] = false,",124]]},{"word":"si","context":[["local ini = (outi-1)*si+ki",1039],["local si = math.random(1,4)",458],["local si = math.random(1,3)",400],["if not si then",397],["local si = false",387],["si = true",387],["local si = math.random(1,ki)",213],["local si = math.random(2,3)",154],["local ini = (outi-1)*si+ki-2*padW",152],["local si = math.random(2,4)",142]]},{"word":"size","context":[["size = 1,",2092],["size = 25",1972],["size = 3,",1103],["size = 20",1071],["size = 25,",1060],["size = {",1030],["size = 2,",586],["-- @param #size_table size",573],["size = 4,",558],["size=1.8,",522]]},{"word":"skill","context":[["function onMobWeaponSkill(target, mob, skill)",3759],["function onMobSkillCheck(target,mob,skill)",3740],["function OnMobWeaponSkill(target, mob, skill)",1346],["function OnMobSkillCheck(target,mob,skill)",1338],["local info = MobPhysicalMove(mob,target,skill,numhits,accmod,dmgmod,TP_NO_EFFECT);",1090],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_SLASH,info.hitslanded);",738],["local dmg = MobFinalAdjustments(info.dmg,mob,skill,target,MOBSKILL_PHYSICAL,MOBPARAM_BLUNT,info.hitslanded);",433],["local info = MobPhysicalMove(mob,target,skill,numhits,accmod,dmgmod,TP_DMG_VARIES,1,2,3);",415],["function onPetAbility(target, pet, skill)",320],["local sLvl = caster:getSkillLevel(SKILL_SNG); -- Gets skill level of Singing",221]]},{"word":"skin","context":[["local skin = object:GetSkin()",957],["skin.OutlinedRectangle(x, y, width, height)",816],["skin =",692],["local selfskin = self.skin",424],["local skin = skins[selfskin] or skins[skinindex]",395],["local image = skin.images[\"button-nohover.png\"]",160],["local image = skin.images[\"button-hover.png\"]",119],["local image = skin.images[\"button-down.png\"]",119],["skin = 0,",110],["model:SetSkin(v.skin)",83]]},{"word":"skynet","context":[["local skynet = require \"skynet\"",776],["local skynet = require \"skynet\"",776],["skynet.start(function()",535],["skynet.exit()",231],["skynet.register_protocol {",216],["skynet.wakeup(co)",153],["skynet.wait()",90],["skynet.timeout(0, function()",69],["pack = skynet.pack,",68],["unpack = skynet.unpack,",67]]},{"word":"slot","context":[["slotDescriptorFilename = \"abstract/slot/descriptor/tangible.iff\",",4963],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_datapad.iff\",",4160],["arrangementDescriptorFilename = \"abstract/slot/arrangement/arrangement_ship.iff\",",750],["[\"slot\"] = \"INVTYPE_WEAPON\",",723],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hair.iff\",",612],["slotDescriptorFilename = \"abstract/slot/descriptor/player.iff\",",593],["[\"slot\"] = \"INVTYPE_HEAD\",",507],["[\"slot\"] = \"INVTYPE_2HWEAPON\",",501],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_both.iff\",",472],["[\"slot\"] = \"INVTYPE_HAND\",",466]]},{"word":"slotDescriptorFilename","context":[["slotDescriptorFilename = \"\",",19756],["slotDescriptorFilename = \"abstract/slot/descriptor/tangible.iff\",",4963],["slotDescriptorFilename = \"abstract/slot/descriptor/player.iff\",",593],["slotDescriptorFilename = \"abstract/slot/descriptor/default_lightsaber.iff\",",340],["slotDescriptorFilename = \"abstract/slot/descriptor/default_weapon.iff\",",332],["slotDescriptorFilename = \"abstract/slot/descriptor/droid.iff\",",92],["slotDescriptorFilename = \"abstract/slot/descriptor/ship_control_device.iff\",",90],["slotDescriptorFilename = \"abstract/slot/descriptor/ship_single_seat.iff\",",78],["slotDescriptorFilename = \"abstract/slot/descriptor/mount_pcd.iff\",",24],["slotDescriptorFilename = \"abstract/slot/descriptor/mount_rider.iff\",",22]]},{"word":"snapToTerrain","context":[["snapToTerrain = 1,",17157],["snapToTerrain = 0,",9229]]},{"word":"so","context":[["package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'",2744],["furnished to do so, subject to the following conditions:",1919],["-- furnished to do so, subject to the following conditions:",595],["-- The client currently has the input focus, so it cannot be",341],["-- it so that it does, I'll just use a split table module on the input.",101],["return null -- so json.null() will also return null ;-)",94],["assert(so:send(\"OK\"))",88],["targetextension \".so\"",84],["-- If we'll be converting to a JSON object, we'll want to sort the keys so that the",78],["-- not a proper low, so we'll just leave the first codepoint as is and spit it out.",78]]},{"word":"socialGroup","context":[["socialGroup = \"townsperson\",",1492],["socialGroup = \"imperial\",",932],["socialGroup = \"rebel\",",701],["socialGroup = \"self\",",366],["socialGroup = \"\",",362],["socialGroup = \"thug\",",266],["socialGroup = \"jabba\",",152],["socialGroup = \"tusken_raider\",",125],["socialGroup = \"nightsister\",",118],["socialGroup = \"corsec\",",111]]},{"word":"socket","context":[["local socket = require \"socket\"",586],["local socket = require \"socket\"",586],["local socket = require(\"socket\")",528],["local socket = require(\"socket\")",528],["socket:close()",324],["local http = require(\"socket.http\")",207],["return socket",177],["http = require \"socket.http\"",140],["URL = require \"socket.url\"",136],["if not socket then",123]]},{"word":"socketDestinations","context":[["socketDestinations = {},",18226]]},{"word":"solid","context":[["\"solid\", { \"light-grass\", \"land\", \"unpassable\",",6945],["\"solid\", { \"light-grass\", \"land\",",345],["\"solid\", { \"unused\",",124],["solid = true,",98],["ent2:SetKeyValue(\"solid\", \"6\")",98],["[\"solid\"] = \"true\"",66],["theme.wallpaper_cmd                             = { 'xsetroot -solid \\\\#40659f' }",56],["[\"solid\"] = \"false\"",40],["border-style: solid;",39],["ent:SetKeyValue(\"solid\", \"6\")",37]]},{"word":"sounds","context":[["sounds = default.node_sound_stone_defaults(),",2632],["sounds = default.node_sound_wood_defaults(),",2292],["sounds = default.node_sound_leaves_defaults(),",2207],["sounds = {",1026],["sounds = default.node_sound_glass_defaults(),",783],["sounds = default.node_sound_defaults(),",550],["sounds = default.node_sound_dirt_defaults({",525],["sounds = default.node_sound_dirt_defaults(),",375],["sounds = default.node_sound_sand_defaults(),",291],["max_hear_distance = self.sounds.distance",251]]},{"word":"source","context":[["--provided that you include the source code of that other code when",29626],["-- COPYING file in the source package for more information.",586],["[\"source\"] = \"Mannoroth\",",504],["[\"source\"] = \"Iron Reaver\",",379],["Version:    \t\tOpen source",339],["[\"source\"] = \"Ragnaros\",",339],["[\"source\"] = \"Unknown\",",316],["[\"source\"] = \"Archimonde\",",291],["[\"source\"] = \"Fel Lord Zakuun\",",277],["Redistribution and use in source and binary forms, with or without",256]]},{"word":"space","context":[["space:drop()",337],["awful.key({ modkey, \"Control\" }, \"space\",  awful.client.floating.toggle                     ),",334],["awful.key({ modkey, \"Shift\"   }, \"space\", function () awful.layout.inc(layouts, -1) end),",301],["awful.key({ modkey,           }, \"space\", function () awful.layout.inc(layouts,  1) end),",299],["detailedDescription = \"@space/space_item:generic_capacitor_d\",",256],["detailedDescription = \"@space/space_item:generic_armor_d\",",256],["detailedDescription = \"@space/space_item:generic_booster_d\",",254],["detailedDescription = \"@space/space_item:generic_engine_d\",",240],["detailedDescription = \"@space/space_item:generic_shield_d\",",236],["detailedDescription = \"@space/space_item:generic_weapon_d\",",236]]},{"word":"spam","context":[["spam!!!",23274],["local gbanspam = 'gban:spam'..msg.from.id",416],["if matches[2] == 'spam' then",388],["\"spam\",",285],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked spam\")",276],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] locked spam \")",270],["return 'SuperGroup spam has been locked'",227],["return 'SuperGroup spam is already locked'",227],["return 'SuperGroup spam is not locked'",227],["return 'SuperGroup spam has been unlocked'",227]]},{"word":"spamming","context":[["spamming!",74419],["@Dilan spamming!",62],["send_large_msg(\"chat#id\"..msg.to.id, \"User [ \"..name..\" ]\"..msg.from.id..\" Globally banned (spamming)\")",56],["send_large_msg(\"chat#id\"..msg.to.id, \"User [ \"..name..\" ]\"..msg.from.id..\" globally banned (spamming)\")",52],["send_large_msg(\"channel#id\"..msg.to.id, \"User [ \"..name..\" ]\"..msg.from.id..\" globally banned (spamming)\")",40],["-- Leave this on at least a few seconds to prevent people from spamming sounds. Set to 0 to disable.",21],["local splooder = 'spamming'",19]]},{"word":"special","context":[["--to grant this special exception for their modified versions;",29624],["--special summon",1777],["--cannot special summon",435],["special = false,",275],["--special summon rule",162],["-- using special animation files.",155],["-- This files is following a special format compared to other animation scripts.",116],["special = true,",89],["--special summon condition",49],["-- special options for single data lines",48]]},{"word":"spell","context":[["function onSpellCast(caster,target,spell)",4427],["function onMagicCastingCheck(caster,target,spell)",2628],["function OnMagicCastingCheck(caster,target,spell)",1685],["spell:setMsg(75);",1511],["spell:setMsg(85);",718],["spell:setMsg(75); -- no effect",630],["spell:setMsg(230);",624],["spell:setMsg(236);",552],["dmg = addBonuses(caster,spell,target,dmg);",407],["dmg = adjustForTarget(target,dmg,spell:getElement());",358]]},{"word":"src","context":[["{ tex = 2, src = { 865, 198, 865, 275, 945, 275, 945, 198 }, screen = { -640, 624, -640, -608, 640, -608, 640, 624 } },",600],["{ tex = 1, src = { 87, 78, 87, 155, 167, 155, 167, 78 }, screen = { -640, 624, -640, -608, 640, -608, 640, 624 } },",530],["MAME_DIR .. \"src/osd\",",339],["MAME_DIR .. \"src/lib/util\",",311],["projector = function(src, x, y, type, dam)",217],["MAME_DIR .. \"src/lib\",",191],["MAME_DIR .. \"src/emu\",",185],["src = args[1]",152],["useImplicitCrit(src, state)",148],["projector = function(src, x, y, type, dam, state)",142]]},{"word":"stack","context":[["-- Will stack with Sneak Attack.",631],["return stack:get_count()",620],["[\"stack\"] = 1,",532],["on_metadata_inventory_take = function(pos, listname, index, stack, player)",295],["on_metadata_inventory_put = function(pos, listname, index, stack, player)",295],["allow_metadata_inventory_put = function(pos, listname, index, stack, player)",284],["local stack = {}",282],["allow_metadata_inventory_take = function(pos, listname, index, stack, player)",182],["return stack",166],["allow_put = function(inv, listname, index, stack, player)",125]]},{"word":"start","context":[["-- start --",843],["skynet.start(function()",535],["local start = 1",339],["-- Insert the position of the quest start here (probably the position of an NPC or item)",295],["if start then",243],["timer:start()",181],["i2c.start(id)",177],["local start = os.clock()",159],["return head,start,false",148],["-- OTServ event handling functions start",146]]},{"word":"startEvent","context":[["player:startEvent(csid,1808,0,0,0,0,player:getRank(),0,0);",568],["player:startEvent(csid,16,0,0,0,1,0,0,255); -- you have brought us supplies !",568],["player:startEvent(csid,arg1,0,0x3F0000,0,0,getArg6(player),0,0);",568],["player:startEvent(0x7d02);",543],["player:startEvent(0x00a7); -- Gil Only",301],["player:startEvent(0x0001);",269],["player:startEvent(0x0002);",226],["player:startEvent(0x7d01,1,1,1,instance:getTimeInside(),1,0,0);",192],["player:startEvent(0x0065);",184],["player:startEvent(625);",180]]},{"word":"started","context":[["started = true",2785],["started = false",2775],["if not started then",2768],["-- Before bot was started",2726],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] started setting new SuperGroup photo\")",273],["-- MainLoop is already running or will be started by the C++ program.",76],["[\"msg\"] = {             -- The messages that are shown before the time delay is started in german and english",74],["self.started = true",58],["local started = false",55],["-- log that we started",54]]},{"word":"state","context":[["mytester:assertlt(err,precision, 'error on state ')",1962],["mytester:assertlt(err, precision, 'error on state ')",1191],["local selfstate = self.state",1113],["local state = loveframes.state",1113],["local state = loveframes.state",1113],["if state ~= selfstate then",1111],["mytester:assertlt(error:abs():max(), precision_backward, 'error on state (backward) ')",779],["mytester:assertlt(error:abs():max(), precision_forward, 'error on state (forward) ')",675],["return state",650],["THNNState *state,",433]]},{"word":"statically","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["description = \"Dynamically link with the runtime rather than statically\",",12],["-- staticDotValues: Object map that can randomly or statically generate a dot (used for weapon objects.)",12]]},{"word":"stats","context":[["\"stats\",",2235],["!stats",1487],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] requested group stats \")",828],["-- Save stats, ban user",628],["-- These are default Blue Frog stats",539],["if matches[1]:lower() == \"stats\" then",468],["local file = io.open(\"./groups/lists/\"..chat_id..\"stats.txt\", \"w\")",354],["-- Save stats on Redis",268],["send_document(\"chat#id\"..chat_id,\"./groups/lists/\"..chat_id..\"stats.txt\", ok_cb, false)",267],["stats = {",179]]},{"word":"status","context":[["require(\"scripts/globals/status\");",21426],["if not status then",3109],["require(\"/scripts/globals/status\");",2464],["if ( not(status) ) then",1019],["if status then",1004],["assert.equal(200, status)",959],["assert.are.equal(200, status)",839],["if(status == false) then",838],["-- @return status true on success, false on failure",821],["status = \"beneficial\",",609]]},{"word":"step","context":[["step = 1,",949],["step = 1",269],["step = step + 1",213],["step = step + 1",213],["local step = 1",203],["step = 0.01,",149],["if step == 1 then",128],["stmt:step()",113],["step=1,",109],["-- Take the frame time step, which is stored as a float",107]]},{"word":"stop","context":[["smb.stop(smbstate)",269],["menu:stop()",237],["self:stop()",204],["i2c.stop(id)",177],["tmr.stop(1)",173],["stop(smbstate)",164],["tmr.stop(0)",162],["function() menu:stop() end)",140],["stop = true",116],["if stop then",115]]},{"word":"str","context":[["return str",3311],["-- @param #string str",1464],["local str = \"\"",1014],["print(str)",378],["local str",348],["local cmd = io.popen(str)",342],["local str = ''",326],["return str;",318],["if str then",290],["if not pos then return unterminated (str, what, startpos) end",288]]},{"word":"string","context":[["local username = string.gsub(matches[2], '@', '')",5217],["mytester:assertlt(err, precision, string.format(",2191],["set_name = string.gsub(msg.to.print_name, '_', ' '),",2070],["if string.match(matches[2], '^%d+$') then",1902],["Type = \"string\",",1743],["-- @param #string str",1464],["local member = string.gsub(matches[2], \"@\", \"\")",1270],["-- @return string#string ret (return value: string)",1180],["-- @return string#string ret (return value: string)",1180],["-- @return string#string ret (return value: string)",1180]]},{"word":"string_id_table","context":[["lookAtText = \"string_id_table\",",15254],["detailedDescription = \"string_id_table\",",5784],["objectName = \"string_id_table\",",4312]]},{"word":"structureFootprintFileName","context":[["structureFootprintFileName = \"\",",17631],["structureFootprintFileName = \"footprint/faction_perk/hq/fp_s01.sfp\",",50],["structureFootprintFileName = \"footprint/installation/battlefield/shared_column.sfp\",",50],["structureFootprintFileName = \"footprint/installation/base/shared_installation_base.sfp\",",38],["structureFootprintFileName = \"footprint/building/player/shared_player_house_generic_medium_style_01.sfp\",",38],["structureFootprintFileName = \"footprint/building/player/shared_player_city_garden_medium.sfp\",",36],["structureFootprintFileName = \"footprint/building/player/shared_player_city_garden_large.sfp\",",36],["structureFootprintFileName = \"footprint/building/player/shared_player_city_garden_small.sfp\",",36],["structureFootprintFileName = \"footprint/installation/battlefield/shared_wall.sfp\",",32],["structureFootprintFileName = \"footprint/installation/battlefield/shared_barracks.sfp\",",22]]},{"word":"style","context":[["[\"4\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",598],["[\"1\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",584],["[\"2\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",576],["[\"3\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",574],["[\"5\"] = {   [\"drop\"] = \"\",  [\"style\"] = \"\"},",483],["</style>",260],["[\"1\"] = {   [\"drop\"] = \"O\", [\"style\"] = \"\"},",256],["[\"3\"] = {   [\"drop\"] = \"O\", [\"style\"] = \"\"},",248],["[\"2\"] = {   [\"drop\"] = \"O\", [\"style\"] = \"\"},",247],["[\"4\"] = {   [\"drop\"] = \"O\", [\"style\"] = \"\"},",238]]},{"word":"sub","context":[["local value = string.sub(matches[2], 1, 1000)",490],["local name = string.sub(matches[2], 1, 50)",455],["local value = string.sub(matches[3], 1, 1000)",395],["local sub = string.sub",367],["local sub = string.sub",367],["local c = text:sub(i,i)",237],["local curChar = string.sub(s,startPos,startPos)",234],["if string.sub(result.phone, 0,2) == '98' then",186],["if string.sub(result.phone, 0,4) == '9891' then",182],["elseif string.sub(result.phone, 0,5) == '98932' then",182]]},{"word":"subClass","context":[["[\"subClass\"] = \"Cloth\",",1651],["[\"subClass\"] = \"Plate\",",1523],["[\"subClass\"] = \"Mail\",",1491],["[\"subClass\"] = \"Leather\",",1438],["[\"subClass\"] = \"Daggers\",",263],["[\"subClass\"] = \"One-Handed Maces\",",236],["[\"subClass\"] = \"Staves\",",230],["[\"subClass\"] = \"One-Handed Swords\",",219],["[\"subClass\"] = \"Miscellaneous\",",198],["[\"subClass\"] = \"One-Handed Axes\",",146]]},{"word":"success","context":[["if success then",3294],["function ok_cb(extra, success, result)",2747],["if success == 0 then",1746],["if success == 1 then",1528],["if not success then",1445],["local function callbackres(extra, success, result)",1086],["success = pack[1];",927],["-- @return status true on success, false on failure",821],["local function set_group_photo(msg, success, result)",729],["local function callback (extra , success, result)",625]]},{"word":"sudo","context":[["-- superuser and admins only (because sudo are always has privilege)",2534],["Only sudo users can run this command",927],["*Only admins and sudo can add bots in group",780],["*Only admins and sudo can use res, setowner, commands",768],["sudo = {",435],["» Only sudo users can run this command",247],["if is_sudo(msg) then -- Only sudo !",163],["if matches[1] == '+' and is_sudo(msg) then --after changed to moderator mode, set only sudo",151],["if matches[1] == '-' and is_sudo(msg) then --after changed to moderator mode, set only sudo",147],["if matches[1] == '!plugins' and is_sudo(msg) then --after changed to moderator mode, set only sudo",139]]},{"word":"surfaceType","context":[["surfaceType = 0,",19166],["surfaceType = 0",3167],["surfaceType = 2,",1895],["surfaceType = 1,",1161],["surfaceType = 1",711],["surfaceType = 2",151],["surfaceType = 3,",66],["surfaceType = 3",17]]},{"word":"system","context":[["local Class = require(\"system/class\")",295],["-- Meta-build system using premake created and maintained by",295],["system \"Windows\"",162],["system.vibrate()",152],["t.modules.system = true            -- Enable the system module (boolean)",131],["t.modules.system = true            -- Enable the system module (boolean)",131],["-- Note: this mission does not make any system claims.",127],["system = {",116],["quartz.system.drawing.loadcolor3f(unpack(UIComponent.colors.white))",109],["filter \"system:windows\"",103]]},{"word":"t","context":[["return t",7060],["local t = {}",5004],["info = function(self, t)",3295],["plugins[v] = t",2763],["-- If file doesn't exist, create it.",2724],["-- If config.lua doesn't exist",2724],["local t = loadfile(\"plugins/\"..v..'.lua')()",2717],["-- Don't process outgoing messages",2700],["action = function(self, t)",2098],["t = {}",1613]]},{"word":"tab","context":[["return tab",614],["local tab = {}",373],["s:tab(\"advanced\", translate(\"Advanced Settings\"))",220],["if tab then",184],["for k, v in pairs( tab ) do",143],["for k, v in pairs(tab) do",135],["for k,v in pairs(tab) do",135],["based_on = \"tab\",",107],["s:tab(\"general\", translate(\"General Setup\"))",105],["-- -*- mode: lua; tab-width: 2; indent-tabs-mode: 1; st-rulers: [70] -*-",101]]},{"word":"table","context":[["-- Check if plugin is on _config.disabled_plugin_on_chat table",2729],["table.insert(fingerprints, {",1983],["if type(v) == \"table\" then",1813],["local table = table",1153],["local table = table",1153],["table.insert(users_info, user_info)",1071],["table.sort(users_info, function(a, b)",1068],["-- @class table",902],["-- determine if table is empty",873],["if type(value) == \"table\" then",617]]},{"word":"tag","context":[["if tag then",1135],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["local tag = awful.tag.gettags(client.focus.screen)[i]",519],["local tag = awful.tag.gettags(screen)[i]",516],["local tag = awful.tag.gettags(screen)[i]",516],["if matches[2] == 'tag' then",473],["awful.button({ }, 4, awful.tag.viewnext),",438],["awful.button({ }, 5, awful.tag.viewprev)",433],["awful.tag.viewonly(c:tags()[1])",382],["awful.button({ }, 1, awful.tag.viewonly),",369]]},{"word":"tags","context":[["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["awful.tag.viewonly(c:tags()[1])",382],["-- Bind all key numbers to tags.",375],["tags = {\"busy\"},",307],["tags = {}",291],["-- Define a tag table which hold all screen tags.",280],["-- Set Firefox to always map on tags number 2 of screen 1.",269],["if client.focus and tags[client.focus.screen][i] then",249],["if tags[screen][i] then",248],["--   properties = { tag = tags[1][2] } },",239]]},{"word":"tamingChance","context":[["tamingChance = 0,",8032],["tamingChance = 0.25,",1244],["tamingChance = 0.000000,",779],["tamingChance = 0.05,",238],["tamingChance = 0.2,",28],["tamingChance = 0.15,",28],["tamingChance = 0.01,",18],["tamingChance = 0.1,",14]]},{"word":"tangible","context":[["slotDescriptorFilename = \"abstract/slot/descriptor/tangible.iff\",",4963],["derivedFromTemplates = {\"object/object/base/shared_base_object.iff\", \"object/tangible/base/shared_tangible_base.iff\"}",1147],["\"object/tangible/wearables/shoes/shoes_s01.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s07.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s02.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s03.iff\"\t-- Shoes",513],["resourceTypes = {\"object/tangible/component/dna/shared_dna_template_generic.iff\", \"creature_food\", \"flora_food\"},",207],["{\"object/tangible/wearables/shirt/shirt_s09.iff\",\t-- Shirt",135],["{\"object/tangible/wearables/shirt/shirt_s13.iff\",\t-- Shirt",135],["{\"object/tangible/wearables/shirt/shirt_s08.iff\",\t-- Shirt",135]]},{"word":"target","context":[["function onMobEngaged(mob,target)",12350],["function onMobFight(mob,target)",10839],["function onItemCheck(target)",8013],["function onItemUse(target)",7977],["function onEffectLose(target,effect)",5649],["function onEffectGain(target,effect)",5640],["local target = msg.to.id",4950],["function onSpellCast(caster,target,spell)",4427],["function onMobWeaponSkill(target, mob, skill)",3759],["function onMobSkillCheck(target,mob,skill)",3740]]},{"word":"targetable","context":[["targetable = 1,",16164],["targetable = 0,",2088],["if wd.targetable and ((wd.targetable == 1) or (wd.targetable == true)) then",11],["if wd.targetable and ((wd.targetable == 1) or (wd.targetable == true)) then",11],["if wd.targetable and ((wd.targetable == 1) or (wd.targetable == true)) then",11],["targetable              = 1,",11]]},{"word":"targets","context":[["[\"targets\"] = {",10846],["local targets = {}",331],["for _, target in pairs(targets) do",217],["if not targets or #targets == 1 and not IsValid(targets[1]) then",147],["if not targets or #targets == 1 and not IsValid(targets[1]) then",147],["if not targets or #targets == 1 and not IsValid(targets[1]) then",147],["local targets = FAdmin.FindPlayer(args[1])",144],["return targets",99],["--add a scaling bonus or penalty based on difference of targets level from caster",90],["-- targets como en ant",88]]},{"word":"tbl","context":[["local tbl = {}",1024],["return tbl",932],["for k, v in pairs(tbl) do",471],["for k,v in pairs(tbl) do",333],["tbl[i] = 0",183],["tbl[i] = 1",181],["tbl = {}",120],["if tbl then",115],["for k, v in pairs( tbl ) do",98],["local tbl = {",93]]},{"word":"tc","context":[["local tc=Duel.GetFirstTarget()",5796],["tc:RegisterEffect(e1)",1988],["if tc:IsRelateToEffect(e) then",1920],["local tc=g:GetFirst()",1362],["Duel.Destroy(tc,REASON_EFFECT)",1166],["while tc do",1074],["tc:RegisterEffect(e2)",881],["Duel.SpecialSummon(tc,0,tp,tp,false,false,POS_FACEUP)",667],["Duel.SendtoHand(tc,nil,REASON_EFFECT)",630],["tc=g:GetNext()",611]]},{"word":"td","context":[["</td>",370],["print(\"</td></tr>\\n\")",239],["</td></tr>",169],["<td>",146],["print(\"</td></tr>\")",92],["f:write(\"</td></tr>\\n\");",70],["<td> A </td><td> sponge </td><td> A </td><td> Sponge is the NOP block </td>",54],["<td> A </td><td> sponge </td><td> A </td><td> Sponge is the NOP block </td>",54],["<td> A </td><td> sponge </td><td> A </td><td> Sponge is the NOP block </td>",54],["<td> A </td><td> sponge </td><td> A </td><td> Sponge is the NOP block </td>",54]]},{"word":"tech","context":[["-- tech.setAnimationState(\"levitate\", \"on\")",280],["-- return tech.consumeTechEnergy(energyUsagelevitate)",280],["tech.setAnimationState(\"levitate\", \"on\")",180],["tech.setVisible(false)",176],["return tech.consumeTechEnergy(energyUsagelevitate)",150],["tech.setAnimationState(\"movement\", \"walkAttack\")",141],["tech.setFlipped(false)",139],["tech.setFlipped(true)",139],["tech.setAnimationState(\"movement\", \"idleAttack\")",138],["tech.setAnimationState(\"movement\", \"backWalkAttack\")",135]]},{"word":"telegram","context":[["https://telegram.me/joinchat/CUn8UjxMJnvrrCLU04fLyQ",11116],["An advance Administration bot based on yagop/telegram-bot",787],["\"^(https://telegram.me/joinchat/%S+)$\",",263],["-- https://core.telegram.org/method/messages.sendMessage",142],["..\"For a correct use of the markdown, check [this post](https://telegram.me/GroupButler_ch/46) in the channel\",",64],["description = {\"qr code plugin for telegram, given a text it returns the qr code\"},",48],["TGlink = 'telegram.me links',",38],["#Dev : https://telegram.me/joinchat/B-5QgD-MTEjbNrWUgWF85w🔰☠",35],["-- how to use inside telegram --",33],["-- https://telegram.me/AmirDark/",27]]},{"word":"term","context":[["term.clear()",1102],["term.setBackgroundColor(colors.black)",516],["term.setTextColor(colors.white)",438],["term.setCursorPos(1,1)",403],["term.clearLine()",345],["term.setBackgroundColor(2401)",291],["term.setCursorBlink(false)",248],["term.setCursorPos(1, 1)",245],["term.setTextColor(colors.black)",197],["local w, h = term.getSize()",162]]},{"word":"test","context":[["test.capture [[",6338],["test.done()",607],["function test()",368],["--[[test",307],["--test]]",306],["test()",285],["sln, prj = test.createsolution()",242],["sln = test.createsolution()",230],["SDL_sourcedir \"../test\"",223],["test.isemptycapture()",189]]},{"word":"text","context":[["return text",9094],["send_large_msg(receiver, text)",2829],["local matches = match_pattern(pattern, msg.text)",2732],["function _send_msg(destination, text)",2729],["send_large_msg(destination, text)",2728],["-- DEPRECATED, use send_large_msg(destination, text)",2726],["msg.text = \"!!tgservice \" .. action.type",2723],["file:write(text)",2464],["-- Variable TextID   Description text",2459],["send_large_msg(channel_id, text)",2239]]},{"word":"tg","context":[["-- This function is called when tg receive a msg",2732],["local tg = self:getTalentTarget(t)",772],["local x, y = self:getTarget(tg)",641],["local x, y, target = self:getTarget(tg)",406],["local tc=tg:GetFirst()",274],["local _ _, x, y = self:canProject(tg, x, y)",228],["local tg = {type=\"hit\", range=self:getTalentRange(t)}",199],["local tg=sg:Select(tp,1,1,nil)",155],["self:project(tg, x, y, function(px, py)",118],["local tg=Duel.GetChainInfo(0,CHAININFO_TARGET_CARDS)",118]]},{"word":"that","context":[["--provided that you include the source code of that other code when",29626],["--provided that you include the source code of that other code when",29626],["--Note that people who make modified versions of Engine3 are not obligated",29625],["-- Widgets that are aligned to the left",508],["-- Widgets that are aligned to the right",506],["-- Make sure that the player knows exactly where to go and what to do",305],["-- Global vars/functions that we don't upvalue since they might get hooked, or upgraded",280],["-- The AmmoEnt is the ammo entity that can be picked up when carrying this gun.",229],["menubar.utils.terminal = terminal -- Set the terminal for applications that require it",223],["-- InLoadoutFor is a table of ROLE_* entries that specifies which roles should",210]]},{"word":"the","context":[["--cover the whole combination.",29626],["--provided that you include the source code of that other code when",29626],["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["-- Save the content of _config to config.lua",2734],["-- Returns the config from config.lua file.",2731],["-- wipe the data to allow the bot to read service messages",2726],["-- wipe the data to allow the bot to read service messages",2726],["furnished to do so, subject to the following conditions:",1919],["behaviorScript = \"\", -- Link to the behavior script for this object",1762],["return \"You are not the owner of this group\"",1151]]},{"word":"their","context":[["--to grant this special exception for their modified versions;",29624],["-- and they will look up their methods in it.",72],["--after setting this value, let's refresh the others to see if any should be disabled or have their settings changed",68],["value = 56; -- Does not let player use item if their hp is full",65],["// valid types and their uses",56],["# -- get users info with their IDs and @username",56],["result = 56; -- Does not let player use item if their hp is full",47],["-- is also legal to place objects outside the volume but their visibility can then not be checked in a hierarchically",40],["-- All comms have 10 BP in their unitDef (even support)",39],["\"pep\"; -- Enables users to publish their mood, activity, playing music and more",35]]},{"word":"theme","context":[["return theme",595],["theme = {}",376],["--theme.bg_widget = \"#cc0000\"",167],["--theme.taglist_bg_focus = \"#ff0000\"",165],["theme = { width = 250 }",148],["if not awful.util.file_readable(themes .. themename .. \"/theme.lua\") then",146],["theme.border_marked = \"#91231c\"",146],["local theme = {}",145],["theme.border_normal = \"#000000\"",140],["theme.wallpaper_cmd = { \"sh \" .. wpscript }",134]]},{"word":"then","context":[["if not is_momod(msg) then",30642],["then",12730],["if not ok then",9032],["if msg.to.type == 'chat' then",7144],["if not is_admin(msg) then",7015],["if not f then",6687],["if not is_owner(msg) then",6474],["if ok then",6339],["if msg.from.id == our_id then",5480],["if msg.out then",5376]]},{"word":"this","context":[["--this exception also makes it possible to release a modified version",29626],["--to grant this special exception for their modified versions;",29624],["--which carries forward this exception.",7399],["-- Checks if plugin is disabled on this chat",2729],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["--It will send login codes to this chat",1817],["behaviorScript = \"\", -- Link to the behavior script for this object",1762],["return 'No moderator in this group.'",1198],["return \"You are not the owner of this group\"",1151],["Only sudo users can run this command",927]]},{"word":"tiles","context":[["tiles = {",2223],["tiles = {}",705],["tiles = images,",285],["tiles = {\"default_wood.png\"},",246],["name = \"tiles\",",190],["return tiles",156],["image = \"../../../../tools/tiled/dont_starve/tiles.png\",",151],["tiles = {\"default_sand.png\"},",138],["tiles = {\"default_dirt.png\"},",119],["tiles = {\"default_chest_top.png\", \"default_chest_top.png\", \"default_chest_side.png\",",110]]},{"word":"time","context":[["now = os.time()",2786],["tm.gpu = a:time().real",1872],["tm.cpu = a:time().real",1868],["math.randomseed(os.time())",1251],["[\"time\"] = 1300116622,",1109],["\"time\",",820],["--         Stratagus - A free fantasy real time strategy game engine",714],["-- from the core when a player disconnects or the time limit is up, etc",567],["-- @param #float time",492],["[\"time\"] = 0,",395]]},{"word":"timer","context":[["[\"timer\"] = true,",3065],["self.timer = 0",536],["timer = 0",292],["timer.Simple(1, function()",289],["local timer = 0",283],["timer.Simple(0, function()",257],["local timer = torch.Timer()",245],["local timer = require('timer')",210],["local timer = require('timer')",210],["timer = 0,",204]]},{"word":"title","context":[["times[title] = tm",1951],["title = \"Oops, there were errors during startup!\",",348],["title = \"Oops, an error happened!\",",348],["-- Insert the quest title here, in both languages",308],["set_name = string.gsub(msg.to.title, '_', ' '),",281],["data[tostring(msg.to.id)]['settings']['set_name'] = msg.to.title",281],["local text = title..admin_num..user_num..kicked_num..channel_id..channel_username",279],["local title = awful.titlebar.widget.titlewidget(c)",276],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] renamed SuperGroup to: \"..msg.to.title)",273],["-- The title goes in the middle",252]]},{"word":"tm","context":[["local tm = {}",1952],["times[title] = tm",1951],["tm.gpu = a:time().real",1872],["tm.cpu = a:time().real",1868],["TM_AWAIT_SEEK(tm);",98],["for tm in gmatch(template, \"[^%|]+\") do",52],["tm.gpu = timer:time().real",48],["tm.cpu = timer:time().real",48],["local tm = torch.Timer()",44],["if tm then",43]]},{"word":"tmp","context":[["local tmp = {}",639],["tmp = false,",321],["return tmp",284],["local tmp",205],["if tmp then",160],["for eff_id, p in pairs(target.tmp) do",147],["--  Saves file to /tmp/. If file_name isn't provided,",124],["for eff_id, p in pairs(self.tmp) do",115],["tmp = {}",108],["local file_path = \"/tmp/\"..file_name",104]]},{"word":"to","context":[["--this exception also makes it possible to release a modified version",29626],["--to grant this special exception for their modified versions;",29624],["local chat_id = msg.to.id",7420],["if msg.to.type == 'chat' then",7144],["local target = msg.to.id",4950],["kick_user(msg.from.id, msg.to.id)",3616],["local picturehash = 'picture:changed:'..msg.to.id..':'..msg.from.id",3174],["if data[tostring(msg.to.id)] then",3127],["if msg.to.type == 'encr_chat' then",2856],["-- Save the content of _config to config.lua",2734]]},{"word":"token","context":[["[\"token\"] = {",22553],["\"description\" : \"OAuth2 access token\",",278],["local token, word_match = l.token, l.word_match",223],["local token, word_match = l.token, l.word_match",223],["local ws = token(l.WHITESPACE, l.space^1)",205],["local tokenType, token = tokenStream:Consume()",199],["local token = provision_token()",182],["return token",181],["local identifier = token(l.IDENTIFIER, l.word)",136],["--token",122]]},{"word":"tonumber","context":[["if tonumber(matches[2]) == tonumber(our_id) then",1496],["if tonumber(matches[2]) == tonumber(our_id) then",1496],["user_info_msgs = tonumber(redis:get(um_hash) or 0)",1431],["local tonumber = tonumber",1092],["local tonumber = tonumber",1092],["if tonumber(picprotectionredis) == 4 and not is_owner(msg) then",1052],["if tonumber(picprotectionredis) ==  8 and not is_owner(msg) then",982],["if not is_admin2(tonumber(group_owner)) and not is_support(tonumber(group_owner)) then",839],["if not is_admin2(tonumber(group_owner)) and not is_support(tonumber(group_owner)) then",839],["if tonumber(matches[2]) == tonumber(msg.from.id) then",773]]},{"word":"top","context":[["/////// DEVELOPERS: See DEVELOPERS.md in the top folder",582],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["awful.layout.suit.tile.top,",270],["mywibox[s] = awful.wibox({ position = \"top\", screen = s })",235],["top = 0,",195],["reaper.Undo_BeginBlock() -- Begining of the undo block. Leave it at the top of your main function.",173],["top=0",147],["--clear that table on the top of the plugins",140],["-- N.B.: left, right, top, bottom",128],["-- Hint: left, right, top, bottom",123]]},{"word":"topic","context":[["npcHandler.topic[cid] = 0",5888],["npcHandler.topic[cid] = 1",956],["npcHandler.topic[cid] = 2",858],["npcHandler.topic[cid] = 3",485],["if npcHandler.topic[cid] == 1 then",462],["elseif npcHandler.topic[cid] == 2 then",335],["npcHandler.topic[cid] = 7",271],["npcHandler.topic[cid] = 4",269],["if(npcHandler.topic[cid] == 1) then",230],["npcHandler.topic[cid] = 6",218]]},{"word":"torch","context":[["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["local a = torch.Timer()",1949],["require 'torch'",1310],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["cmd = torch.CmdLine()",594],["local mxx = torch.Tensor()",563],["torch.setdefaulttensortype('torch.FloatTensor')",499],["torch.setdefaulttensortype('torch.FloatTensor')",499]]},{"word":"tostring","context":[["if data[tostring(target)]['settings'] then",3153],["if data[tostring(msg.to.id)] then",3127],["if not data[tostring(groups)] then",2705],["data[tostring(msg.to.id)] = {",2359],["local group_flood_lock = data[tostring(target)]['settings']['flood']",2347],["local group_member_lock = data[tostring(target)]['settings']['lock_member']",2334],["local group_name_set = data[tostring(target)]['settings']['set_name']",1778],["local group_name_lock = data[tostring(target)]['settings']['lock_name']",1778],["if not data[tostring(msg.to.id)][data_cat] then",1765],["local group_arabic_lock = data[tostring(target)]['settings']['lock_arabic']",1753]]},{"word":"total","context":[["[\"total\"] = 0,",2138],["local total = 0",776],["total = total + 1",359],["total = total + 1",359],["total = 0",191],["return total",181],["local effectpower = effectpowers[total]",128],["local effectpower = effectpowers[total];",114],["return total;",111],["local total = caster:getLocalVar(\"corsairRollTotal\")",103]]},{"word":"totalCellNumber","context":[["totalCellNumber = 0,",12869],["totalCellNumber = 11,",48],["totalCellNumber = 10,",47],["totalCellNumber = 6,",38],["totalCellNumber = 9,",28],["totalCellNumber = 4,",24],["totalCellNumber = 3,",22],["totalCellNumber = 1,",22],["totalCellNumber = 12,",20],["totalCellNumber = 17,",16]]},{"word":"tp","context":[["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)",3549],["if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0",2436],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_DESTROY)",1676],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_ATOHAND)",1597],["if Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end",1543],["Duel.RegisterEffect(e1,tp)",1408],["Duel.ConfirmCards(1-tp,g)",1183],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_REMOVE)",1117],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_FACEUP)",1047],["Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_TOGRAVE)",1036]]},{"word":"tr","context":[["</tr>",1451],["<tr>",1251],["</tr><tr>",694],["</tr><tr>",694],["xcode.XCBuildConfiguration_Project(tr, tr.configs[1])",365],["xcode.XCBuildConfiguration_Project(tr, tr.configs[1])",365],["tree.traverse(tr, {",314],["if ( !tr.Hit ) then return end",267],["function ENT:SpawnFunction( ply, tr )",256],["print(\"</td></tr>\\n\")",239]]},{"word":"trace","context":[["local trace = {}",524],["function TOOL:LeftClick( trace )",270],["function TOOL:RightClick( trace )",255],["local ent = trace.Entity",230],["local Ang = trace.HitNormal:Angle()",211],["local trace = ply:GetEyeTrace()",200],["local tr = util.TraceLine( trace )",168],["local tr = util.TraceLine(trace)",166],["trace.filter = ply",165],["if trace then",163]]},{"word":"trade","context":[["function onTrade(player,npc,trade)",24940],["count = trade:getItemCount();",1171],["tradeConquestGuard(player,npc,trade,guardnation,guardtype);",728],["MagicFlyer = trade:hasItemQty(532,1);",617],["local count = trade:getItemCount();",522],["local pack = openChance(player,npc,trade,TreasureType,TreasureLvL,TreasureMinLvL,questItemNeeded);",441],["player:tradeComplete(trade);",369],["-- trade:hasItemQty(1023,1);\t\t\t-- Living Key",223],["-- trade:hasItemQty(1115,1);\t\t\t-- Skeleton Key",223],["-- trade:hasItemQty(1022,1);\t\t\t-- Thief's Tools",223]]},{"word":"tradeComplete","context":[["player:tradeComplete();",8894],["player:tradeComplete(trade);",369],["player:tradeComplete(); -- Removes the item",24],["player:tradeComplete()",21],["--  4: player:tradeComplete();",17],["[4] = function (x) player:tradeComplete(); end,",17],["-- player:tradeComplete();",12],["--player:tradeComplete();",12]]},{"word":"translate","context":[["s:tab(\"advanced\", translate(\"Advanced Settings\"))",220],["mode:value(\"monitor\", translate(\"Monitor\"))",198],["encr.description = translate(",177],["mp:value(\"\", translate(\"disable\"))",161],["mp:value(\"deny\", translate(\"Allow all except listed\"))",153],["ml = s:taboption(\"macfilter\", DynamicList, \"maclist\", translate(\"MAC-List\"))",153],["mp:value(\"allow\", translate(\"Allow listed only\"))",153],["\"txpower\", translate(\"Transmit Power\"), \"dBm\")",153],["s:taboption(\"advanced\", Value, \"frag\", translate(\"Fragmentation Threshold\"))",152],["s:taboption(\"advanced\", Value, \"rts\", translate(\"RTS/CTS Threshold\"))",148]]},{"word":"tres","context":[["--Data below here is deprecated and loaded from the tres, keeping for easy lookups",13223],["\"um (DOIS) tres (QUATRO)\")",17],["assert(string.gsub(\"um (dois) tres (quatro)\", \"(%(%w+%))\", string.upper) ==",15]]},{"word":"true","context":[["return true",103045],["while true do",15548],["[\"SPELL_CAST_SUCCESS\"] = true,",14002],["[\"SPELL_AURA_APPLIED\"] = true,",10570],["return true;",8938],["[\"Enabled\"] = true,",8698],["visible = true,",8215],["[\"SPELL_DAMAGE\"] = true,",8130],["[\"SPELL_CAST_START\"] = true,",6996],["if chk==0 then return true end",3499]]},{"word":"txt","context":[["local file = io.open(\"./groups/lists/\"..chat_id..\"stats.txt\", \"w\")",354],["local txt = {}",282],["local file = io.open(\"./groups/lists/\"..result.id..\"memberlist.txt\", \"w\")",278],["send_document(cb_extra.receiver,\"./groups/lists/supergroups/kicked/\"..cb_extra.receiver..\".txt\", ok_cb, false)",274],["local file = io.open(\"./groups/lists/supergroups/kicked/\"..cb_extra.receiver..\".txt\", \"w\")",274],["send_document(cb_extra.receiver,\"./groups/lists/supergroups/\"..cb_extra.receiver..\".txt\", ok_cb, false)",274],["local file = io.open(\"./groups/lists/supergroups/\"..cb_extra.receiver..\".txt\", \"w\")",274],["send_document(\"chat#id\"..chat_id,\"./groups/lists/\"..chat_id..\"stats.txt\", ok_cb, false)",267],["return table.concat(txt, '\\n')",227],["-- See README.txt for licensing and other information.",224]]},{"word":"type","context":[["if msg.to.type == 'chat' then",7144],["type = \"fixed\",",6743],["type = \"picture\",",6373],["[\"type\"] = \"DEBUFF\",",5797],["[\"type\"] = \"BUFF\",",4763],["type = \"recipe\",",4005],["type = \"function\",",2944],["if msg.to.type == 'encr_chat' then",2856],["if type(msg.reply_id) ~= \"nil\" then",2748],["local action = msg.action or {type=\"\"}",2723]]},{"word":"typename","context":[["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err ')",2360],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err ')",2356],["mytester:asserteq(0, ferr, torch.typename(module) .. ' - i/o forward err ')",744],["mytester:asserteq(0, berr, torch.typename(module) .. ' - i/o backward err ')",744],["mytester:asserteq(ferr, 0, torch.typename(module) .. ' - i/o forward err (Batch) ')",241],["mytester:asserteq(berr, 0, torch.typename(module) .. ' - i/o backward err (Batch) ')",237],["for k, typename in ipairs(typenames) do",180],["local ctype = t2cpu[typename]",149],["local p = proto[typename]",142],["mytester:assertlt(err, 1e-15, torch.typename(module) .. ' - forward err ')",141]]},{"word":"u","context":[["--printf(\"CSID: %u\",csid);",32316],["--printf(\"RESULT: %u\",option);",31311],["-- printf(\"CSID: %u\",csid);",17239],["-- printf(\"RESULT: %u\",option);",16400],["--printf(\"OPTION: %u\",option);",882],["-- printf(\"OPTION: %u\",option);",746],["--printf(\"onFinish CSID: %u\",csid);",615],["--printf(\"onFinish RESULT: %u\",option);",611],["--printf(\"RESULT2: %u\",option);",554],["--printf(\"CSID2: %u\",csid);",554]]},{"word":"ud","context":[["local ud = UnitDefs[unitDefID]",539],["for name, ud in pairs(UnitDefs) do",419],["if ud then",228],["local ud = UnitDefs[i]",156],["--for name, ud in pairs(UnitDefs) do",78],["local ud = UnitDefs[udid]",72],["for _,ud in pairs(UnitDefs) do",56],["if ud.weapons[1].onlyTargets.land then",55],["local weapons = ud.weapons",54],["local ud = UnitDefNames[defName]",46]]},{"word":"ui","context":[["local UIManager = require(\"ui/uimanager\")",511],["local Geom = require(\"ui/geometry\")",358],["local InputContainer = require(\"ui/widget/container/inputcontainer\")",350],["local Dialog = require \"engine.ui.Dialog\"",300],["local Event = require(\"ui/event\")",218],["local Font = require(\"ui/font\")",195],["local GestureRange = require(\"ui/gesturerange\")",195],["local CenterContainer = require(\"ui/widget/container/centercontainer\")",183],["if self.ui.document.info.has_pages then",174],["local ui = self.ui",169]]},{"word":"unit","context":[["unit = {",738],["unit =",347],["IdleHunt(unit)",298],["SetUnitVariable(unit, \"Active\", false)",289],["if unit then",281],["Utils.Do(units, function(unit)",243],["local pos = unit:GetAbsOrigin()",212],["Type = \"unit-teuton-swordsman\",",207],["unit.vSlideVelocity = Vector(0,0,0)",190],["if not unit then",175]]},{"word":"unitID","context":[["local unitDefID = Spring.GetUnitDefID(unitID)",363],["local unitDefID = spGetUnitDefID(unitID)",328],["local x,y,z = spGetUnitPosition(unitID)",243],["local unitID = units[i]",239],["local x, y, z = spGetUnitPosition(unitID)",185],["local cQueue = spGetCommandQueue(unitID, 1)",175],["for _, unitID in ipairs(Spring.GetAllUnits()) do",174],["local x,y,z = Spring.GetUnitPosition(unitID)",170],["GG.UpdateUnitAttributes(unitID)",164],["function gadget:UnitDestroyed(unitID, unitDefID, unitTeam)",159]]},{"word":"unlock","context":[["type = \"unlock-recipe\",",1250],["!unlock [GroupID] [setting]",1136],["!unlock [member|name|bots|leave]",750],["if matches[1] == 'unlock' then",490],["-- lock/unlock group name. bot automatically change group name when locked",374],["--lock/unlock group member. bot automatically kick new added user when locked",373],["--lock/unlock group photo. bot automatically keep group photo when locked",371],["type = \"unlock-recipe\"",371],["!unlock [grupo_id] [setting]",251],["!unlock [member|name|photo|bots]",222]]},{"word":"unlocked","context":[["return 'Group photo has been unlocked'",888],["return 'Group members has been unlocked'",887],["return 'Group name is already unlocked'",885],["return 'Group name has been unlocked'",881],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked member \")",789],["return 'Group flood has been unlocked'",757],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked name \")",520],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked flood \")",520],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked photo \")",520],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] unlocked bots \")",511]]},{"word":"unpack","context":[["local unpack = unpack",527],["local unpack = unpack",527],["local unpack = unpack or table.unpack",354],["local unpack = unpack or table.unpack",354],["local unpack = unpack or table.unpack",354],["local gradA, gradB = table.unpack(gradInput)",205],["local K, C, L = select(2, ...):unpack()",199],["setmetatable, pairs, ipairs, unpack, rawget, rawset,",194],["local R, L, P, G = unpack(select(2, ...)) --Import: Engine, Locales, ProfileDB, GlobalDB",176],["return unpack(ret)",176]]},{"word":"up","context":[["-- from the core when a player disconnects or the time limit is up, etc",567],["--atk up",232],["-- The AmmoEnt is the ammo entity that can be picked up when carrying this gun.",229],["up = {",139],["-- X Accepts traded Crystals to fill up the Rank bar to open new Missions.",136],["..'Is api.mathjs.org up?'",134],["-- Creates all events and sets up the entire event sequence chain",134],["io.stdout:write(\"\\nI give up...\\n\")",129],["local up = 0",129],["--Atk up",123]]},{"word":"update","context":[["function love.update(dt)",992],["function update()",767],["function update(me, dt)",738],["if update then",559],["-- print(\"bc update csid \"..csid..\" and option \"..option);",530],["mytester:assertlt(err,precision, 'error on weight [direct update] ')",474],["- func: update(deltatime)",449],["v:update(dt)",408],["function newobject:update(dt)",394],["update(self, dt)",367]]},{"word":"url","context":[["url = url,",615],["url = url,",615],["local file_path = download_to_file(url, false)",411],["return sendRequest(url)",384],["get_page(url)",354],["local jdat = json:decode(url)",324],["send_photo_from_url(receiver, url)",282],["local jstr, res = https.request(url)",224],["return url",208],["local b,c = http.request(url)",198]]},{"word":"usage","context":[["usage = {",3591],["-- @usage",3539],["usage()",525],["usage = \"Help list\",",332],["usage = \"chat with robot\",",269],["function usage()",199],["usage = \"send message to new member\",",176],["usage = \"\",",173],["usage = \"!version: Shows bot version\",",159],["worldedit.player_notify(name, \"invalid usage: \" .. param)",157]]},{"word":"use","context":[["-- DEPRECATED, use send_large_msg(destination, text)",2726],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1897],["**U can use both \"/\" and \"!\"",1358],["use the lib:",939],["*Only owner can use res,setowner,promote,demote and log commands",875],["*Only admins and sudo can use res, setowner, commands",768],["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",562],["use = false,",472],["» Only owner can use res,setowner,promote,demote and log commands",470]]},{"word":"useStructureFootprintOutline","context":[["useStructureFootprintOutline = 0,",9473],["useStructureFootprintOutline = 0",8713],["useStructureFootprintOutline = 1",28],["useStructureFootprintOutline = 1,",28]]},{"word":"used","context":[["-- The values below are the default values.  To be used for blue frog objects primarily",844],["savelog(msg.to.id, name_log..\" [\"..msg.from.id..\"] used /owner\")",769],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] used /id \")",718],["-- The number of rows and columns of images, will be used to compute",390],["[\"used\"] = \"1\";",369],["'(Reply)!info: Return info of replied user if used by reply.',",321],["shall not be used in advertising or otherwise to promote the sale, use or",314],["-- This is used later as the default terminal and editor to run.",302],["-- This file will describe the frames used to load an animation",270],["return {id=true, used=true}",255]]},{"word":"user","context":[["-- A simple config with basic plugins and ourselves as privileged user",2852],["for v,user in pairs(config.sudo_users) do",2776],["--vardump (user)",2739],["function on_user_update (user, what)",2738],["local user = redis:hgetall(uhash)",2629],["print(\"Allowed user: \" .. user)",2440],["print(\"Allowed user: \" .. user)",2440],["local user_id = \"user#id\"..result.peer_id",1675],["return user",1476],["local user = 'user#id'..msg.action.user.id",1463]]},{"word":"user_id","context":[["local user_id = matches[2]",3349],["local user_id = result.peer_id",1922],["local user_id = \"user#id\"..result.peer_id",1675],["local user_id = users[i]",1458],["local user_id = msg.from.id",1272],["local user_id = \"user#id\"..matches[2]",1216],["kick_user(user_id, msg.to.id)",1179],["kick_user(user_id, chat_id)",1109],["local user_info = get_msgs_user_chat(user_id, chat_id)",1059],["local uhash = 'user:'..user_id",1034]]},{"word":"user_info","context":[["local user_info = {}",1134],["table.insert(users_info, user_info)",1071],["local user_info = get_msgs_user_chat(user_id, chat_id)",1059],["return user_info",1039],["user_info(user_id, cb_user_info, {receiver = receiver, get_cmd = get_cmd})",845],["user_info.msgs = tonumber(redis:get(um_hash) or 0)",773],["user_info.name = user_print_name(user)..' ['..user_id..']'",564],["user_info = tonumber(redis:get(um_hash) or 0)",390],["local user_info",390],["local nmsg = user_info",387]]},{"word":"user_print_name","context":[["local name = user_print_name(msg.from)",6387],["local print_name = user_print_name(msg.from):gsub(\"‮\", \"\")",1896],["local name_log = user_print_name(msg.from)",1195],["user_info.name = user_print_name(user)..' ['..user_id..']'",564],["local print_name = user_print_name(cb_extra.msg.from):gsub(\"‮\", \"\")",272],["name = user_print_name(msg.from)",182],["local function user_print_name(user)",148],["local name1 = user_print_name(msg.from)",134],["function user_print_name(user)",94],["local name = user_print_name(result.from)",93]]},{"word":"username","context":[["local username = matches[2]",5894],["local username = string.gsub(matches[2], '@', '')",5217],["if result.username then",3524],["if result.from.username then",1906],["local username = username:gsub(\"@\",\"\")",1757],["local username = username:gsub(\"@\",\"\")",1757],["if v.username then",1642],["vusername = v.username",1466],["!res [username]",1400],["if msg.from.username then",1373]]},{"word":"users","context":[["-- If plugin is for privileged users only",2729],["for i = 1, #users do",1856],["local users = redis:smembers(hash)",1847],["local hash = 'chat:'..chat_id..':users'",1812],["local user_id = users[i]",1458],["-- Sort users by msgs number",929],["Only sudo users can run this command",927],["local text = 'users in this chat \\n'",651],["return 'Leaving users will not be banned'",604],["return 'Leaving users will be banned'",602]]},{"word":"using","context":[["return send_large_msg(\"channel#id\"..channel_id, \"Leave using kickme command\")",1056],["return \"Create a link using /newlink first !\"",560],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["savelog(msg.to.id, name..\" [\"..msg.from.id..\"] left using kickme \")-- Save to logs",332],["-- I suggest you to remap Mod4 to another key using xmodmap or other tools.",305],["-- Meta-build system using premake created and maintained by",295],["-- you wish and access them by using",270],["-- Image generated using PVRTexTool:",180],["-- using special animation files.",155],["return \"Create a link using /newlink first!\\n\\nOr if I am not creator use /setlink to set your link\"",145]]},{"word":"usr","context":[["#!/usr/bin/env lua",1567],["local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))",620],["#!/usr/bin/lua",566],["#!/usr/bin/env luajit",229],["#!/usr/local/bin/lua",225],["#! /usr/bin/env lua",208],["#!/usr/bin/env tarantool",161],["shared        = \"/usr/share/awesome\"",146],["shared    = \"/usr/share/local/awesome\"",146],["#!/usr/bin/env gt",116]]},{"word":"util","context":[["globalkeys = awful.util.table.join(globalkeys,",400],["globalkeys = awful.util.table.join(",398],["clientkeys = awful.util.table.join(",392],["clientbuttons = awful.util.table.join(",391],["local st = require \"util.stanza\";",375],["mytaglist.buttons = awful.util.table.join(",371],["root.buttons(awful.util.table.join(",370],["mytasklist.buttons = awful.util.table.join(",365],["awful.util.eval, nil,",361],["mylayoutbox[s]:buttons(awful.util.table.join(",357]]},{"word":"utils","context":[["require(\"./bot/utils\")",2686],["dofile(\"scripts/utils/npcHelper.lua\");",405],["local utils = require \"kong.tools.utils\"",310],["local utils = require \"kong.tools.utils\"",310],["assert.are.equal(2, utils.table_size(body))",267],["local utils = require('utils')",264],["local utils = require('utils')",264],["local utils = require 'pl.utils'",243],["local utils = require 'pl.utils'",243],["menubar.utils.terminal = terminal -- Set the terminal for applications that require it",223]]},{"word":"v","context":[["for k,v in pairs(result.members) do",6347],["return v",3136],["local member_id = v.id",2794],["for v,user in pairs(config.sudo_users) do",2776],["plugins[v] = t",2763],["for k, v in pairs(_config.enabled_plugins) do",2735],["local t = loadfile(\"plugins/\"..v..'.lua')()",2717],["print('\\27[31mError loading plugin '..v..'\\27[39m')",2716],["print(\"Loading plugin\", v)",2625],["for k,v in pairs(result) do",2010]]},{"word":"val","context":[["return val",1633],["if val then",675],["if val == nil then",410],["local val",277],["local val = 0",218],["if type(val) == \"table\" then",197],["if not val then",190],["if val ~= nil then",185],["local val = rawget(_base_0, name)",176],["local val = cv.argcheck(t, argRules)",175]]},{"word":"valid","context":[["print('\\27[36mNot valid: Encrypted chat\\27[39m')",2721],["print('\\27[36mNot valid: To id not provided\\27[39m')",2721],["print('\\27[36mNot valid: From id not provided\\27[39m')",2721],["print('\\27[36mNot valid: readed\\27[39m')",2721],["print('\\27[36mNot valid: old msg\\27[39m')",2718],["print('\\27[36mNot valid: Msg from our id\\27[39m')",2619],["print('\\27[36mNot valid: msg from us\\27[39m')",2617],["print('\\27[36mNot valid: Telegram message\\27[39m')",676],["local valid, err = validate_entity(values, schema)",222],["assert.False(valid)",214]]},{"word":"value","context":[["return value",4148],["-- @return bool#bool ret (return value: bool)",3689],["-- @return float#float ret (return value: float)",2682],["if not value then",2547],["if value then",2024],["!setflood [value]",1397],["!get [value]",1316],["-- @return int#int ret (return value: int)",1316],["type = \"value\"",1248],["Set [value] as flood sensitivity",1224]]},{"word":"values","context":[["-- Start and load values",2734],["-- The values below are the default values.  To be used for blue frog objects primarily",844],["-- The values below are the default values.  To be used for blue frog objects primarily",844],["local values = {}",532],["values = {",520],["--     Valid values: player, target, focus, pet.",346],["[\"values\"] = {",316],["{name='charoption', values={'V', 'F'}, default='V'},",240],["return values",236],["-- Matching SWEP.Slot values: 0      1       2     3      4      6       7        8",234]]},{"word":"var","context":[["var = true",2450],["return var",1436],["local var = false",1084],["function onCastSpell(cid, var)",913],["return doCombat(cid, combat, var)",817],["var int ret = 0;",528],["return combat:execute(creature, var)",454],["function onCastSpell(creature, var)",450],["var int v;",364],["var int a;",326]]},{"word":"vardump","context":[["--vardump (user)",2739],["--vardump (schat)",2733],["--vardump(msg)",2450],["--vardump(result)",1452],["-- vardump(msg)",990],["--vardump (chat)",916],["vardump(result)",585],["--vardump(extra)",569],["vardump(success)",388],["function vardump(value)",153]]},{"word":"vendor","context":[["\"object/mobile/vendor/human_female.iff\",",824],["\"object/mobile/vendor/bothan_female.iff\",",807],["\"object/mobile/vendor/sullustan_female.iff\",",804],["\"object/mobile/vendor/rodian_female.iff\",",803],["\"object/mobile/vendor/moncal_female.iff\",",798],["\"object/mobile/vendor/twilek_female.iff\",",797],["\"object/mobile/vendor/aqualish_female.iff\",",750],["\"object/mobile/vendor/human_male.iff\",",745],["\"object/mobile/vendor/zabrak_female.iff\",",743],["\"object/mobile/vendor/zabrak_male.iff\" },",732]]},{"word":"version","context":[["--this exception also makes it possible to release a modified version",29626],["later version.",2297],["\"version\",",711],["version = \"1.1\",",426],["version = nil,",245],["version=1.001,",216],["description = \"Shows bot version\",",214],["-- version.lua --",176],["usage = \"!version: Shows bot version\",",159],["usage = \"!version: Shows bot version\",",159]]},{"word":"versions","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["--to grant this special exception for their modified versions;",29624],["-- See table 3.7, page 93, in http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#G28070",78],["2. Altered source versions must be plainly marked as such, and must not be",77],["-- of the package is maintained even in compiled versions. It's also",37],["translate(\"In some versions cURL/libcurl in OpenWrt is compiled without proxy support.\")",33],["-- 2. Altered source versions must be plainly marked as such, and must not",32],["local versions = {}",30],["versions add more stuff. Therefore it is recommended to copy cItem objects using the",27],["-- versions are tables matching version strings to an array of servers.",20]]},{"word":"video","context":[["if matches[2] == 'video' then",501],["\"%[(video)%]\",",463],["elseif typ == 'video' then",131],["!mute [all|audio|gifs|photo|video]",129],["!unmute [all|audio|gifs|photo|video]",126],["!unmute [all|audio|gifs|photo|video|service]",105],["!mute [all|audio|gifs|photo|video|service]",101],["video = 'Videos',",98],["local is_video_caption = msg.media.caption and msg.media.caption:lower(\".mp4\",\"video\")",76],["vlc.msg.err( \"Couldn't process youtube video URL, please check for updates to this script\" )",76]]},{"word":"view","context":[["local group = self.view",991],["local sceneGroup = self.view",919],["return view",298],["view = self.view,",222],["view = self.view,",222],["-- \"createScene\" event is dispatched if scene's view does not exist",168],["-- \"destroyScene\" event is dispatched before view is unloaded, which can be",167],["-- Called when the scene's view does not exist:",148],["-- Called prior to the removal of scene's \"view\" (display group)",111],["local view = {}",102]]},{"word":"visible","context":[["visible = true,",8215],["local visible = self.visible",1457],["local visible = self.visible",1457],["if not visible then",1428],["visible = false,",161],["self:visible(false)",159],["self.visible = true",130],["if visible then",127],["if not self.visible then",123],["self:visible(true);",109]]},{"word":"void","context":[["-- ///// Returns: void\t\t//////",3147],["typedef void (",2321],["void",1035],["void main()",557],["input void OS_START;",532],["void main() {",289],["returns = \"(void)\",",199],["returns = \"void\",",169],["valuetype = \"void\",",169],["event void e;",164]]},{"word":"w","context":[["local f = io.open(filename, 'w')",2483],["return w",438],["[\"w\"] = 1920.0,",423],["local file = io.open(\"./groups/lists/\"..chat_id..\"stats.txt\", \"w\")",354],["\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},",287],["\"sourceSize\": {\"w\":100,\"h\":100},",287],["local file = io.open(\"./groups/lists/\"..result.id..\"memberlist.txt\", \"w\")",278],["local file = io.open(\"./groups/lists/supergroups/kicked/\"..cb_extra.receiver..\".txt\", \"w\")",274],["local file = io.open(\"./groups/lists/supergroups/\"..cb_extra.receiver..\".txt\", \"w\")",274],["local file = io.open(\"dialog_list.txt\", \"w\")",221]]},{"word":"walkability","context":[["-- The map grid to indicate walkability. The size of the grid is 4x the size of the tile layer tables",61],["-- The map grid to indicate walkability. 0 is walkable, 1 is not.",33],["tileset.walkability[3] = {}",25],["tileset.walkability[8] = {}",25],["tileset.walkability[12] = {}",25],["tileset.walkability[14] = {}",25],["tileset.walkability[13] = {}",25],["tileset.walkability[4] = {}",25],["tileset.walkability[1] = {}",25],["tileset.walkability[10] = {}",25]]},{"word":"warning","context":[["print(warning)",2728],["send_msg(receiver, warning, ok_cb, false)",2688],["local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'",2642],["\"/wd4244\", -- warning C4244: 'argument' : conversion from 'xxx' to 'xxx', possible loss of data",144],["log_level = \"warning\",",95],["\"/wd4127\", -- warning C4127: conditional expression is constant",91],["\"/wd4100\", -- warning C4100: 'xxx' : unreferenced formal parameter",91],["control.warning = wm:CreateControlFromVirtual(nil, control, \"ZO_Options_WarningIcon\")",79],["\"/wd4456\", -- warning C4456: declaration of 'xxx' hides previous local declaration",78],["-- warning The physics body doesn't support this.",67]]},{"word":"was","context":[["-- Before bot was started",2726],["-- Returns true if user was warned and false if not warned (is allowed)",134],["which was passed from the server.",119],["-- Checks if bot was disabled on specific chat",103],["-- The -pc or -pcontainer options was supplied on the cmd line",91],["-- This file was automatically generated by ProjectGenerator",91],["-- Return end if user was kicked before",80],["-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,",78],["-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string",77],["-- was reached.",77]]},{"word":"we","context":[["-- Be careful: we use keycodes to make it works on any keyboard layout.",363],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["-- Make sure we don't go into an endless error loop",325],["-- Global vars/functions that we don't upvalue since they might get hooked, or upgraded",280],["-- Grab environment we need",254],["-- Compute the maximum number of digit we need, limited to 9",122],["-- since we're here, we're working",110],["-- since we're here, we're working",110],["ITEM.RestrictedSelling\t \t= false; // Used for drugs and the like. So we can't sell it.",103],["-- If there's no physics object then we can't constraint it!",100]]},{"word":"weapon","context":[["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["clientDataFile = \"clientdata/weapon/client_melee_lightsaber_basic.cdf\",",374],["weapon:register()",292],["weapon:wieldUnproperly(true)",251],["-- Kind specifies the category this weapon is in. Players can only carry one of",234],["-- If NoSights is true, the weapon won't have ironsights",234],["-- receive this weapon as soon as the round starts. In this case, none.",209]]},{"word":"weapons","context":[["weapons = {},",5717],["weapons                = {",605],["weapons = {\"pirate_weapons_light\"},",563],["weapons             = {",537],["weapons = {\"pirate_weapons_medium\"},",439],["weapons = {\"pirate_weapons_heavy\"},",391],["weapons = {\"rebel_weapons_medium\"},",347],["weapons = {\"creature_spit_small_yellow\"},",322],["weapons = {",279],["weapons                       = {",270]]},{"word":"wearables","context":[["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hair.iff\",",612],["\"object/tangible/wearables/shoes/shoes_s01.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s03.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s02.iff\"\t-- Shoes",513],["\"object/tangible/wearables/shoes/shoes_s07.iff\"\t-- Shoes",513],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_both.iff\",",472],["arrangementDescriptorFilename = \"abstract/slot/arrangement/wearables/hold_r.iff\",",190],["{\"object/tangible/wearables/shirt/shirt_s38.iff\",\t-- Shirt",135],["{\"object/tangible/wearables/shirt/shirt_s05.iff\",\t-- Shirt",135],["{\"object/tangible/wearables/shirt/shirt_s42.iff\",\t-- Shirt",135]]},{"word":"weather","context":[["\"weather\",",588],["--add on bonuses (staff/day/weather/jas/mab/etc all go in this function)",512],["require(\"scripts/globals/weather\");",137],["local city = weather.name",122],["elseif weather.weather[1].main == 'Rain' then",122],["elseif weather.weather[1].main == 'Thunderstorm' then",122],["elseif weather.weather[1].main == 'Thunderstorm' then",122],["elseif weather.weather[1].main == 'Clouds' then",122],["local country = weather.sys.country",122],["elseif weather.weather[1].main == 'Clouds' then",122]]},{"word":"weight","context":[["local err = jac.testJacobianParameters(module, input, module.weight, module.gradWeight)",1261],["for t,err in pairs(jac.testAllUpdate(module, input, 'weight', 'gradWeight')) do",1209],["local err = jac.testJacobianUpdateParameters(module, input, module.weight)",1126],["'error on weight [%s]', t))",1119],["mytester:assertlt(err,precision, 'error on weight ')",719],["mytester:assertlt(err , precision, 'error on weight ')",513],["mytester:assertlt(err,precision, 'error on weight [direct update] ')",474],["gconv.weight = sconv.weight:cuda()",366],["gconv.weight = sconv.weight:cuda()",366],["mytester:assertlt(err , precision, 'error on weight [direct update] ')",352]]},{"word":"what","context":[["function on_secret_chat_update (schat, what)",2738],["function on_user_update (user, what)",2738],["function on_chat_update (chat, what)",2738],["-- Make sure that the player knows exactly where to go and what to do",305],["if not pos then return unterminated (str, what, startpos) end",288],["-- Function name explains what it does.",139],["-- what it does don't touch it.",111],["if info.what == \"C\" then",111],["-- Tell them what they earned.",101],["-- Construct what we want",95]]},{"word":"when","context":[["--provided that you include the source code of that other code when",29626],["-- This function is called when tg receive a msg",2732],["-- from the core when a player disconnects or the time limit is up, etc",567],["- desc: called when the player presses a mouse button",404],["-- lock/unlock group name. bot automatically change group name when locked",374],["--lock/unlock group member. bot automatically kick new added user when locked",373],["--lock/unlock group photo. bot automatically keep group photo when locked",371],["-- Signal function to execute when a new client appears.",367],["- desc: called when the player releases a mouse button",344],["-- overriding the default one when",264]]},{"word":"which","context":[["--which carries forward this exception.",7399],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["-- Insert the quest status which is reached at the end of the quest",308],["-- Define a tag table which hold all screen tags.",280],["-- InLoadoutFor is a table of ROLE_* entries that specifies which roles should",210],["-- \"destroyScene\" event is dispatched before view is unloaded, which can be",167],["which was passed from the server.",119],["-- Take the frame time step, which is stored as a float",107],["--- The null function allows one to specify a null value in an associative array (which is otherwise",94]]},{"word":"while","context":[["while true do",15548],["while tc do",1074],["while 1 do",1021],["while b ~= 0 do",549],["while (true) do",495],["while s do",369],["while(true) do",238],["while i <= text_len do",232],["while self[i] do",190],["while line do",178]]},{"word":"who","context":[["--Note that people who make modified versions of Engine3 are not obligated",29625],["!who",2993],["kick_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 3 times",358],["ban_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 7 times",357],["if matches[1] == \"who\" and not matches[2] and is_momod(msg) then",206],["on_die = function(self, who)",185],["if matches[1] == 'who' and is_momod(msg) then",161],["killer[Monster.id]=Enemy.id; --Keeps track who attacked the monster last",156],["use = function(self, who)",149],["on_wear = function(self, who)",133]]},{"word":"whole","context":[["--cover the whole combination.",29626],["-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.",77],["..'...and more, below you can find the \"all commands\" button to get the whole list!\\n'",57],["-- Settings in this section apply to the whole server and are the default settings",36],["--the whole tree fits in the frame",27],["-- containing the whole environment is returned otherwise this function returns",25],["-- This function is called once for the whole document. Parameters:",22],["-- It needs to be a whole number between a certain range",21],["-- Turn compilation off for the whole module. LuaJIT would do that anyway.",20],["--this is a separate function to allow group info to be regenerated without reloading the whole tooltip",17]]},{"word":"widget","context":[["function widget:GetInfo()",954],["function widget:Initialize()",795],["function widget:Shutdown()",511],["-- Create a taglist widget",381],["-- Create a tasklist widget",375],["mypromptbox[mouse.screen].widget,",374],["mylayoutbox[s] = awful.widget.layoutbox(s)",367],["local InputContainer = require(\"ui/widget/container/inputcontainer\")",350],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338],["self:emit_signal(\"widget::layout_changed\")",325]]},{"word":"width","context":[["width = 0,",5282],["width = \"full\",",1294],["local width = object:GetWidth()",1080],["width = 32,",969],["width = 16,",848],["skin.OutlinedRectangle(x, y, width, height)",816],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["width = 70,",591],["width = 80,",479],["width = 100,",464]]},{"word":"will","context":[["--It will send login codes to this chat",1817],["This command will send text to [group_id]",1180],["will return group ban list",897],["will return group logs",782],["return 'Leaving users will not be banned'",604],["return 'Leaving users will be banned'",602],["-- The number of rows and columns of images, will be used to compute",390],["-- All clients will match this rule.",385],["-- This will also un-minimize",347],["-- Create an imagebox widget which will contains an icon indicating which layout we're using.",338]]},{"word":"window","context":[["local win = hs.window.focusedWindow()",298],["-- This sets the icon shown for the weapon in the DNA sampler, search window,",195],["parent = window,",191],["window:show_all()",158],["t.modules.window = true            -- Enable the window module (boolean)",134],["t.modules.window = true            -- Enable the window module (boolean)",134],["return window",129],["---  * The `hs.window` object",126],["t.window.borderless = false        -- Remove all border visuals from the window (boolean)",125],["t.window.borderless = false        -- Remove all border visuals from the window (boolean)",125]]},{"word":"with","context":[["--Linking Engine3 statically or dynamically with other modules",29626],["with",4058],["-- A simple config with basic plugins and ourselves as privileged user",2852],["-- Only plugins with cron function",2729],["if banned or is_gbanned(user_id) then -- Check it with redis",973],["class Tx with",732],["class T with",656],["-- Will stack with Sneak Attack.",631],["-- Returns a table with `name` and `msgs`",490],["npcHandler:say('Well, can I help you with something else?', cid)",330]]},{"word":"work","context":[["--is making a combined work based on Engine3.",29626],["self.Entity:PhysicsInit( SOLID_VPHYSICS )      -- Make us work with physics,",224],["-- localization stuff, translators would work here",151],["work = {",120],["if ( ltstate == Action.abort ) then -- work interrupted",114],["created freely and it has been thoroughly tested to work for",95],["the developers, but NO GUARANTEE is made it will work for you",95],["-- It should not work",90],["-- CHECKME: this seems to work without a key??",90],["-- It should work",84]]},{"word":"world","context":[["world            = [[All Worlds]],",1065],["world = \"All Worlds\",",525],["world:new_immovable_type{",183],["world:changeItem(SourceItem);",133],["world:gfx(41, User.pos)",128],["world:makeSound(13, User.pos)",108],["-- Movement speed as world units per second",105],["world:changeItem(SourceItem)",81],["world:update(dt)",73],["return world",71]]},{"word":"write","context":[["f:write(s)",2523],["file:write(text)",2464],["file:write(message)",674],["write(' ')",613],["io.write(\"\\n\")",584],["out:write(\"\\n\")",558],["file:write(json:encode_pretty(result))",438],["file:write(\"\\n\")",365],["io.write(\".\")",320],["io.write('\\n')",281]]},{"word":"x","context":[["x = 0,",2550],["local x = object:GetX()",1222],["return x",1170],["{ x = 0, y = 0 },",887],["skin.OutlinedRectangle(x, y, width, height)",816],["if not x or not y then return nil end",751],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["self.x = x",686],["self.x = x",686],["local x, y = self:getTarget(tg)",641]]},{"word":"xxx","context":[["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["alternateWeapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",1759],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["weapon = \"object/weapon/creature/shared_creature_default_weapon.iff\", -- File path to weapon -> object\\xxx\\xxx\\xx",1396],["\"/wd4244\", -- warning C4244: 'argument' : conversion from 'xxx' to 'xxx', possible loss of data",144],["\"/wd4244\", -- warning C4244: 'argument' : conversion from 'xxx' to 'xxx', possible loss of data",144],["weapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",117],["weapon = \"\", -- File path to weapon -> object\\xxx\\xxx\\xx",117],["\"/wd4100\", -- warning C4100: 'xxx' : unreferenced formal parameter",91],["\"/wd4456\", -- warning C4456: declaration of 'xxx' hides previous local declaration",78]]},{"word":"y","context":[["y = 0,",1887],["local y = object:GetY()",1222],["{ x = 0, y = 0 },",887],["skin.OutlinedRectangle(x, y, width, height)",816],["pos.y = pos.y + 1",797],["pos.y = pos.y + 1",797],["if not x or not y then return nil end",751],["love.graphics.rectangle(\"fill\", x, y, width, height)",711],["self.y = y",657],["self.y = y",657]]},{"word":"yes","context":[["if is_muted(chat_id, msg_type..': yes') then",2389],["if not is_muted(chat_id, msg_type..': yes') then",2386],["lock_name = 'yes',",1869],["if group_photo_lock == 'yes' then",1702],["if group_member_lock == 'yes' then",1695],["if group_name_lock == 'yes' then",1686],["if strict == \"yes\" or to_chat then",1528],["if group_flood_lock == 'yes' then",1151],["data[tostring(target)]['settings']['lock_member'] = 'yes'",1143],["data[tostring(target)]['settings']['flood'] = 'yes'",1142]]},{"word":"you","context":[["--provided that you include the source code of that other code when",29626],["return \"Are you trying to troll me?\"",2724],["player:startEvent(csid,16,0,0,0,1,0,0,255); -- you have brought us supplies !",568],["player:showText(npc, CONQUEST - 1); -- \"Hmm... These supplies you have brought us are too old to be of any use.\"",568],["return send_large_msg(receiver, 'Group is added and you have been promoted as the owner ')",381],["-- return \"Are you trying to troll me?\"",365],["npcHandler:say('Well, can I help you with something else?', cid)",330],["'!info: Return your info and the chat info if you are in one.',",318],["-- If you do not like this or do not have such a key,",306],["-- I suggest you to remap Mod4 to another key using xmodmap or other tools.",305]]},{"word":"your","context":[["create/revoke your group link",905],["player:messageSpecial(CONQUEST + 95); -- \"You do not have enough gil to set your home point here.\"",568],["return \"no owner,ask admins in support groups to set owner for your group\"",472],["-- This should map on the top row of your keyboard, usually 1 to 9.",376],["description = 'Know your information or the info of a chat members.',",358],["npcHandler:say('There is not enough gold on your account.', cid)",332],["'!info: Return your info and the chat info if you are in one.',",318],["return send_large_msg(receiver, 'Welcome to your new realm !')",299],["return \"You can't ban your self !\"",281],["-- beautiful.variable in your rc.lua",271]]},{"word":"z","context":[["z:assemble(\"SCF\")",490],["return z",265],["pos.z = pos.z - 1",257],["pos.z = pos.z - 1",257],["pos.z = pos.z + 1",248],["pos.z = pos.z + 1",248],["local x,y,z = spGetUnitPosition(unitID)",243],["spread = {x = 200, y = 200, z = 200},",222],["local x, y, z = getElementPosition(thePlayer)",189],["local x, y, z = spGetUnitPosition(unitID)",185]]},{"word":"zero","context":[["local input = torch.Tensor(ini,inj,ink):zero()",486],["local input = torch.Tensor(ink, inj, ini):zero()",464],["local res2 = res1:clone():zero()",408],["local input = torch.Tensor(from, inj, ini):zero()",337],["local err = res1:clone():zero()",336],["input = torch.Tensor(batch,from,inj,ini):zero()",278],["local input = torch.Tensor(ini):zero()",269],["input:zero()",227],["confusion:zero()",200],["local input = torch.Tensor(from, int, inj, ini):zero()",140]]},{"word":"zone","context":[["function onInitialize(zone)",2570],["function onConquestUpdate(zone, updatetype)",1171],["local players = zone:getPlayers();",1151],["conquestUpdate(zone, player, updatetype, CONQUEST_BASE);",1150],["require(\"scripts/globals/zone\");",588],["-- @zone 230",342],["-- @zone 80",283],["local loot = chestLoot(zone,npc);",276],["local zone = player:getZoneID();",270],["-- @zone 245",227]]},{"word":"zones","context":[["package.loaded[\"scripts/zones/Southern_San_dOria/TextIDs\"] = nil;",988],["require(\"scripts/zones/Southern_San_dOria/TextIDs\");",948],["package.loaded[\"scripts/zones/Northern_San_dOria/TextIDs\"] = nil;",880],["require(\"scripts/zones/Northern_San_dOria/TextIDs\");",832],["package.loaded[\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\"] = nil;",712],["require(\"scripts/zones/Aht_Urhgan_Whitegate/TextIDs\");",684],["package.loaded[\"scripts/zones/Lower_Jeuno/TextIDs\"] = nil;",653],["require(\"scripts/zones/Lower_Jeuno/TextIDs\");",608],["package.loaded[\"scripts/zones/Port_San_dOria/TextIDs\"] = nil;",583],["package.loaded[\"scripts/zones/Port_Bastok/TextIDs\"] = nil;",575]]},{"word":"~","context":[["if member_id ~= our_id then",3389],["if ptr ~= nil then",3078],["if type(msg.reply_id) ~= \"nil\" then",2748],["if plugin.cron ~= nil then",2729],["if (object ~= nil) then Map:AddGroundObject(object) end;",1274],["if type(msg.reply_id)~=\"nil\" then",1209],["if type(msg.reply_id)~=\"nil\" and is_momod(msg) then",1145],["if state ~= selfstate then",1111],["if res ~= 200 then",698],["if group_name_set ~= tostring(msg.to.print_name) then",683]]},{"word":"بدخواه","context":[["بدخواه نگاییدم (fuck) (fuck) -○",13310],["کس ننه بدخواه شهاب تی اف بی",1995]]},{"word":"نگاییدم","context":[["بدخواه نگاییدم (fuck) (fuck) -○",13310],["\"نگاییدم\",",29],["return \"چس اسپمر نگاییدم\"",14],["return \"چچچ نگاییدم\"",14]]},{"word":"گروه","context":[["text = text..'مقام : مدیر کل گروه (Owner) \\n\\n'",723],["text = text..'مقام : مدیر گروه (Moderator) \\n\\n'",721],["قوانین گروه",241],["text = text..'نام گروه : '..msg.to.title..'\\n'",205],["درباره گروه",194],["text = text..'ایدی گروه : '..msg.to.id",191],["لیست مدیران گروه",190],["خروج از گروه",184],["در مورد نقش گروه بگیرید",183],["در مورد  آن گروه توضیحاتی را بنویسید (ای دی گروه را بدهید )",180]]},{"word":"▀▄","context":[["▀▄ ▄▀                                      ▀▄ ▄▀",1319],["▀▄ ▄▀                                      ▀▄ ▄▀",1319],["▀▄ ▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀",1104],["▀▄ ▄▀                                 ▀▄ ▄▀",488],["▀▄ ▄▀                                 ▀▄ ▄▀",488],["▀▄ ▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▀▄▄▀▀▄▄▀▀▄▄▀",152],["▀▄ ▄▀                                       ▀▄ ▄▀",117],["▀▄ ▄▀                                       ▀▄ ▄▀",117],["▀▄ ▄▀    BY SAJJAD NOORI                   ▀▄ ▄▀",116],["▀▄ ▄▀ JUST WRITED BY SAJJAD NOORI          ▀▄ ▄▀",116]]},{"word":"▄▀","context":[["▀▄ ▄▀                                      ▀▄ ▄▀",1319],["▀▄ ▄▀                                      ▀▄ ▄▀",1319],["▀▄ ▄▀                                 ▀▄ ▄▀",488],["▀▄ ▄▀                                 ▀▄ ▄▀",488],["▀▄ ▄▀                                       ▀▄ ▄▀",117],["▀▄ ▄▀                                       ▀▄ ▄▀",117],["▀▄ ▄▀ JUST WRITED BY SAJJAD NOORI          ▀▄ ▄▀",116],["▀▄ ▄▀ JUST WRITED BY SAJJAD NOORI          ▀▄ ▄▀",116],["▀▄ ▄▀    BY SAJJAD NOORI                   ▀▄ ▄▀",116],["▀▄ ▄▀    BY SAJJAD NOORI                   ▀▄ ▄▀",116]]},{"word":"○","context":[["بدخواه نگاییدم (fuck) (fuck) -○",13310],["local lang, title, selected = \"unknown\", \"\", \"○\"",16]]},{"word":"⚠️OffLiNeTeam⚠️","context":[["#by ⚠️OffLiNeTeam⚠️",42236]]},{"word":"🔹","context":[["🔹 1984 is attacking🔸 ...",8225],["2. GroupManager :🔹",55],["sLangD = '🔹'",28],["sKickmeD = '🔹'",27],["sGifD = '🔹'",27],["sPhotoD = '🔹'",27],["sSPhotoD = '🔹'",27],["sLinkD = '🔹'",27],["sBotsD = '🔹'",27],["sSpamD = '🔹'",27]]}]