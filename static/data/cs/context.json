[{"word":"0f","context":[["return 0f;",2219],["return 0.0f;",2169],["0.0f,",991],["retVal.a = 1.0f;",846],["return 1.0f;",727],["CastRange = 0f,",724],["[Range(0f, 1f)]",453],["[System.ComponentModel.DefaultValueAttribute(0f)]",378],["Delay = 0f,",363],["yield return new WaitForSeconds(1.0f);",354]]},{"word":"0x00","context":[["0x00 ,",13636],["0x00,",7662],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940],["0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",4940]]},{"word":"A","context":[["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["class A",10839],["/// A response object containing the response body and response headers.",9294],["/// A standard service response including an HTTP status code and",5861],["public class A",3924],["ShareX - A program that allows you to take screenshots and share any file type",3917],["///<para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:",3380],["/// <param name=\"state\">A user-defined object that will be passed to the callback delegate.</param>",3070],["/// A <see cref=\"System.String\"/> that represents this instance.",3026]]},{"word":"API","context":[["/// <exception cref=\"ININ.PureCloudApi.Client.ApiException\">Thrown when fails to make API call</exception>",4568],["// Web API routes",3304],["// Web API configuration and services",3058],["/// <exception cref=\"ApiException\">Thrown when a general API error occurs.</exception>",2118],["/// <param name=\"options\">Options for changing the API response</param>",2016],["/// <exception cref=\"Infoplus.Client.ApiException\">Thrown when fails to make API call</exception>",1984],["/// <returns>RegisterOptions for fluent API</returns>",1646],["/// <exception cref=\"HostMe.Sdk.Client.ApiException\">Thrown when fails to make API call</exception>",1528],["/// A custom <see cref=\"IDocumentationProvider\"/> that reads the API documentation from an XML documentation file.",1420],["/// The model that represents an API displayed on the help page.",1416]]},{"word":"AccessFlags","context":[["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 1)]",16039],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 0)]",6632],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"describeContents\", \"()I\", AccessFlags = 1)]",2578],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["[Dot42.DexImport(\"hashCode\", \"()I\", AccessFlags = 1)]",2203],["[Dot42.DexImport(\"CREATOR\", \"Landroid/os/Parcelable$Creator;\", AccessFlags = 25)]",2188],["[Dot42.DexImport(\"close\", \"()V\", AccessFlags = 1)]",1777]]},{"word":"Account","context":[["return RedirectToAction(\"ResetPasswordConfirmation\", \"Account\");",3307],["// POST: /Account/Register",3283],["// GET: /Account/Register",3260],["// POST: /Account/Login",3207],["// GET: /Account/Login",3200],["// POST: /Account/LogOff",3155],["// POST: /Account/ExternalLogin",3016],["// GET: /Account/ExternalLoginCallback",3014],["// POST: /Account/ExternalLoginConfirmation",2997],["// GET: /Account/ExternalLoginFailure",2663]]},{"word":"Act","context":[["// Act",104446],["//Act",17537],["// Act & Assert",5164],["// Act.",2889],["// Act and Assert",1210],["#region Act",1013],["//// Act",982],["// Act and assert",928],["#endregion Act",904],["// Act / Assert",783]]},{"word":"Action","context":[["public global::System.Data.DataRowAction Action {",2495],["ViewBag.ReturnUrl = Url.Action(\"Manage\");",2157],["return new ChallengeResult(provider, Url.Action(\"ExternalLoginCallback\", \"Account\", new { ReturnUrl = returnUrl }));",2028],["// Action",1603],["public string Action { get; set; }",1377],["// uScript Action Node",1319],["switch (e.Action)",1222],["Action act = () =>",1207],["Action = action;",1115],["///   ViewBag.ReturnUrl = Url.Action(\"Foo\"); // OK",1066]]},{"word":"ActionResult","context":[["public ActionResult Index()",20838],["public ActionResult Create()",4328],["public ActionResult About()",3420],["public ActionResult Register()",3294],["public ActionResult LogOff()",3206],["public ActionResult Contact()",2922],["private ActionResult RedirectToLocal(string returnUrl)",2894],["public ActionResult Login(string returnUrl)",2879],["public ActionResult ExternalLogin(string provider, string returnUrl)",2658],["public ActionResult ExternalLoginFailure()",2653]]},{"word":"Add","context":[["RequestParameters.Add(",31112],["Spells.Add(",16819],["this.Controls.Add(this.label1);",16297],["tracingParameters.Add(\"cancellationToken\", cancellationToken);",13079],["// Add the debug information",11209],["this.Controls.Add(this.label2);",10670],["filters.Add(new HandleErrorAttribute());",8228],["this.Controls.Add(this.label3);",7223],["bundles.Add(new ScriptBundle(\"~/bundles/modernizr\").Include(",6562],["bundles.Add(new ScriptBundle(\"~/bundles/jquery\").Include(",6276]]},{"word":"Advanced","context":[["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]",24739],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]",4587],["[EditorBrowsable(EditorBrowsableState.Advanced)]",4144],["Developed with the sponsorship of the Defense Advanced Research Projects",881],["[EditorBrowsable (EditorBrowsableState.Advanced)]",837],["[Category(\"Advanced\")]",478],["[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]",452],["//[EditorBrowsable(EditorBrowsableState.Advanced)]",372],["/// <remarks>Does NOT Support Advanced Operations such as SubSelects.  See GetPaged for that functionality.</remarks>",368]]},{"word":"Amazon","context":[["using Amazon.Runtime;",19112],["using Amazon.Runtime.Internal;",16088],["using Amazon.Runtime.Internal.Transform;",9518],["using Amazon.Runtime.Internal.Util;",7619],["namespace Amazon.EC2.Model",2187],["using Amazon.EC2.Model;",1586],["namespace Amazon.EC2.Model.Internal.MarshallTransformations",1442],["/// <exception cref=\"Amazon.IdentityManagement.Model.ServiceFailureException\">",1120],["/// <exception cref=\"Amazon.IdentityManagement.Model.NoSuchEntityException\">",872],["using Amazon.DynamoDBv2.Model;",629]]},{"word":"An","context":[["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],[": message == ManageMessageId.Error ? \"An error has occurred.\"",4066],["/// An I/O error occurred.",3577],["/// <returns>An <see cref=\"ICancellableAsyncResult\"/> that references the asynchronous operation.</returns>",2993],["/// <param name=\"formatProvider\">An IFormatProvider that supplies culture-specific formatting information.</param>",2206],["// module.  An independent module is a module which is not derived from",2107],["/// <param name=\"other\">An object to compare with this object.</param>",2005],["// An unhandled exception has occurred; break into the debugger",1925],["/// <exception cref=\"BadImageFormatException\">An exception from metadata reader.</exception>",1894]]},{"word":"Android","context":[["global::Android.Runtime.ResourceIdManager.UpdateIdValues();",25354],["using Android.App;",11947],["using Android.OS;",8176],["using Android.Views;",7878],["using Android.Widget;",7829],["using Android.Content;",7557],["using Android.Runtime;",6116],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Xamarin.Android.Build.Tasks\", \"1.0.0.0\")]",3288],["using Android.Content.PM;",2253],["using Android.Graphics;",1912]]},{"word":"Any","context":[["// Any changes made will be lost if regenerated.",2360],["// Any modifications to this file will be lost upon recompilation of the source ASN.1.",1152],["if(!_dirtyColumns.Any(x=>x.Name==col.Name) && _isLoaded){",1096],["/// Populates the page with content passed during navigation.  Any saved state is also",961],["/// later completes.  Any output arguments can then be retrieved by calling",889],["/// <exception cref=\"NotSupportedException\">Any access</exception>",883],["public System.Xml.XmlElement[] Any {",762],["F. Point of Contact: Any Recipient contact with Government Agency is to be directed to the designated",631],["Any,",559],["public System.Xml.XmlElement[] Any",514]]},{"word":"Apis","context":[["private readonly Google.Apis.Services.IClientService service;",3132],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["\"pageToken\", new Google.Apis.Discovery.Parameter",1561],["[Google.Apis.Util.RequestParameterAttribute(\"maxResults\", Google.Apis.Util.RequestParameterType.Query)]",1506],["[Google.Apis.Util.RequestParameterAttribute(\"maxResults\", Google.Apis.Util.RequestParameterType.Query)]",1506]]},{"word":"App","context":[["using Android.App;",11947],["public partial class App : Application",11069],["public App()",10835],["/// Interaction logic for App.xaml",6810],["sealed partial class App : Application",4147],["LoadApplication(new App());",1789],["public sealed partial class App : Application",1574],["public partial class App : System.Windows.Application {",1396],["/// App",1266],["public class App : Application",1266]]},{"word":"Append","context":[["sb.Append(\")\");",4950],["sb.Append(\", \");",3976],["sql.Append(\"OFFSET @0\", offset);",3527],["sql.Append(\"LIMIT @0\", 10);",3204],["sb.Append(c);",3017],["sb.Append(\"}\\n\");",2895],["sb.Append(\" \");",2626],["if(!__first) { __sb.Append(\", \"); }",2504],["sb.Append(Environment.NewLine);",1948],["sb.Append(\",\");",1920]]},{"word":"AppendLine","context":[["sb.AppendLine();",18638],["sb.AppendLine(\"\t\t}\");",2972],["sb.AppendLine(\"\t\t{\");",2955],["status.AppendLine();",2905],["helpMessage.AppendLine();",2464],["builder.AppendLine();",2400],["sb.AppendLine(\"\t\t/// </summary>\");",2190],["sb.AppendLine(\"\t\t/// <summary>\");",2182],["Builder.AppendLine();",1288],["sb.AppendLine(\"\t\t\t{\");",1251]]},{"word":"Application","context":[["Application.EnableVisualStyles();",17577],["Application.SetCompatibleTextRenderingDefault(false);",16917],["public partial class App : Application",11069],["Application.DoEvents();",7939],["Application.Exit();",6160],["System.Windows.Application.LoadComponent(this, resourceLocater);",6073],["/// Provides application-specific behavior to supplement the default Application class.",5304],["/// Invoked when application execution is being suspended.  Application state is saved",5198],["Application.Run(new Form1());",5150],["sealed partial class App : Application",4147]]},{"word":"AreEqual","context":[["Assert.AreEqual(expected, actual);",17782],["Assert.AreEqual(",11621],["StringAssert.AreEqual(@\"{",4097],["AreEqual(",3289],["Assert.AreEqual(@\"{",3250],["Assert.AreEqual(expected, result);",3096],["Assert.AreEqual(JsonToken.PropertyName, reader.TokenType);",2847],["Assert.AreEqual(JsonToken.StartObject, reader.TokenType);",1993],["Assert.AreEqual (string.Format (CultureInfo.InvariantCulture,",1956],["Assert.AreEqual(JsonToken.String, reader.TokenType);",1946]]},{"word":"ArgumentException","context":[["throw new ArgumentException();",11102],["throw new ArgumentException(",10154],["catch (ArgumentException)",9186],["[ExpectedException(typeof(ArgumentException))]",9012],["/// <exception cref=\"ArgumentException\">",8050],["/// <exception cref=\"System.ArgumentException\">",4652],["[ExpectedException (typeof (ArgumentException))]",3615],["catch (ArgumentException ex)",3292],["catch (ArgumentException e)",2680],["Assert.Throws<ArgumentException>(() =>",2462]]},{"word":"ArgumentNullException","context":[["/// <exception cref=\"ArgumentNullException\">",17722],["[ExpectedException(typeof(ArgumentNullException))]",11342],["/// <exception cref=\"System.ArgumentNullException\">",10972],["throw new ArgumentNullException(\"value\");",9295],["throw new ArgumentNullException();",7700],["throw new ArgumentNullException(\"source\");",6437],["/// <exception cref=\"T:System.ArgumentNullException\">",6222],["throw new ArgumentNullException(\"name\");",5514],["throw new ArgumentNullException(\"type\");",4971],["throw new ArgumentNullException(\"context\");",4940]]},{"word":"ArgumentOutOfRangeException","context":[["throw new ArgumentOutOfRangeException();",11241],["/// <exception cref=\"ArgumentOutOfRangeException\">",4785],["throw new ArgumentOutOfRangeException(\"value\");",3753],["throw new ArgumentOutOfRangeException(",3516],["throw new ArgumentOutOfRangeException(\"index\");",3330],["/// <exception cref=\"System.ArgumentOutOfRangeException\">",3185],["/// <exception cref=\"ArgumentOutOfRangeException\">No match was found</exception>",3102],["throw new ArgumentOutOfRangeException(\"count\");",2629],["catch (ArgumentOutOfRangeException)",2601],["[ExpectedException(typeof(ArgumentOutOfRangeException))]",2509]]},{"word":"Arrange","context":[["// Arrange",106272],["//Arrange",18968],["// Arrange.",3156],["#region Arrange",1228],["#endregion Arrange",1062],["//// Arrange",907],["//-- Arrange",636],["Arrange();",421],["// Arrange & Act",388],["//    // Arrange",265]]},{"word":"Array","context":[["void ICollection.CopyTo(Array array, int index)",1528],["Array result = Array.CreateInstance(type, size);",1419],["Array result = Array.CreateInstance(type, size);",1419],["Array possibleValues = Enum.GetValues(enumType);",1418],["public void CopyTo(Array array, int index)",1364],["Array.Empty<Type>()",1079],["if ((this.OwnerContext.SerializationMethod == MsgPack.Serialization.SerializationMethod.Array)) {",1068],["/// <param name=\"args\">Array of objects to be used in formatting the message</param>",932],["Array.Reverse(bytes);",793],["Array,",684]]},{"word":"AspNet","context":[["using Microsoft.AspNet.Identity;",25085],["using Microsoft.AspNet.Identity.Owin;",13703],["using Microsoft.AspNet.Identity.EntityFramework;",12499],["using Microsoft.AspNet.Mvc;",4092],["using Microsoft.AspNet.SignalR;",2061],["﻿using Microsoft.AspNet.Identity;",2011],["using Microsoft.AspNet.Builder;",1867],["using Microsoft.AspNet.Http;",1757],["using Microsoft.AspNet.Hosting;",1532],["// Uncomment the following to provide samples for PageResult<T>. Must also add the Microsoft.AspNet.WebApi.OData",1075]]},{"word":"Assembly","context":[["[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]",6232],["// Versionsinformationen für eine Assembly bestehen aus den folgenden vier Werten:",3538],["// Allgemeine Informationen über eine Assembly werden über die folgenden",3229],["// Durch Festlegen von ComVisible auf \"false\" werden die Typen in dieser Assembly unsichtbar",3199],["// Assembly: Wb.Lpw.Protocol, Version=2.13.83.0, Culture=neutral, PublicKeyToken=null",2526],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll",2483],["// Assembly: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",2483],["// Assembly: System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a",2167],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Web.dll",2167],["// Assembly: System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",1682]]},{"word":"AssemblyCompany","context":[["[assembly: AssemblyCompany(\"\")]",214722],["[assembly: AssemblyCompany(\"Microsoft\")]",21290],["[assembly: AssemblyCompany (\"\")]",3815],["[assembly: AssemblyCompany(\"Hewlett-Packard\")]",1145],["[assembly: AssemblyCompany(\"Microsoft Corporation\")]",1088],["[assembly: AssemblyCompany( \"\" )]",930],["public string AssemblyCompany",864],["[assembly: AssemblyCompany(\"ZeroC, Inc.\")]",853],["[assembly: AssemblyCompany(\"Hewlett-Packard Company\")]",819],["[assembly: AssemblyCompany(Microsoft.WindowsAzure.Commands.Common.AzurePowerShell.AssemblyCompany)]",813]]},{"word":"AssemblyConfiguration","context":[["[assembly: AssemblyConfiguration(\"\")]",287873],["[assembly: AssemblyConfiguration (\"\")]",4554],["[assembly: AssemblyConfiguration( \"\" )]",1784],["[assembly: AssemblyConfiguration(\"Release\")]",1305],["[assembly: AssemblyConfiguration(\"Debug\")]",1103],["[assembly : AssemblyConfiguration(\"\")]",421],["[assembly: AssemblyConfiguration(\"Release Build\")]",336],["[assembly: AssemblyConfiguration(\"Debug Build\")]",336],["[assembly: AssemblyConfiguration(\"Retail\")]",143],["[assembly: AssemblyConfiguration ( \"\" )]",137]]},{"word":"AssemblyCulture","context":[["[assembly: AssemblyCulture(\"\")]",288103],["[assembly: AssemblyCulture (\"\")]",4567],["[assembly: AssemblyCulture( \"\" )]",1967],["[assembly : AssemblyCulture(\"\")]",415],["[assembly: AssemblyCulture ( \"\" )]",137],["+[assembly: AssemblyCulture(\"\")]",125],["//[assembly: AssemblyCulture(\"\")]",95],["// AssemblyCulture",48],["[assembly:AssemblyCulture(\"\")]",40],["[assembly: System.Reflection.AssemblyCulture(\"\")]",35]]},{"word":"AssemblyDescription","context":[["[assembly: AssemblyDescription(\"\")]",264264],["[assembly: AssemblyDescription (\"\")]",4267],["[assembly: AssemblyDescription( \"\" )]",1547],["public string AssemblyDescription",873],["[assembly: AssemblyDescription(\"Ice test\")]",509],["this.textBoxDescription.Text = AssemblyDescription;",494],["[assembly : AssemblyDescription(\"\")]",379],["[assembly: AssemblyDescription(\"Project template made by EyeCatch (http://www.eyecatch.no/)\")]",253],["AssemblyDescription(",130],["[assembly: AssemblyDescription(",129]]},{"word":"AssemblyFileVersion","context":[["[assembly: AssemblyFileVersion(\"1.0.0.0\")]",235334],["[assembly: AssemblyFileVersion(\"0.1.0.0\")]",1474],["[assembly: AssemblyFileVersion(\"1.1.0.0\")]",1238],["[assembly: AssemblyFileVersion( \"1.0.0.0\" )]",1233],["[assembly: AssemblyFileVersion(\"2.0.0.0\")]",987],["//[assembly: AssemblyFileVersion(\"1.0.0.0\")]",794],["[assembly: AssemblyFileVersion(\"1.0.1.0\")]",782],["[assembly: AssemblyFileVersion(\"0.0.0.0\")]",612],["[assembly: AssemblyFileVersion(\"1.2.0.0\")]",563],["[assembly: AssemblyFileVersion(\"1.0.0\")]",510]]},{"word":"AssemblyTrademark","context":[["[assembly: AssemblyTrademark(\"\")]",285036],["[assembly: AssemblyTrademark (\"\")]",4419],["[assembly: AssemblyTrademark( \"\" )]",1878],["[assembly : AssemblyTrademark(\"\")]",383],["+[assembly: AssemblyTrademark(\"\")]",125],["//[assembly: AssemblyTrademark(\"\")]",116],["[assembly: AssemblyTrademark ( \"\" )]",110],["[assembly: AssemblyTrademark(\"Microsoft ® is a registered trademark of Microsoft Corporation.\")]",100],["[assembly: System.Reflection.AssemblyTrademark(\"\")]",81],["[assembly: AssemblyTrademark(\"ELEFLEX® and PRODUCTION READY® are registered trademarks of Production Ready, LLC\")]",61]]},{"word":"AssemblyVersion","context":[["[assembly: AssemblyVersion(\"1.0.0.0\")]",235742],["// [assembly: AssemblyVersion(\"1.0.*\")]",225750],["[assembly: AssemblyVersion(\"1.0.*\")]",6986],["[assembly: AssemblyVersion (\"1.0.*\")]",2918],["[assembly: AssemblyVersion(\"0.1.0.0\")]",1426],["[assembly: AssemblyVersion(\"1.1.0.0\")]",1327],["[assembly: AssemblyVersion( \"1.0.0.0\" )]",1307],["[assembly: AssemblyVersion(\"2.0.0.0\")]",1226],["[assembly: AssemblyVersion(\"1.0.0\")]",1203],["[assembly: AssemblyVersion (\"1.0.0\")]",929]]},{"word":"Assert","context":[["// Assert",102800],["//Assert",18458],["Assert.AreEqual(expected, actual);",17782],["Assert.IsTrue(reader.Read());",17165],["Assert.That( result, Is.Not.Null );",16519],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["Assert.Fail();",12473],["Assert.AreEqual(",11621],["Assert.IsNotNull(result);",10504],["Assert.Equal(expected, actual);",10179]]},{"word":"Attribute","context":[["// Attribute gesteuert. Ändern Sie diese Attributwerte, um die Informationen zu ändern,",3469],["public partial class Attribute",3411],["private Attribute()",3386],["static Attribute()",3274],["NodeType = XPathNodeType.Attribute,",1316],["foreach (Attribute attribute in attributes)",1151],["public sealed class ModelNameAttribute : Attribute",1071],["public Attribute AnnotationAttribute { get; set; }",1069],["IEnumerable<Attribute> attributes = property.GetCustomAttributes();",1058],["[BaseTypeRequired(typeof(Attribute))]",1043]]},{"word":"AttributeTargets","context":[["[AttributeUsage(AttributeTargets.Parameter)]",10720],["[AttributeUsage(AttributeTargets.Method)]",6236],["[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]",6232],["[AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Method)]",4985],["[AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Method)]",4985],["[AttributeUsage(AttributeTargets.Property)]",4580],["[AttributeUsage(AttributeTargets.All)]",3702],["[AttributeUsage(AttributeTargets.Class)]",3357],["[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]",2002],["AttributeTargets.Method | AttributeTargets.Parameter | AttributeTargets.Property |",1807]]},{"word":"Attributes","context":[["[global::CopaceticSoftware.pMixins.Attributes.MixedInMemberAttribute]",2617],["type.Attributes.Add(attribute2);",2583],["type.Attributes.Add(attribute1);",2583],["[Drivers.Compiler.Attributes.PluggedMethod(ASMFilePath = null)]",2338],["set { Attributes[0] = value; }",1861],["#region Attributes",1647],["using MongoDB.Bson.Serialization.Attributes;",1258],["set { Attributes[1] = value; }",1231],["using NAnt.Core.Attributes;",970],["set { Attributes[2] = value; }",812]]},{"word":"Author","context":[["// Author:",34720],["//  Author:",5584],["/// <para>Author: Generated by adkgen</para>",1991],["public string Author { get; set; }",1845],["// Author: Jeffrey Stedfast <jeff@xamarin.com>",1497],["//  Author(s):",1375],["// Author: api.anash@gmail.com (Anash P. Oommen)",1235],["Author:\t\t\tScott Wallace",963],["public string Author",812],["Author:\t\t\tAndreas Raab",789]]},{"word":"Auto","context":[["/// Auto-generated field.",154412],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto)]",1907],["//Auto-generated by kalyptus. DO NOT EDIT.",1366],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto, SetLastError = true)]",1276],["[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]",1132],["[DllImport(\"kernel32.dll\", CharSet = CharSet.Auto, SetLastError = true)]",1020],["Auto,",784],["[DllImport(\"User32.dll\", CharSet=CharSet.Auto)]",629],["/// You already have a pending update to an Auto Scaling resource (for example, a group,",580],["// Auto-generated by StoneAPI, do not modify.",571]]},{"word":"AutoScaleMode","context":[["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Dpi;",2368],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Dpi;",2368],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.None;",2039],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.None;",2039],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Inherit;",449],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Inherit;",449],["base.AutoScaleMode = AutoScaleMode.None;",227],["base.AutoScaleMode = AutoScaleMode.None;",227]]},{"word":"AutoSize","context":[["this.label1.AutoSize = true;",21016],["this.label2.AutoSize = true;",15696],["this.label3.AutoSize = true;",11782],["this.label4.AutoSize = true;",9096],["this.label5.AutoSize = true;",7048],["this.label6.AutoSize = true;",5668],["this.label7.AutoSize = true;",4520],["this.label8.AutoSize = true;",3785],["this.label9.AutoSize = true;",3167],["this.label10.AutoSize = true;",2694]]},{"word":"Azure","context":[["using Microsoft.Rest.Azure;",5308],["using Microsoft.Azure;",4136],["/// <exception cref=\"Microsoft.Rest.Azure.CloudException\">",2364],["namespace Microsoft.Azure.Commands.Network",1332],["using Microsoft.Azure.Test;",1310],["using Microsoft.Azure.Commands.Network.Models;",1199],["using Microsoft.Azure.Commands.Common.Authentication.Models;",1153],["/// endpoint indicated in the Azure-AsyncOperation header for operation status",1112],["using Microsoft.Azure.Batch;",1104],["using Microsoft.Azure.Commands.Common.Authentication;",1050]]},{"word":"B","context":[["class B",4921],["class B : A",2198],["public class B",2159],["//     * Neither the name of Rodrigo B. de Oliveira nor the names of its",1413],["case 'B':",1331],["public class B : A",1168],["class B { }",1136],["class C : B",996],["**  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart",978],["if (A == B)",898]]},{"word":"Bitmap","context":[["return ((System.Drawing.Bitmap)(obj));",113934],["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.",3323],["///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.",2683],["///   查找 System.Drawing.Bitmap 类型的本地化资源。",2360],["///   Поиск локализованного ресурса типа System.Drawing.Bitmap.",1100],["///   Recherche une ressource localisée de type System.Drawing.Bitmap.",1002],["///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。",953],["return default(global::Android.Graphics.Bitmap);",916],["ColorAdjustType.Bitmap);",442]]},{"word":"Body","context":[["ex.Body = _errorBody;",9567],["return _result.Body;",6843],["Body = body;",4834],["protected override object GetBody() { return Body; }",3823],["this.Body = Body;",2350],["this.Body = Body;",2350],["public string Body { get; set; }",2195],["ex.Body = errorBody;",1869],["Assert.NotNull(ms.Body);",1691],["return result.Body;",1551]]},{"word":"Browsable","context":[["[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]",35833],["[Browsable(false)]",32041],["[Browsable(true)]",9382],["[global::System.ComponentModel.Browsable(false)]",7533],["[Browsable (false)]",2968],["[Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]",2643],["[Browsable(false),",2121],["[System.ComponentModel.Browsable(true), System.ComponentModel.Category(\"Values\")]",1658],["Browsable(false),",1570],["[System.ComponentModel.Browsable(false)]",1182]]},{"word":"Build","context":[["//      Build Number",251178],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],[".Build();",13817],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["// and \"{Major}.{Minor}.{Build}.*\" will update just the revision.",8393],["this.UnknownFields = unknownFields.Build();",6112],["using Microsoft.Build.Framework;",4718],["// Sie können alle Werte angeben oder die standardmäßigen Build- und Revisionsnummern",3300]]},{"word":"Builder","context":[["return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();",6302],["return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();",6302],["return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();",6302],["return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();",6302],["return new Builder().MergeFrom(result);",3250],["public static Builder CreateBuilder() { return new Builder(); }",3209],["public static Builder CreateBuilder() { return new Builder(); }",3209],["public override Builder ToBuilder() { return CreateBuilder(this); }",3154],["public override Builder CreateBuilderForType() { return new Builder(); }",3154],["public override Builder CreateBuilderForType() { return new Builder(); }",3154]]},{"word":"Button","context":[["this.button1 = new System.Windows.Forms.Button();",7912],["private System.Windows.Forms.Button button1;",7692],["this.button2 = new System.Windows.Forms.Button();",4246],["private System.Windows.Forms.Button button2;",4119],["this.btnCancel = new System.Windows.Forms.Button();",3484],["if (e.Button == MouseButtons.Left)",3294],["private System.Windows.Forms.Button btnCancel;",3252],["this.button3 = new System.Windows.Forms.Button();",2460],["private System.Windows.Forms.Button button3;",2384],["this.okButton = new System.Windows.Forms.Button();",1979]]},{"word":"C","context":[["class C",71132],["@\"class C",17249],["public class C",14932],["@\"class C {",8735],["class C {",3598],["CompileAndVerifyIL(source, \"C.M\", @\"",3066],["unsafe class C",2740],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll",2483],["class C { }",2268],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Web.dll",2167]]},{"word":"COM","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["// COM, set the ComVisible attribute to true on that type.",238633],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["///<param name=\"comProxy\">inner wrapped COM proxy</param>",15036],["///<param name=\"comProxyType\">Type of inner wrapped COM proxy\"</param>",7518],["// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID",6708],["* QUANTCONNECT.COM - Democratizing Finance, Empowering Individuals.",4217],["// ComVisible を false に設定すると、その型はこのアセンブリ内で COM コンポーネントから",3571],["// 对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型，",3119],["// 对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型，",3119]]},{"word":"CSharp","context":[["using Microsoft.CodeAnalysis.CSharp.Syntax;",15883],["using Microsoft.CodeAnalysis.CSharp;",10526],["using Microsoft.CodeAnalysis.CSharp.Symbols;",7280],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["[DiagnosticAnalyzer(LanguageNames.CSharp)]",5302],["sourceLanguage: LanguageNames.CSharp,",3860],["using Microsoft.CodeAnalysis.CSharp.Test.Utilities;",3102],["namespace Microsoft.CodeAnalysis.CSharp",3058],["referencedLanguage: LanguageNames.CSharp);",2615],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException e)",1808]]},{"word":"CallingConvention","context":[["[UnmanagedFunctionPointer(CallingConvention.Cdecl)]",8778],["[DllImport(\"libgtk-3-0.dll\", CallingConvention = CallingConvention.Cdecl)]",6105],["[DllImport(\"libgtk-3-0.dll\", CallingConvention = CallingConvention.Cdecl)]",6105],["[UnmanagedFunctionPointer(CallingConvention.StdCall)]",5784],["[DllImport(nativeLibName, CallingConvention = CallingConvention.Cdecl)]",5637],["[DllImport(nativeLibName, CallingConvention = CallingConvention.Cdecl)]",5637],["[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]",4931],["[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]",4931],["[DllImport(NativeLibraryName, CallingConvention = CallingConvention.Cdecl)]",3915],["[DllImport(NativeLibraryName, CallingConvention = CallingConvention.Cdecl)]",3915]]},{"word":"CancellationToken","context":[["CancellationToken cancellationToken)",12525],["CancellationToken cancellationToken = default(CancellationToken))",3260],["CancellationToken cancellationToken = default(CancellationToken))",3260],["/// <param name=\"cancellationToken\">The <see cref=\"CancellationToken\"/> for the request.</param>",1676],["CancellationToken cancellationToken,",1576],["CancellationToken cancellationToken);",1508],["/// <param name=\"\"cancellationToken\"\">The <see cref=\"\"CancellationToken\"\"/> for the request.</param>",1157],["public Task<HttpResponseMessage> ExecuteAsync(CancellationToken cancellationToken)",939],["CancellationToken.None,",813],["var cancellationToken = context.CancellationToken;",805]]},{"word":"Category","context":[["[Category( \"PolymorphicSerialization\" )]",17796],["[Trait(Category.AcceptanceType, Category.CheckIn)]",9483],["[Trait(Category.AcceptanceType, Category.CheckIn)]",9483],["[Category(\"Appearance\")]",4852],["[Category(\"Behavior\")]",4077],["[Category(\"Visuals\")]",3267],["[Category(\"ObjectListView\"),",2170],["[Category(\"Sputnik Conformance\")]",2150],["public string Category { get; set; }",1987],["[Category(\"Javascript\")]",1707]]},{"word":"Cdecl","context":[["[UnmanagedFunctionPointer(CallingConvention.Cdecl)]",8778],["[DllImport(\"libgtk-3-0.dll\", CallingConvention = CallingConvention.Cdecl)]",6105],["[DllImport(nativeLibName, CallingConvention = CallingConvention.Cdecl)]",5637],["[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]",4931],["[DllImport(NativeLibraryName, CallingConvention = CallingConvention.Cdecl)]",3915],["[DllImport(DLLNAME, CallingConvention=CallingConvention.Cdecl)]",3857],["[DllImport(LUADLL, CallingConvention = CallingConvention.Cdecl)]",3165],["[UnmanagedFunctionPointer (CallingConvention.Cdecl)]",2169],["[DllImport(\"webkitgtk-1.0\", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,",1784],["[DllImport(\"MyGUI_Export\", CallingConvention = CallingConvention.Cdecl)]",1723]]},{"word":"Change","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Change them to the values specific to your project.",8525],["// Change this to provide different name for the member.",1075],["* Author\t\t\t\t\t\t\tChange\t\t\t\t\t\tDate",753],["* Change log:",492],["// Change these attribute values to modify the information associated with an assembly.",407],["Change,",234],["// \tChange History",167],["//\tChange Description  :",159],["/* Change history",155]]},{"word":"CharSet","context":[["[DllImport(JitHelpers.QCall, CharSet = CharSet.Unicode)]",2621],["[DllImport(JitHelpers.QCall, CharSet = CharSet.Unicode)]",2621],["[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]",2210],["[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]",2210],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto)]",1907],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto)]",1907],["[DllImport(Z3_DLL_NAME, CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Ansi)]",1553],["[DllImport(Z3_DLL_NAME, CallingConvention = CallingConvention.Cdecl, CharSet = CharSet.Ansi)]",1553],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto, SetLastError = true)]",1276],["[DllImport(\"user32.dll\", CharSet = CharSet.Auto, SetLastError = true)]",1276]]},{"word":"Check","context":[["#region Packet Session and User Check",5014],["// Check compatibility",770],["Check.ThatCode(() =>",761],["// Check the reconstruction.",741],["seen.Check(new CollectionEvent<int>[] {",741],["// Check to see if Dispose has already been called.",733],["Check.Source (source);",598],["/// Check if trace definition is enabled",531],["// Check if the current text ends with a newline",478],["protected override void Check()",462]]},{"word":"Class","context":[["End Class",7735],["class Class",3878],["[AttributeUsage(AttributeTargets.Class)]",3357],["End Class\";",2020],["[AttributeUsage(AttributeTargets.Class, AllowMultiple = true)]",2002],["Class TestClass",1586],["[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]",1283],["Assert.Equal(TypeKind.Class, semanticInfo.ConvertedType.TypeKind);",1273],["#region Class Property Declarations",1196],["End Class\",",1173]]},{"word":"Clear","context":[["public void Clear()",21821],["Clear();",5251],["Console.Clear();",4908],["cmd.Parameters.Clear();",3914],["public override Builder Clear() {",3096],["public override void Clear()",2807],["void Clear();",2530],["public void Clear() {",2450],["list.Clear();",2404],["this.Clear();",1895]]},{"word":"Click","context":[["this.button1.Click += new System.EventHandler(this.button1_Click);",6012],["this.button2.Click += new System.EventHandler(this.button2_Click);",3015],["this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);",2258],["this.button3.Click += new System.EventHandler(this.button3_Click);",1740],["this.exitToolStripMenuItem.Click += new System.EventHandler(this.exitToolStripMenuItem_Click);",1368],["this.btnOK.Click += new System.EventHandler(this.btnOK_Click);",1340],["this.btnSave.Click += new System.EventHandler(this.btnSave_Click);",1122],["this.button4.Click += new System.EventHandler(this.button4_Click);",1074],["this.okButton.Click += new System.EventHandler(this.okButton_Click);",1021],["this.aboutToolStripMenuItem.Click += new System.EventHandler(this.aboutToolStripMenuItem_Click);",934]]},{"word":"Client","context":[["await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);",9370],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.2.0\")]",7526],["string baseUrl = this.Client.BaseUri.AbsoluteUri;",7511],["var _baseUrl = this.Client.BaseUri.AbsoluteUri;",7149],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056],["if (this.Client.Credentials.SubscriptionId != null)",5928],["url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);",5907],["if (this.Client.Credentials != null)",4912],["if (this.Client.AcceptLanguage != null)",4652]]},{"word":"Close","context":[["this.Close();",26186],["Close();",25918],["reader.Close();",13595],["public void Close()",10624],["writer.Close();",8381],["stream.Close();",7575],["connection.Close();",6704],["fs.Close();",6256],["sr.Close();",6092],["conn.Close();",5907]]},{"word":"Code","context":[["public string Code { get; set; }",10417],["// <Code>",8359],["//  Code Modification History:",5968],["// Code generated by Microsoft (R) AutoRest Code Generator.",4854],["// Code generated by Microsoft (R) AutoRest Code Generator.",4854],["//</Code>",4140],["// </Code>",3960],["//     Dieser Code wurde von einem Tool generiert.",3563],["[Display(Name = \"Code\")]",3175],["* This Source Code Form is subject to the terms of the Mozilla Public",2993]]},{"word":"CodeAnalysis","context":[["[System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1823:AvoidUnusedPrivateFields\")]",40436],["using System.Diagnostics.CodeAnalysis;",38416],["using Microsoft.CodeAnalysis;",17449],["using Microsoft.CodeAnalysis.CSharp.Syntax;",15883],["using Microsoft.CodeAnalysis.Text;",13979],["using Microsoft.CodeAnalysis.Diagnostics;",10972],["using Microsoft.CodeAnalysis.CSharp;",10526],["[System.Diagnostics.CodeAnalysis.SuppressMessage(\"Microsoft.Usage\", \"CA2227:CollectionPropertiesShouldBeReadOnly\")]",7999],["using Microsoft.CodeAnalysis.CSharp.Symbols;",7280],["[System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1800:DoNotCastUnnecessarily\")]",5923]]},{"word":"CodeDom","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.ServiceModel\", \"4.0.0.0\")]",20773],["using System.CodeDom.Compiler;",17433],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"4.0.0.0\")]",13749],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.2.0\")]",7526],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Runtime.Serialization\", \"4.0.0.0\")]",7279],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"wsdl\", \"4.0.30319.1\")]",6560]]},{"word":"Collections","context":[["using System.Collections.Generic;",1898359],["using System.Collections;",309630],["﻿using System.Collections.Generic;",86339],["using System.Collections.ObjectModel;",63085],["using System.Collections.Specialized;",34410],["using System.Collections.Immutable;",24649],["using System.Collections.Concurrent;",22892],["using Windows.Foundation.Collections;",15674],["System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()",7278],["System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()",7278]]},{"word":"Color","context":[["GUI.color = Color.white;",2208],["using Color = System.Drawing.Color;",1863],["using Color = System.Drawing.Color;",1863],["/// <returns>Color value.</returns>",1793],["this.BackColor = System.Drawing.Color.White;",1618],["public Color Color",1463],["public Color Color",1463],["Color = color;",1364],["return Color.Empty;",1191],["public partial class Color",1191]]},{"word":"Column","context":[["[Column]",4571],["// Table & Column Mappings",1861],["[CategoryAttribute(\"Column\")]",1619],["Id = table.Column<int>(nullable: false)",1262],["[Column(\"audit_ts\")]",668],["[Column(\"audit_user_id\")]",661],["Id = table.Column<string>(nullable: false),",644],["ClaimType = table.Column<string>(nullable: true),",601],["ClaimValue = table.Column<string>(nullable: true),",601],["ConcurrencyStamp = table.Column<string>(nullable: true),",599]]},{"word":"ComVisible","context":[["[assembly: ComVisible(false)]",281805],["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// COM, set the ComVisible attribute to true on that type.",238633],["[ComVisible(true)]",6900],["[ComVisible(false)]",6044],["[System.Runtime.InteropServices.ComVisible(true)]",5824],["// 将 ComVisible 设置为 false 使此程序集中的类型",5045],["// 则将该类型上的 ComVisible 特性设置为 true。",4616],["// その型の ComVisible 属性を true に設定してください。",3654],["// ComVisible を false に設定すると、その型はこのアセンブリ内で COM コンポーネントから",3571]]},{"word":"Commands","context":[["using Microsoft.WindowsAzure.Commands.Utilities.Common;",2456],["using Microsoft.WindowsAzure.Commands.ScenarioTest;",2445],["#region Commands",2080],["using Server.Commands;",1592],["using Microsoft.WindowsAzure.Commands.Common;",1412],["namespace Microsoft.Azure.Commands.Network",1332],["using Microsoft.Azure.Commands.Network.Models;",1199],["using Microsoft.Azure.Commands.Common.Authentication.Models;",1153],["selectedrow = Commands.Rows.Add();",1104],["using Microsoft.Azure.Commands.Common.Authentication;",1050]]},{"word":"Comment","context":[["public string Comment { get; set; }",2043],["case JsonToken.Comment:",1310],["public string Comment",1290],["this.Manager.Comment(\"checking step \\'return CheckRequirementEnabled/[out False]\\'\");",1203],["this.Manager.Comment(\"checking step \\'return CheckRequirementEnabled/[out True]\\'\");",1203],["Comment = comment;",1194],["case XmlNodeType.Comment:",1097],["this.Manager.Comment(\"This step would have covered MS-SMB_R2322, MS-SMB_R8380\");",1054],["CharType.None|CharType.Comment|CharType.FirstName|CharType.Name|CharType.Text|CharType.AttributeText,",900],["this.Manager.Comment(\"executing step \\'call SessionClose(1)\\'\");",892]]},{"word":"Common","context":[["using System.Data.Common;",12727],["using LeagueSharp.Common;",6960],["using Common;",4046],["using Hyak.Common;",4017],["using ClearCanvas.Common;",4012],["using MixERP.Net.Common.Extensions;",3838],["using Ict.Common;",3300],["using DotNetNuke.Common.Utilities;",3291],["using Common.Logging;",3128],["using Ecng.Common;",3125]]},{"word":"Compiler","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.ServiceModel\", \"4.0.0.0\")]",20773],["using System.CodeDom.Compiler;",17433],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"4.0.0.0\")]",13749],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.2.0\")]",7526],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Runtime.Serialization\", \"4.0.0.0\")]",7279],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"wsdl\", \"4.0.30319.1\")]",6560]]},{"word":"CompilerServices","context":[["using System.Runtime.CompilerServices;",314838],["[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]",80047],["[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]",2415],["[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]",2275],["[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]",2275],["namespace System.Runtime.CompilerServices",1676],["﻿using System.Runtime.CompilerServices;",1355],["@\"using System.Runtime.CompilerServices;",1148],["[NetRuntimeSystem.Runtime.CompilerServices.IndexerName(\"Item\")]",854],["[System.Runtime.CompilerServices.CompilerGenerated]",458]]},{"word":"ComponentModel","context":[["using System.ComponentModel;",193116],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["private System.ComponentModel.IContainer components = null;",72616],["[System.ComponentModel.DesignerCategoryAttribute(\"code\")]",71235],["using System.ComponentModel.DataAnnotations;",51271],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]",24739],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]",24739],["this.components = new System.ComponentModel.Container();",18892],["using System.ComponentModel.Composition;",18103]]},{"word":"Config","context":[["using Nini.Config;",5247],["using log4net.Config;",2120],["using NLog.Config;",1746],["Config.Save();",1205],["public class Config",934],["IHttpRouteData route = this.Config.Routes.GetRouteData(request);",901],["return MemoryCache.Default[\"Config\"] as HttpConfiguration;",901],["HttpControllerContext context = new HttpControllerContext(this.Config, route, request)",901],["this.Config = GetConfig();",901],["MemoryCache.Default[\"Config\"] = config;",901]]},{"word":"Configuration","context":[["using System.Configuration;",53657],["[global::System.Configuration.UserScopedSettingAttribute()]",30085],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {",16102],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase",13281],["[global::System.Configuration.ApplicationScopedSettingAttribute()]",10005],["[global::System.Configuration.DefaultSettingValueAttribute(\"\")]",6006],["public void Configuration(IAppBuilder app)",5437],["[global::System.Configuration.DefaultSettingValueAttribute(\"False\")]",5042],["[global::System.Configuration.DefaultSettingValueAttribute(\"True\")]",4901],["using System.Web.Configuration;",3604]]},{"word":"ConfigureAwait","context":[["_responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",16611],["string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",9421],["await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);",9370],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056],[".ConfigureAwait(false);",5151],["await this.Client.Credentials.ProcessHttpRequestAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",4391],["await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);",1912],["_httpResponse = await Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",1674],["}).ConfigureAwait(false);",1281]]},{"word":"Connection","context":[["ocmdPCS.Connection.Open();",2230],["this._commandCollection[0].Connection = this.Connection;",1532],["this._commandCollection[0].Connection = this.Connection;",1532],["this.Adapter.DeleteCommand.Connection = value;",1530],["this.Adapter.UpdateCommand.Connection = value;",1530],["this.Adapter.InsertCommand.Connection = value;",1530],["cmd.Connection = conn;",1448],["command.Connection = connection;",1191],["this._adapter.InsertCommand.Connection = this.Connection;",1176],["this._adapter.InsertCommand.Connection = this.Connection;",1176]]},{"word":"Console","context":[["Console.WriteLine();",52254],["Console.ReadLine();",15120],["Console.ReadKey();",11195],["Console.ResetColor();",5972],["Console.WriteLine(ex.Message);",5355],["Console.WriteLine(\"\");",5023],["int n = int.Parse(Console.ReadLine());",4982],["Console.Clear();",4908],["Console.WriteLine(",4736],["Console.WriteLine(e.Message);",4163]]},{"word":"Constants","context":[["#region Constants",8265],["#region Constants and Fields",2261],["// Constants",1982],["public static class Constants",1657],["using WCell.Constants;",1231],["using YAF.Types.Constants;",1204],["#endregion Constants",1046],["return Constants.S_OK;",1044],["[DataContract(Namespace = Constants.ServiceManagementNS)]",953],["public class Constants",913]]},{"word":"Constructor","context":[["#region Constructor",20776],["/// Constructor",17732],["/// Constructor.",10717],["// Constructor",3653],["#endregion Constructor",1833],["/// Constructor for the Application object.",1811],["/// Constructor used by the .Net Serialization formatter",1486],["// Constructor.",1419],["/// Constructor that accepts values for all mandatory fields",1325],["/// Default Constructor",1271]]},{"word":"Constructors","context":[["#region Constructors",56608],["#endregion Constructors",9132],["#region Constructors and Destructors",7411],["// Constructors",6280],["#region [ Constructors ]",3008],["#region Public Constructors",2172],["#endregion // Constructors",1947],["#endregion Public Constructors",1138],["#region Public Instance Constructors",1116],["#endregion Public Instance Constructors",991]]},{"word":"Container","context":[["this.components = new System.ComponentModel.Container();",18892],["private System.ComponentModel.Container components = null;",3768],["var container = new Container();",3061],["components = new System.ComponentModel.Container();",2395],["// Container child table1.Gtk.Table+TableChild",2293],["// Container child vbox1.Gtk.Box+BoxChild",1295],["// Container child vbox2.Gtk.Box+BoxChild",1175],["// Container child hbox1.Gtk.Box+BoxChild",1168],["// Container child GtkHBox.Gtk.Container+ContainerChild",1157],["// Container child GtkHBox.Gtk.Container+ContainerChild",1157]]},{"word":"Contains","context":[["if (_httpRequest.Headers.Contains(_header.Key))",11093],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["if (_httpRequest.Headers.Contains(\"accept-language\"))",5302],["if (xs.Contains(dsSchema.TargetNamespace)) {",3491],["Assert.Contains(\"warning CS8032\", output, StringComparison.Ordinal);",3087],["public bool Contains(T item)",2284],["_url += (_url.Contains(\"?\") ? \"&\" : \"?\") + string.Join(\"&\", _queryParameters);",1657],["else if (mediaType.MediaType.ToUpperInvariant().Contains(\"JSON\"))",1430],["if (mediaType.MediaType.ToUpperInvariant().Contains(\"XML\"))",1430]]},{"word":"Content","context":[["Content = new StringContent(ex.Message),",24152],["_responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",16611],["string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",9421],["using Android.Content;",7557],["using Microsoft.Xna.Framework.Content;",7084],["Window.Current.Content = rootFrame;",5846],["Frame rootFrame = Window.Current.Content as Frame;",5821],["if (rootFrame.Content == null)",5404],["bundles.Add(new StyleBundle(\"~/Content/css\").Include(",5132],["\"~/Content/bootstrap.css\",",4815]]},{"word":"Context","context":[["web.Context.ExecuteQueryRetry();",3924],["var manager = Context.GetOwinContext().GetUserManager<ApplicationUserManager>();",3102],["Context = context;",2221],["web.Context.ExecuteQuery();",1896],["public override void Context()",1274],["this.Context = context;",1249],["base.Context();",1132],["Context.SaveChanges();",1016],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;Landroid/util/AttributeSet;)V\", AccessFlags = 1)]",965],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;)V\", AccessFlags = 1)]",963]]},{"word":"Contract","context":[["Contract.EndContractBlock();",30934],["Contract.Ensures(Contract.Result<String>() != null);",2534],["Contract.Ensures(Contract.Result<String>() != null);",2534],["Contract.Ensures(Contract.Result<string>() != null);",2395],["Contract.Ensures(Contract.Result<string>() != null);",2395],["#region Contract",1826],["Contract.Requires(source != null);",1277],["Contract.Assert( !this.IsEnded );",1248],["Contract.Requires<ArgumentNullException>(source != null);",1217],["Contract.Ensures(Contract.Result<int>() >= 0);",1182]]},{"word":"Controls","context":[["using System.Windows.Controls;",72031],["using Windows.UI.Xaml.Controls;",29191],["this.Controls.Add(this.label1);",16297],["using Windows.UI.Xaml.Controls.Primitives;",15348],["using System.Windows.Controls.Primitives;",13278],["this.Controls.Add(this.label2);",10670],["using Microsoft.Phone.Controls;",9365],["this.Controls.Add(this.label3);",7223],["this.Controls.Add(this.button1);",6132],["this.Controls.Add(this.groupBox1);",5756]]},{"word":"Convert","context":[["return NetRuntimeSystem.Convert.ToString(returnItem);",10344],["return NetRuntimeSystem.Convert.ToInt32(returnItem);",7601],["return NetRuntimeSystem.Convert.ToBoolean(returnItem);",7462],["public object Convert(object value, Type targetType, object parameter, CultureInfo culture)",5679],["int intReturnItem = NetRuntimeSystem.Convert.ToInt32(returnItem);",3778],["public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038],["public object Convert(object value, Type targetType, object parameter, string language)",3032],["return NetRuntimeSystem.Convert.ToInt16(returnItem);",1683],["byte[] descriptorData = global::System.Convert.FromBase64String(",1302],["return NetRuntimeSystem.Convert.ToDouble(returnItem);",1105]]},{"word":"Core","context":[["using Umbraco.Core;",5434],["using Windows.UI.Core;",4089],["using Umbraco.Core.Models;",3943],["using Umbraco.Core.Logging;",3128],["using Cake.Core.IO;",2824],["namespace MixERP.Net.Schemas.Core.Data",2334],["using Reko.Core;",2288],["using Cake.Core;",2283],["using log4net.Core;",2192],["[TestMethod, Priority(0), TestCategory(\"Core\")]",2096]]},{"word":"Count","context":[["public int Count",18574],["for (int i = 0; i < result.Count(); i++)",7643],["if ((result != null) && (result.Count() > 0))",7630],["public int Count {",6482],["if (_queryParameters.Count > 0)",5935],["if (queryParameters.Count > 0)",5787],["Assert.Equal(1, file.Members.Count);",5163],["public long Count()",4369],["public int Count { get; set; }",2665],["return this.Rows.Count;",2652]]},{"word":"Create","context":[["// Create HTTP transport objects",22333],["// Create Result",22303],["public override string ToString() /* MethodBuilder.Create */",5239],["// Create a Frame to act as the navigation context and navigate to the first page",5190],["public ActionResult Create()",4328],["if( ___occuredException != RuntimeObject.Null ) throw RuntimeException.Create( ___occuredException );",3085],["app.CreatePerOwinContext<ApplicationUserManager>(ApplicationUserManager.Create);",2608],["public override int GetHashCode() /* MethodBuilder.Create */",2370],["public static ApplicationDbContext Create()",2158],["app.CreatePerOwinContext(ApplicationDbContext.Create);",2096]]},{"word":"CreateCompilationWithMscorlib","context":[["CreateCompilationWithMscorlib(text).VerifyDiagnostics(",13782],["CreateCompilationWithMscorlib(source).VerifyDiagnostics(",10755],["var comp = CreateCompilationWithMscorlib(text);",4264],["var comp = CreateCompilationWithMscorlib(source);",3011],["CreateCompilationWithMscorlib(text, options: TestOptions.UnsafeReleaseDll).VerifyDiagnostics(",2702],["var comp = CreateCompilationWithMscorlib(tree);",2334],["var compilation = CreateCompilationWithMscorlib(source);",2280],["CreateCompilationWithMscorlib(",2253],["var compilation = CreateCompilationWithMscorlib(@\"",1656],["CreateCompilationWithMscorlib(source).VerifyDiagnostics();",1245]]},{"word":"Creates","context":[["/// Creates a duplicate of this node.",3922],["/// Creates a new <see cref=\"HelpPageSampleKey\"/> based on media type and CLR type.",1413],["/// Creates a new instance of the",1093],["/// Creates a new <see cref=\"HelpPageSampleKey\"/> based on media type.",1062],["/// Creates a new object that is a copy of the current instance.",997],["///   Creates a new object that is a copy of the current instance.",948],["/// Creates a new object.",809],["/// Creates the kernel that will manage your application.",751],["/// Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'",661],["/// Creates active sink helper",577]]},{"word":"CultureInfo","context":[["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["internal static global::System.Globalization.CultureInfo Culture {",26565],["internal static global::System.Globalization.CultureInfo Culture",12307],["CultureInfo.CurrentCulture,",8304],["CultureInfo.InvariantCulture,",6820],["public object Convert(object value, Type targetType, object parameter, CultureInfo culture)",5679],["public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)",5592],["public static global::System.Globalization.CultureInfo Culture {",5166],["var outWriter = new StringWriter(CultureInfo.InvariantCulture);",3401],["public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038]]},{"word":"Current","context":[["Window.Current.Activate();",6430],["Window.Current.Content = rootFrame;",5846],["Frame rootFrame = Window.Current.Content as Frame;",5821],["[Display(Name = \"Current password\")]",3779],["schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));",3516],["object IEnumerator.Current",3303],["dataProvider = ConnectionScope.Current.DataProvider;",2470],["Cursor.Current = Cursors.WaitCursor;",2075],["Cursor.Current = Cursors.Default;",2039],["//Application.Current.Host.Settings.EnableRedrawRegions = true;",1892]]},{"word":"D","context":[["class D",2833],["public class D",2374],["case 'D':",1542],["delegate void D();",1199],["compilation.VerifyIL(\"D.Main\",",896],["var D = B;",882],["class D : C",766],["D. Entire Understanding: This Agreement constitutes the entire understanding and agreement of the",631],["else if (D == 0)",605],["var delta = Math.Abs(C - D);",576]]},{"word":"DEBUG","context":[["#if DEBUG",64430],["#if !DEBUG",6618],["[Conditional(\"DEBUG\")]",5980],["[System.Diagnostics.Conditional(\"DEBUG\")]",1117],["#if (DEBUG)",964],["#endif // DEBUG",878],["//#if DEBUG",740],["#endif //DEBUG",705],["#if !PRE_NETSTANDARD && !DEBUG",531],["#if DEBUG && !OPENGL_NET_COMPATIBILITY_PROFILE",422]]},{"word":"Data","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["using System.Data;",142076],["using System.Windows.Data;",45617],["using System.Data.Entity;",30106],["using System.Data.SqlClient;",23673],["using Windows.UI.Xaml.Data;",18774],["using System.Data.Entity.Migrations;",17294],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["using System.Data.Common;",12727],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600]]},{"word":"DataMember","context":[["[DataMember]",107082],["[DataMember(EmitDefaultValue = false)]",4246],["[DataMember()]",2587],["[DataMember(Order = 1)]",1579],["[DataMember(Name = \"name\")]",1149],["[DataMember(IsRequired = true)]",1144],["[DataMember(Name = \"id\")]",1142],["[DataMember(IsRequired = false)]",1071],["[DataMember(Order = 2)]",1010],["[DataMember(Order = 0)]",827]]},{"word":"DataType","context":[["[DataType(DataType.Password)]",35890],["[DataType(DataType.Password)]",35890],["[DataType(typeof(System.String))]",1983],["[DataType(DataType.MultilineText)]",991],["[DataType(DataType.MultilineText)]",991],["[XmlAttribute(DataType = \"NCName\")]",985],["[DataType(DataType.EmailAddress)]",978],["[DataType(DataType.EmailAddress)]",978],["[System.Xml.Serialization.XmlAttributeAttribute(DataType=\"anyURI\")]",960],["[DataType(DataType.Date)]",954]]},{"word":"DateTime","context":[["DateTime now = DateTime.Now;",3386],["DateTime now = DateTime.Now;",3386],["public DateTime Date { get; set; }",3020],["DateTime start = DateTime.Now;",2892],["DateTime start = DateTime.Now;",2892],["var now = DateTime.Now;",2260],["return DateTime.MinValue;",2216],["public DateTime CreatedOn { get; set; }",1972],["var now = DateTime.UtcNow;",1874],["start = DateTime.Now;",1830]]},{"word":"Debug","context":[["[Conditional(\"Debug\")]",10678],["Debug.Assert(false);",6545],["Debug.Assert(",2888],["catch(Exception) { Debug.Assert(false); }",1758],["case LogLevel.Debug:",1527],["Debug.Assert(node != null);",1524],["Debug.WriteLine(ex.Message);",1503],["Debug.WriteLine(currentMethodName  + '.' + currentMethodName );",1365],["System.Diagnostics.Debug.WriteLine(ex);",1201],["[assembly: AssemblyConfiguration(\"Debug\")]",1103]]},{"word":"DebuggerNonUserCodeAttribute","context":[["[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]",280885],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute]",28404],["[System.Diagnostics.DebuggerNonUserCodeAttribute()]",22865],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute(),",289],["[System.Diagnostics.DebuggerNonUserCodeAttribute]",159],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute ()]",61],["public DebuggerNonUserCodeAttribute() { }",38],["public sealed partial class DebuggerNonUserCodeAttribute : System.Attribute",34],["new CodeTypeReference(typeof(DebuggerNonUserCodeAttribute))",32],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute( )]",27]]},{"word":"DebuggerStepThroughAttribute","context":[["[System.Diagnostics.DebuggerStepThroughAttribute()]",92874],["[DebuggerStepThroughAttribute]",748],["[System.Diagnostics.DebuggerStepThroughAttribute]",662],["//[System.Diagnostics.DebuggerStepThroughAttribute()]",503],["[DebuggerStepThroughAttribute()]",94],["////    [DebuggerStepThroughAttribute]",51],["public DebuggerStepThroughAttribute() { }",38],["public sealed partial class DebuggerStepThroughAttribute : System.Attribute",34],["public string Name { [System.Diagnostics.DebuggerStepThroughAttribute]get { throw null; } }",30],["using DebuggerStepThroughAttribute = System.Diagnostics.DebuggerStepThroughAttribute;",29]]},{"word":"Default","context":[["public static Settings Default {",16558],["public static Settings Default",13407],["name: \"Default\",",8628],["/// Default constructor.",5332],["Properties.Settings.Default.Save();",4372],["/// Default constructor",4110],["this.Cursor = Cursors.Default;",3549],["Default,",2629],["Default = 0,",2507],["Settings.Default.Save();",2409]]},{"word":"DefaultValue","context":[["DefaultValue = null,",28376],["[DefaultValue(false)]",10949],["[DefaultValue(null)]",8240],["[DefaultValue(true)]",7527],["[DefaultValue(\"\")]",6995],["[global::System.ComponentModel.DefaultValue(default(uint))]",5495],["[global::System.ComponentModel.DefaultValue(\"\")]",3038],["[global::System.ComponentModel.DefaultValue(default(int))]",2413],["[DefaultValue(0)]",2283],["[global::System.ComponentModel.DefaultValue(null)]",2155]]},{"word":"Delete","context":[["public void Delete()",3039],["[HttpPost, ActionName(\"Delete\")]",2871],["Delete();",2756],["public void Delete(int id)",2634],["File.Delete(file);",2562],["File.Delete(path);",2325],["item.Delete();",1963],["File.Delete(fileName);",1431],["public ActionResult Delete(int id)",1358],["this.Delete();",1325]]},{"word":"Description","context":[["public string Description { get; set; }",22765],["public string Description",10557],["using System.Web.Http.Description;",10077],["[Description(\"\")]",8615],["// </Description>",5970],["// <Description>",5773],["public override string Description",4772],["public override string Description {",3394],["using System.ServiceModel.Description;",3343],["public string Description {",3188]]},{"word":"Deserialize","context":[["base.Deserialize( reader );",25470],["public override void Deserialize( GenericReader reader )",23836],["public override void Deserialize(GenericReader reader)",20942],["base.Deserialize(reader);",20611],["// Deserialize Response",16708],["public override void Deserialize(IDataReader reader)",1903],["#region Serialize/Deserialize",1295],["return Deserialize(xmlString);",1245],["public override void Deserialize(BigEndianReader reader)",1079],["return Deserialize(xml, out obj, out exception);",681]]},{"word":"Design","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[global::System.ComponentModel.Design.HelpKeywordAttribute(\"vs.data.TableAdapter\")]",14149],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.2.0\")]",7526],["using System.ComponentModel.Design;",6091],["[global::System.CodeDom.Compiler.GeneratedCode(\"System.Data.Entity.Design.EntityClassGenerator\", \"4.0.0.0\")]",5503],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"1.0.0\")]",3810],["using System.Drawing.Design;",3490],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.3.0\")]",2171]]},{"word":"Designer","context":[["/// Required method for Designer support - do not modify",72324],["#region Windows Form Designer generated code",54340],["#region Component Designer generated code",15792],["#region Designer generated code",3977],["// Required for Windows Form Designer support",2800],["[GeneratedCode (\"iOS Designer\", \"1.0\")]",2635],["#region Web Form Designer generated code",1852],["// CODEGEN: This call is required by the ASP.NET Web Form Designer.",1801],["#endregion Designer generated code",1308],["// This call is required by the Windows.Forms Form Designer.",1143]]},{"word":"DexImport","context":[["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 1)]",16039],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 0)]",6632],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"describeContents\", \"()I\", AccessFlags = 1)]",2578],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["[Dot42.DexImport(\"hashCode\", \"()I\", AccessFlags = 1)]",2203],["[Dot42.DexImport(\"CREATOR\", \"Landroid/os/Parcelable$Creator;\", AccessFlags = 25)]",2188],["[Dot42.DexImport(\"close\", \"()V\", AccessFlags = 1)]",1777]]},{"word":"Diagnostic","context":[["Diagnostic(ErrorCode.WRN_UnprocessedXMLComment, \"/\"),",2314],["Diagnostic(ErrorCode.ERR_UseDefViolation, \"a\").WithArguments(\"a\"),",1641],["Diagnostic(ErrorCode.ERR_UnsafeNeeded, \"int*\"),",600],["Diagnostic(ErrorCode.ERR_ThisInBadContext, \"this\"),",528],["Diagnostic(ErrorCode.ERR_BadEmptyThrow, \"throw\"),",495],["Diagnostic(ErrorCode.ERR_DuplicateNameInNS, \"Util\").WithArguments(\"Util\", \"NS\")",462],["Diagnostic(ErrorCode.ERR_BadArgExtraRef, \"l\").WithArguments(\"1\", \"ref\"),",456],["diagnostic = default(Diagnostic);",439],["Diagnostic(ErrorCode.ERR_BadArgType, \"l\").WithArguments(\"2\", \"long\", \"char\"),",408],["static bool TryGetDiagnostic(SyntaxNodeAnalysisContext nodeContext, out Diagnostic diagnostic)",360]]},{"word":"Diagnostics","context":[["[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]",280885],["using System.Diagnostics;",227813],["[System.Diagnostics.DebuggerStepThroughAttribute()]",92874],["[System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1823:AvoidUnusedPrivateFields\")]",40436],["using System.Diagnostics.CodeAnalysis;",38416],["using System.Diagnostics.Contracts;",34226],["[System.Diagnostics.DebuggerNonUserCode()]",29248],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute]",28404],["[System.Diagnostics.DebuggerNonUserCodeAttribute()]",22865],["using Microsoft.CodeAnalysis.Diagnostics;",10972]]},{"word":"DialogResult","context":[["DialogResult = DialogResult.OK;",3527],["DialogResult = DialogResult.OK;",3527],["this.DialogResult = DialogResult.OK;",2977],["this.DialogResult = DialogResult.OK;",2977],["if (result == DialogResult.OK)",2342],["this.btnCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel;",2325],["this.btnCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel;",2325],["DialogResult = DialogResult.Cancel;",2129],["DialogResult = DialogResult.Cancel;",2129],["this.DialogResult = DialogResult.Cancel;",1958]]},{"word":"Dictionary","context":[["Dictionary<string, object> tracingParameters = new Dictionary<string, object>();",21309],["Dictionary<string, object> tracingParameters = new Dictionary<string, object>();",21309],["var queryParams = new Dictionary<String, String>();",3979],["var headerParams = new Dictionary<String, String>();",3019],["var localVarFileParams = new Dictionary<String, FileParameter>();",2518],["var localVarFormParams = new Dictionary<String, String>();",2518],["var localVarPathParams = new Dictionary<String, String>();",2518],["var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);",2518],["var localVarQueryParams = new Dictionary<String, String>();",2484],["fieldHashtable = new Dictionary<string, string>();",2138]]},{"word":"Directory","context":[["Directory.CreateDirectory(path);",2668],["if (!Directory.Exists(path))",2180],["Directory.CreateDirectory(dir);",1697],["Directory dir = NewDirectory();",1472],["if (Directory.Exists(path))",1333],["//       %Project Directory%\\obj\\<configuration>. For example, if your KeyFile is",1211],["using Directory = Lucene.Net.Store.Directory;",1131],["using Directory = Lucene.Net.Store.Directory;",1131],["Directory.CreateDirectory(directory);",1114],["if (!Directory.Exists(dir))",1087]]},{"word":"Display","context":[["[Display(Name = \"Email\")]",11961],["[Display(Name = \"Password\")]",8722],["[Display(Name = \"Confirm new password\")]",6254],["[Display(Name = \"New password\")]",6254],["[Display(Name = \"Confirm password\")]",5974],["[Display(Name = \"Current password\")]",3779],["[Display(Name = \"Remember me?\")]",3526],["[Display(Name = \"Phone Number\")]",3212],["[Display(Name = \"User name\")]",3200],["[Display(Name = \"Code\")]",3175]]},{"word":"Dispose","context":[["base.Dispose(disposing);",95836],["protected override void Dispose(bool disposing)",93650],["public void Dispose()",82640],["components.Dispose();",78885],["Dispose(true);",19645],["_httpRequest.Dispose();",18175],["_httpResponse.Dispose();",18173],["protected virtual void Dispose(bool disposing)",14193],["Dispose();",10032],["Dispose(false);",9914]]},{"word":"DllImport","context":[["[DllImport(\"user32.dll\")]",14517],["[DllImport(VERSION.dll)]",7795],["// Disable the \"extern without DllImport\" warning.",6739],["[DllImport(\"libgtk-3-0.dll\", CallingConvention = CallingConvention.Cdecl)]",6105],["[DllImport(nativeLibName, CallingConvention = CallingConvention.Cdecl)]",5637],["[DllImport(libgit2)]",5567],["[DllImport (VERSION.dll)]",4957],["[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]",4931],["[DllImport(\"kernel32.dll\")]",4319],["[DllImport(NativeLibraryName, CallingConvention = CallingConvention.Cdecl)]",3915]]},{"word":"Do","context":[["// Do not repeat app initialization when the Window already has content,",5315],["// Do not add any additional code to this method",3689],[".Do(async e =>",2905],["// Do nothing",2597],["* Do not make changes to this file unless you know what you are doing--modify",2088],["// Do nothing.",1748],["// This file has been generated by the GUI designer. Do not modify.",1440],["// Do the sample generation based on formatters only if an action doesn't return an HttpResponseMessage.",1431],["/// Do not change the method contents inside the source code editor. The Forms designer might",1190],["// Do not make changes to this file unless you know what you are doing--modify",1188]]},{"word":"Domain","context":[["namespace Allors.Domain",1034],["using SmartStore.Core.Domain.Catalog;",993],["using SmartStore.Core.Domain.Customers;",908],["using CharacterGen.Domain.Tables;",857],["public string Domain { get; set; }",845],["using Domain;",816],["using SmartStore.Core.Domain.Orders;",787],["OperatingSystems = new List<Domain.Models.OperatingSystem>()",778],["using Nest.Tests.MockData.Domain;",767],["namespace Cofoundry.Domain",743]]},{"word":"Dot42","context":[["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 1)]",16039],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 0)]",6632],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"describeContents\", \"()I\", AccessFlags = 1)]",2578],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["[Dot42.DexImport(\"hashCode\", \"()I\", AccessFlags = 1)]",2203],["[Dot42.DexImport(\"CREATOR\", \"Landroid/os/Parcelable$Creator;\", AccessFlags = 25)]",2188],["[Dot42.DexImport(\"close\", \"()V\", AccessFlags = 1)]",1777]]},{"word":"Drawing","context":[["using System.Drawing;",152924],["return ((System.Drawing.Bitmap)(obj));",113934],["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);",46260],["this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));",14622],["using System.Drawing.Imaging;",13386],["using System.Drawing.Drawing2D;",11504],["this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 12F);",5234],["return ((System.Drawing.Icon)(obj));",5086],["using System.Drawing.Design;",3490]]},{"word":"E","context":[["Slot = SpellSlot.E,",4793],["//E",2375],["return default(E);",2087],["case 'E':",1594],["//  to avoid creating duplicate seed data. E.g.",1451],["catch (Exception E)",1065],["enum E",1021],["class E",736],["E.Cast();",689],["this.exitToolStripMenuItem.Text = \"E&xit\";",642]]},{"word":"EditorBrowsable","context":[["[EditorBrowsable(EditorBrowsableState.Never)]",42231],["[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]",35833],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]",13801],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]",4587],["[EditorBrowsable(EditorBrowsableState.Advanced)]",4144],["[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]",1733],["[EditorBrowsable(EditorBrowsableState.Always)]",1335],["[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]",1145],["[EditorBrowsable (EditorBrowsableState.Never)]",1103],["[EditorBrowsable (EditorBrowsableState.Advanced)]",837]]},{"word":"EditorBrowsableAttribute","context":[["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]",24739],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]",8270],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]",3035],["[System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(1))]",1886],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Always)]",458],["[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]",286],["[global::System.ComponentModel.EditorBrowsableAttribute( global::System.ComponentModel.EditorBrowsableState.Advanced )]",262],["[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]",231],["[System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(2))]",211]]},{"word":"EditorBrowsableState","context":[["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[EditorBrowsable(EditorBrowsableState.Never)]",42231],["[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]",35833],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]",24739],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]",13801],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]",8270],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]",4587],["[EditorBrowsable(EditorBrowsableState.Advanced)]",4144],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]",3035],["[System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(1))]",1886]]},{"word":"Element","context":[["NodeType = XPathNodeType.Element,",18601],["\"Element\"}, new object[] {",7032],["case XmlNodeType.Element:",2569],["if (reader.NodeType == XmlNodeType.Element)",1446],["/// <param name=\"element\">Element which owns the property.</param>",1395],["Assert.AreEqual(NodeType.Element, dochtml1.NodeType);",1361],["Assert.AreEqual(NodeType.Element, dochtml1head0.NodeType);",1358],["Assert.AreEqual(NodeType.Element, dochtml0.NodeType);",1292],["Assert.AreEqual(NodeType.Element, dochtml0head0.NodeType);",1290],["Assert.AreEqual(NodeType.Element, dochtml1body1.NodeType);",1279]]},{"word":"Email","context":[["public string Email { get; set; }",24278],["[Display(Name = \"Email\")]",11961],["var user = await UserManager.FindByNameAsync(model.Email);",3405],["var user = new ApplicationUser { UserName = model.Email, Email = model.Email };",3041],["var user = new ApplicationUser { UserName = model.Email, Email = model.Email };",3041],["var user = new ApplicationUser { UserName = model.Email, Email = model.Email };",3041],["// Email: info@bettercms.com",1997],["return View(\"ExternalLoginConfirmation\", new ExternalLoginConfirmationViewModel { Email = loginInfo.Email });",1619],["return View(\"ExternalLoginConfirmation\", new ExternalLoginConfirmationViewModel { Email = loginInfo.Email });",1619],["public string Email",1491]]},{"word":"Emit","context":[["using System.Reflection.Emit;",9194],["il.Emit(OpCodes.Ret);",2497],["il.Emit(OpCodes.Ldarg_0);",2264],["using Microsoft.CodeAnalysis.Emit;",1780],["il.Emit(OpCodes.Ldarg_1);",1430],["using dnlib.DotNet.Emit;",1346],["public override void Emit (EmitContext ec)",1084],["/// <param name=\"generator\">The <see cref=\"T:System.Reflection.Emit.ILGenerator\" /> to emit instructions from</param>",943],["gen.Emit(OpCodes.Ret);",813],["gen.Emit(OpCodes.Ldarg_0);",786]]},{"word":"Empty","context":[["return string.Empty;",40444],["Enumerable.Empty<ParameterExpression>());",17688],["return String.Empty;",15701],["private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);",4470],["string.Empty,",3514],["return MergeFrom(input, pb::ExtensionRegistry.Empty);",3170],["string result = string.Empty;",3018],["handler(this, EventArgs.Empty);",2124],[": string.Empty;",1825],["get { return string.Empty; }",1539]]},{"word":"Enabled","context":[["public bool Enabled",3224],["Enabled = true,",2637],["public bool Enabled { get; set; }",2198],["Enabled = true;",1900],["Enabled = false;",1645],["if (!Enabled)",1550],["if (Enabled)",1373],["this.Enabled = true;",1104],["this.Enabled = false;",1063],["public override bool Enabled",888]]},{"word":"Encoding","context":[["httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);",3354],["_httpRequest.Content = new StringContent(_requestContent, Encoding.UTF8);",1934],["_httpRequest.Content = new System.Net.Http.StringContent(_requestContent, System.Text.Encoding.UTF8);",1545],["request.Content = System.Text.Encoding.UTF8.GetBytes(snippet);",1050],["Encoding.UTF8);",926],["public override Encoding Encoding",723],["public override Encoding Encoding",723],["public Encoding Encoding",688],["public Encoding Encoding",688],["encoding = Encoding.UTF8;",582]]},{"word":"End","context":[["End Sub",12194],["End Class",7735],["End Function",4742],["End Property",3905],["End Sub\";",3465],["End Get",3249],["GL.End();",2908],["spriteBatch.End();",2314],["Response.End();",2130],["End Class\";",2020]]},{"word":"Entities","context":[["using MediaBrowser.Model.Entities;",2496],["using DotNetNuke.Entities.Modules;",2293],["using MixERP.Net.Entities.Core;",1984],["using DotNetNuke.Entities.Portals;",1937],["using MediaBrowser.Controller.Entities;",1720],["using WCell.RealmServer.Entities;",1463],["using DotNetNuke.Entities.Users;",1447],["using Nettiers.AdventureWorks.Entities;",1264],["using MixERP.Net.Entities.Transactions;",1015],["using Entities;",879]]},{"word":"Entity","context":[["using System.Data.Entity;",30106],["using System.Data.Entity.Migrations;",17294],["using System.Data.Entity.Migrations.Infrastructure;",6848],["using System.Data.Entity.Infrastructure;",6610],["[global::System.CodeDom.Compiler.GeneratedCode(\"System.Data.Entity.Design.EntityClassGenerator\", \"4.0.0.0\")]",5503],["using System.Data.Entity.ModelConfiguration;",4646],["﻿using System.Data.Entity;",3432],["using Microsoft.Data.Entity;",3314],["using System.Data.Entity.Spatial;",1990],["// All ZZZ Projects products: Entity Framework Extensions / Bulk Operations / Extension Methods /Icon Library",1506]]},{"word":"Environment","context":[["Environment.Exit(0);",5043],["Environment.Exit(1);",3502],["using Orchard.Environment.Extensions;",2455],["Environment.NewLine +",2171],["Environment.NewLine,",2139],["sb.Append(Environment.NewLine);",1948],["using Orchard.Environment.Configuration;",1258],["Environment.Exit(-1);",1238],["//  Build Environment: C#, Visual Studio 2008",1140],["using Orchard.Environment.Extensions.Models;",1025]]},{"word":"Equal","context":[["Assert.Equal(expected, actual);",10179],["Assert.Equal(",8161],["Assert.Equal(1, count);",6703],["Assert.Equal(0, MainMethod());",5664],["Assert.Equal(1, file.Members.Count);",5163],["Assert.Equal(text, file.ToFullString());",4638],["Assert.Equal(SyntaxKind.ClassDeclaration, file.Members[0].Kind());",4028],["Assert.Equal(ConversionKind.Identity, semanticInfo.ImplicitConversion.Kind);",3821],["Assert.Equal(0, exitCode);",3588],["Assert.Equal(0, semanticInfo.MethodGroup.Length);",3484]]},{"word":"Equals","context":[["public override bool Equals(object obj)",51268],["public virtual bool Equals(object obj) {}",6505],["return left.Equals(right);",3591],["public override bool Equals(object obj) {",3374],["public override bool Equals(object other) {",3297],["return !left.Equals(right);",2547],["return base.Equals(obj);",2525],["return Equals(left, right);",2490],["return !Equals(left, right);",2434],["public override bool Equals(object other)",2302]]},{"word":"Error","context":[["return View(\"Error\");",12209],["TracingAdapter.Error(invocationId, ex);",9174],["ServiceClientTracing.Error(_invocationId, ex);",8249],["Error",4132],[": message == ManageMessageId.Error ? \"An error has occurred.\"",4066],["Error,",3329],["if (source == null) throw Error.ArgumentNull(\"source\");",2932],["Error _errorBody = SafeJsonConvert.DeserializeObject<Error>(_responseContent, this.Client.DeserializationSettings);",2932],["Error _errorBody = SafeJsonConvert.DeserializeObject<Error>(_responseContent, this.Client.DeserializationSettings);",2932],["Microsoft.Rest.ServiceClientTracing.Error(_invocationId, ex);",2844]]},{"word":"ErrorCode","context":[["\"Unused ErrorCode\",",12298],["Diagnostic(ErrorCode.WRN_UnprocessedXMLComment, \"/\"),",2314],["throw new PCSDBException(ErrorCode.OTHER_ERROR, METHOD_NAME, ex);",2129],["if(ex.ErrorCode == 404) {",1943],["PCSMessageBox.Show(ErrorCode.LOG_EXCEPTION, MessageBoxIcon.Error);",1887],["throw new PCSDBException(ErrorCode.ERROR_DB, METHOD_NAME,ex);",1858],["Diagnostic(ErrorCode.ERR_UseDefViolation, \"a\").WithArguments(\"a\"),",1641],["throw new PCSDBException(ErrorCode.ERROR_DB, METHOD_NAME, ex);",1129],["PCSMessageBox.Show(ErrorCode.OTHER_ERROR, MessageBoxIcon.Error);",992],["PCSMessageBox.Show(ErrorCode.LOG_EXCEPTION, MessageBoxButtons.OK, MessageBoxIcon.Error);",911]]},{"word":"Event","context":[["#region Event Handlers",3729],["// Neither the name of the Event Store LLP nor the names of its",2209],["/// <param name=\"e\">Event arguments.</param>",2016],["\"_\" + eventName + \"Event\",",1737],["Event.current.Use();",1656],["/// <param name=\"e\">Event data that describes how this page was reached.  The Parameter",1602],["case SymbolKind.Event:",1387],["using Akka.Event;",1304],["/// <param name=\"e\">Event data that describes how this page was reached.",1268],["/// <param name=\"e\">Event arguments</param>",1140]]},{"word":"EventArgs","context":[["protected void Page_Load(object sender, EventArgs e)",31439],["private void button1_Click(object sender, EventArgs e)",6705],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["protected override void OnLoad(EventArgs e)",4950],["private void button2_Click(object sender, EventArgs e)",3303],["protected override void OnInit(EventArgs e)",3290],["private void Form1_Load(object sender, EventArgs e)",2769],["protected override void OnPreRender(EventArgs e)",2245],["/// <param name=\"e\">The <see cref=\"EventArgs\"/> instance containing the event data.</param>",2236],["private void btnCancel_Click(object sender, EventArgs e)",2163]]},{"word":"EventHandler","context":[["this.button1.Click += new System.EventHandler(this.button1_Click);",6012],["this.button2.Click += new System.EventHandler(this.button2_Click);",3015],["this.Load += new System.EventHandler(this.Form1_Load);",2906],["public event EventHandler CanExecuteChanged;",2514],["this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);",2258],["this.button3.Click += new System.EventHandler(this.button3_Click);",1740],["this.timer1.Tick += new System.EventHandler(this.timer1_Tick);",1442],["this.exitToolStripMenuItem.Click += new System.EventHandler(this.exitToolStripMenuItem_Click);",1368],["this.btnOK.Click += new System.EventHandler(this.btnOK_Click);",1340],["this.Load += new System.EventHandler(this.MainForm_Load);",1232]]},{"word":"Exception","context":[["catch (Exception ex)",274414],["catch (Exception e)",138655],["catch (Exception)",68347],["catch(Exception e) {",27833],["catch (Exception exception)",21637],["catch (Exception exc)",17319],["} catch (Exception ex) {",17315],["} catch (Exception e) {",15315],["catch(Exception ex)",14409],["catch(Exception e)",11213]]},{"word":"Execute","context":[["//---------------Execute Test ----------------------",8148],["public override void Execute()",4137],["public void Execute()",4130],["public void Execute(object parameter)",2909],["public override bool Execute()",1736],["Execute.Assertion",1428],["apiClient.WithContext(handler.ApiContext).Execute();",1365],["Execute(t);",1281],[".Execute();",1170],["response = client.Execute();",1071]]},{"word":"Exists","context":[["if (File.Exists(path))",3573],["if (!Directory.Exists(path))",2180],["if (!File.Exists(path))",2173],["if (File.Exists(fileName))",1782],["if (File.Exists(filePath))",1624],["if (File.Exists(file))",1525],["if (Directory.Exists(path))",1333],["if (File.Exists(filename))",1275],["if (!File.Exists(filePath))",1203],["if (!File.Exists(fileName))",1147]]},{"word":"Expression","context":[["Expression.Call(",3662],["Expression.Invoke(",2410],["Expression.Lambda<Func<bool>>(",1876],["Expression<Func<bool>> e =",1856],["Expression.Block(",1242],["Expression.Lambda<Func<int>>(",1175],["Expression<Func<int>> e =",1005],["/// <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>",974],["/// <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>",974],["Expression.Condition(",958]]},{"word":"Extensions","context":[["using Microsoft.Extensions.Logging;",4601],["using Microsoft.Extensions.DependencyInjection;",4259],["using Microsoft.CodeAnalysis.Shared.Extensions;",4080],["public static class Extensions",3946],["using MixERP.Net.Common.Extensions;",3838],["using Xunit.Extensions;",3698],["using Microsoft.Extensions.Configuration;",2570],["using Orchard.Environment.Extensions;",2455],["public static partial class Extensions",1788],["using MixERP.Net.Framework.Extensions;",1765]]},{"word":"F","context":[["void F()",3601],["case 'F':",1440],["private const string FieldExpression = \"/doc/members/member[@name='F:{0}']\";",1081],["Lan.F(this);",929],["static void F()",856],["static object F()",754],["public void F()",741],["F. Point of Contact: Any Recipient contact with Government Agency is to be directed to the designated",631],["F. \"Modification\" means any alteration of, including addition to or deletion from, the substance or",631],["var f1 = compilation1.GetMember<MethodSymbol>(\"C.F\");",551]]},{"word":"FROM","context":[["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",3173],["// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",2695],["command.CommandText = \"SELECT ISNULL((SELECT SUM(ColumnUpdateInt) FROM SingleMany_Key), 0)\";",1760],["command.CommandText = \"SELECT ISNULL((SELECT SUM(ColumnInt) FROM SingleMany), 0)\";",1760],["command.CommandText = \"SELECT ISNULL((SELECT SUM(ColumnUpdateInt) FROM SingleMany), 0)\";",1760],["command.CommandText = \"SELECT ISNULL((SELECT SUM(ColumnInt) FROM SingleMany_Key), 0)\";",1760],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",1425],["FROM",1285],["// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE          *",1235]]},{"word":"Fact","context":[["[Fact]",818245],["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["[Fact()]",6125],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateMethod)]",5464],["[Fact, Trait(Traits.Feature, Traits.Features.QuickInfo)]",4674],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateVariable)]",4405],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateType)]",3469]]},{"word":"False","context":[["[global::System.Configuration.DefaultSettingValueAttribute(\"False\")]",5042],["Assert.False(semanticInfo.IsCompileTimeConstant);",3897],["False",2795],["Assert.False(result);",1963],["// OuterTableImplied : False",1600],["// Header            : False",1600],["// Footer            : False",1600],["// Separator         : False",1600],["/// <param name=\"disposing\">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>",1477],["this.Manager.Comment(\"checking step \\'return CheckRequirementEnabled/[out False]\\'\");",1203]]},{"word":"Feature","context":[["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateMethod)]",5464],["[Fact, Trait(Traits.Feature, Traits.Features.QuickInfo)]",4674],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateVariable)]",4405],["[WpfFact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",4194],["[WpfFact, Trait(Traits.Feature, Traits.Features.Completion)]",3703],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateType)]",3469]]},{"word":"Features","context":[["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateMethod)]",5464],["[Fact, Trait(Traits.Feature, Traits.Features.QuickInfo)]",4674],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateVariable)]",4405],["[WpfFact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",4194],["[WpfFact, Trait(Traits.Feature, Traits.Features.Completion)]",3703],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateType)]",3469]]},{"word":"Fields","context":[["#region Fields",38348],["#region Private Fields",9675],["// Fields",7143],["#region Instance Fields",4896],["#endregion Fields",4501],["#region Static Fields",2588],["#region Constants and Fields",2261],["#endregion Private Fields",2016],["#region Private Instance Fields",1529],["#endregion Private Instance Fields",1360]]},{"word":"File","context":[["if (File.Exists(path))",3573],["*  File :",2730],["File.Delete(file);",2562],["File.Delete(path);",2325],["if (!File.Exists(path))",2173],["if (File.Exists(fileName))",1782],["if (File.Exists(filePath))",1624],["if (File.Exists(file))",1525],["File.Delete(fileName);",1431],["this.fileToolStripMenuItem.Text = \"File\";",1326]]},{"word":"First","context":[["/// First published in XenServer 4.0.",2474],[".First();",1806],["/// First, it will look at the <see cref=\"SampleObjects\"/>. If no sample object is found, it will try to create",1062],["/// <param name=\"a\">First operand</param>",923],["/// First published in XenServer 5.0.",911],["var diagnostic = context.Diagnostics.First();",771],[".First()",742],["First,",719],["/// <param name=\"lhs\">First object</param>",666],["var trailingTrivia = ifKeyword.TrailingTrivia.First();",661]]},{"word":"Flags","context":[["[Flags]",38047],["(byte)(MemberFlags.Method | MemberFlags.Static),                                                            // Flags",2028],["[Flags()]",1207],["public int Flags;",741],["[System.Flags]",653],["(byte)MemberFlags.Constructor,                                                                              // Flags",641],["public uint Flags;",606],["Flags = flags;",522],["[SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]",484],["[SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)]",464]]},{"word":"Font","context":[["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["MenuSettings.Font.DrawText(",967],["public Font Font",463],["public Font Font",463],["public override Font Font",407],["public override Font Font",407],["base.Font = value;",381],["/// <returns>Font value.</returns>",340],["MainForm.SetControlFont(dlg, this.Font, false);",325],["get { return base.Font; }",294]]},{"word":"Foo","context":[["void Foo()",5272],["public class Foo",3579],["class Foo",2886],["item: \"Foo\",",1838],["public void Foo()",1638],["/// public void Foo() {",1545],["static void Foo()",1465],["Foo();",1169],["/// [ActionName(\"Foo\")]",1069],["///   ViewBag.ReturnUrl = Url.Action(\"Foo\"); // OK",1066]]},{"word":"For","context":[["//inside a <PropertyGroup>.  For example, if you are using US english",8472],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["var connection = Substitute.For<IApiConnection>();",4085],["/// <para>Type:     String -- VT_LPWSTR  (For variants: VT_BSTR)</para>",3056],["For more features, controls, and fast professional support,",2979],["// For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864",2916],["// Note: For instructions on enabling IIS6 or IIS7 classic mode,",2678],["// For more information visit http://www.allors.com/legal",2489],["var gitHubClient = Substitute.For<IGitHubClient>();",1441],["// For UI consistency, clear the entire page stack",1422]]},{"word":"Form","context":[["#region Windows Form Designer generated code",54340],["[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]",8418],["public partial class Form1 : Form",5795],["public partial class MainForm : Form",3240],["* This Source Code Form is subject to the terms of the Mozilla Public",2993],["// Required for Windows Form Designer support",2800],["[System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]",2223],["#region Web Form Designer generated code",1852],["// CODEGEN: This call is required by the ASP.NET Web Form Designer.",1801],["// This call is required by the Windows.Forms Form Designer.",1143]]},{"word":"Format","context":[["string.Format(",13230],["String.Format(",6492],["var ex = new ErrorException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",5667],["return string.Format(",4357],["Format = format;",3097],["sample = new InvalidSample(String.Format(",2816],["var ex = new CloudException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",2575],["public string Format { get; private set; }",2558],["Assert.AreEqual (string.Format (CultureInfo.InvariantCulture,",1956],["var ex = new HttpOperationException(string.Format(\"Operation returned an invalid status code '{0}'\", statusCode));",1619]]},{"word":"Forms","context":[["using System.Windows.Forms;",162506],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["| System.Windows.Forms.AnchorStyles.Right)));",49511],["this.label1 = new System.Windows.Forms.Label();",26604],["private System.Windows.Forms.Label label1;",25419],["| System.Windows.Forms.AnchorStyles.Left)",21496],["this.label2 = new System.Windows.Forms.Label();",19658],["private System.Windows.Forms.Label label2;",18818],["this.label3 = new System.Windows.Forms.Label();",14775],["private System.Windows.Forms.Label label3;",14122]]},{"word":"Foundation","context":[["using Windows.Foundation;",18960],["using Windows.Foundation.Collections;",15674],["using Foundation;",11610],["* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",6439],["* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",4797],["using MonoTouch.Foundation;",4601],["// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA",3975],["// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its",2508],["// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.",2463],["using MonoMac.Foundation;",2128]]},{"word":"Framework","context":[["using NUnit.Framework;",148355],["using Microsoft.Xna.Framework;",25252],["using Microsoft.Xna.Framework.Graphics;",17824],["﻿using NUnit.Framework;",9534],["using Microsoft.Xna.Framework.Input;",7824],["using OpenSim.Framework;",7092],["using Microsoft.Xna.Framework.Content;",7084],["using MixERP.Net.Framework;",7059],["// The Accord.NET Framework",6457],["using Microsoft.Build.Framework;",4718]]},{"word":"Func","context":[["Expression.Lambda<Func<bool>>(",1876],["Expression<Func<bool>> e =",1856],["Func<bool> f = e.Compile();",1518],["private static Dictionary<Type, Func<long, object>> InitializeGenerators()",1432],["private static readonly Dictionary<Type, Func<long, object>> DefaultGenerators = InitializeGenerators();",1432],["return new Dictionary<Type, Func<long, object>>",1431],["Func<TSource, TKey> keySelector,",1220],["Expression.Lambda<Func<int>>(",1175],["Func<object, string> textGenerator;",1075],["public IList<Func<HelpPageSampleGenerator, Type, object>> SampleObjectFactories { get; private set; }",1066]]},{"word":"GET","context":[["[AcceptVerbs(\"GET\", \"HEAD\")]",18392],["get { return \"GET\"; }",4493],["_httpRequest.Method = new HttpMethod(\"GET\");",3356],["// GET: /Account/Register",3260],["// GET: /Account/Login",3200],["// GET: /Account/ExternalLoginCallback",3014],["// GET: /Account/ExternalLoginFailure",2663],["_httpRequest.Method = new System.Net.Http.HttpMethod(\"GET\");",2393],["// GET: /Account/ResetPassword",2178],["// GET: /Account/ForgotPassword",2176]]},{"word":"GUID","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID",6708],["// Die folgende GUID bestimmt die ID der Typbibliothek, wenn dieses Projekt für COM verfügbar gemacht wird",3048],["// 次の GUID は、このプロジェクトが COM に公開される場合の、typelib の ID です",1946],["// Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM",1391],["// On Windows, the following GUID is for the ID of the typelib if this",1271],["// Le GUID suivant est pour l'ID de la typelib si ce projet est exposé à COM",1233],["/// <param name=\"guid\">The GUID.</param>",984],["// El siguiente GUID sirve como identificador de typelib si este proyecto se expone a COM",950],["// このプロジェクトが COM に公開される場合、次の GUID が typelib の ID になります",926]]},{"word":"General","context":[["// General Information about an assembly is controlled through the following",263447],["[Category(\"General\")]",722],["throw new DMException(this, e, String.Format(\"General Exception thrown :  Caller - [{0}] :: Member - [{1}]\",",592],["#region General",455],["// General",446],["// General Information about an assembly is controlled through the following set of attributes.",402],["General,",238],["namespace UnitTests.General",228],["using System.Reflection.Runtime.General;",198],["using Model.General;",175]]},{"word":"GeneratedCodeAttribute","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.ServiceModel\", \"4.0.0.0\")]",20773],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"PresentationBuildTasks\", \"4.0.0.0\")]",13749],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.OData.Client.Design.T4\", \"2.2.0\")]",7526],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Runtime.Serialization\", \"4.0.0.0\")]",7279],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"wsdl\", \"4.0.30319.1\")]",6560],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"astgen.boo\", \"1\")]",6060]]},{"word":"Generic","context":[["using System.Collections.Generic;",1898359],["﻿using System.Collections.Generic;",86339],["//using System.Collections.Generic;",2220],["System.Collections.Generic.List<string> _queryParameters = new System.Collections.Generic.List<string>();",1809],["System.Collections.Generic.List<string> _queryParameters = new System.Collections.Generic.List<string>();",1809],["/// <typeparam name=\"T\">Generic type parameter.</typeparam>",1451],["// Format the generic type name to something like: Generic{System.Int32,System.String}",1440],["@\"using System.Collections.Generic;",1362],["using scg = global::System.Collections.Generic;",1336],["namespace System.Collections.Generic",1253]]},{"word":"Get","context":[["/// Get/Set",27631],["/// Get",21815],["httpRequest.Method = HttpMethod.Get;",4639],["Get();",3387],["End Get",3249],["Get",3220],["///<summary> A Get Method for Static Variables </summary>",2764],["return _signInManager ?? HttpContext.GetOwinContext().Get<ApplicationSignInManager>();",2728],["/// code returned for the Get Operation Status operation itself. If",2531],["// Get the information about the user from the external login provider",2462]]},{"word":"GetEnumerator","context":[["IEnumerator IEnumerable.GetEnumerator()",18212],["return GetEnumerator();",11337],["System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()",7278],["public IEnumerator<T> GetEnumerator()",5204],["return this.GetEnumerator();",4457],["public IEnumerator GetEnumerator()",4272],["IEnumerator IEnumerable.GetEnumerator() {",1532],["public Enumerator GetEnumerator()",1275],["IEnumerator<T> IEnumerable<T>.GetEnumerator()",1127],["public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()",1091]]},{"word":"GetHashCode","context":[["public override int GetHashCode()",63011],["public override int GetHashCode() {",8218],["public virtual int GetHashCode() {}",6796],["return base.GetHashCode();",5034],["public override int GetHashCode ()",2661],["public override int GetHashCode() { throw null; }",2646],["public override int GetHashCode() /* MethodBuilder.Create */",2370],["public override int GetHashCode() { return default(int); }",2121],["return obj.GetHashCode();",1692],["hashCode ^= parameterName.ToUpperInvariant().GetHashCode();",1424]]},{"word":"GetString","context":[["get { return Resources.GetString(\"Target\"); }",6676],["return ResourceManager.GetString(\"ApplicationTitle\", resourceCulture);",1483],["return ResourceManager.GetString(\"ResourceLanguage\", resourceCulture);",1468],["return ResourceManager.GetString(\"ResourceFlowDirection\", resourceCulture);",1463],["return ResourceManager.GetString(\"AppBarButtonText\", resourceCulture);",1337],["return ResourceManager.GetString(\"AppBarMenuItemText\", resourceCulture);",1336],["var jsonRequest = UTF8Encoding.UTF8.GetString(internalRequest.Content);",744],["return ResourceManager.GetString(\"Cancel\", resourceCulture);",417],["public string GetString()",370],["String.Format(Catalog.GetString(",354]]},{"word":"GetType","context":[["public Type GetType() {}",6807],["throw new ObjectDisposedException(this.GetType().FullName);",3724],["Assert.Equal(csException.GetType(), etException.GetType());",3119],["Assert.Equal(csException.GetType(), etException.GetType());",3119],["formatter.GetType().Name,",2861],["_thisType = this.GetType();",2317],["Assert.Equal(expectedEx.GetType(), creationEx.GetType());",2248],["Assert.Equal(expectedEx.GetType(), creationEx.GetType());",2248],["throw new ObjectDisposedException(GetType().Name);",1936],["if (GetType () == ThresholdType)",1598]]},{"word":"GetValue","context":[["NetRuntimeSystem.Reflection.BindingFlags.NonPublic).GetValue(this);",1737],["return possibleValues.GetValue(0);",1431],["string strSchema = ((string)(info.GetValue(\"XmlSchema\", typeof(string))));",1078],["NetRuntimeSystem.Reflection.BindingFlags.Instance).GetValue(this);",579],["public override object GetValue(object component)",524],["var frameSessionKey = (String)frame.GetValue(FrameSessionStateKeyProperty);",482],["var frameState = (Dictionary<String, Object>)frame.GetValue(FrameSessionStateProperty);",482],["if (frame.GetValue(FrameSessionStateKeyProperty) != null)",482],["SessionState.Remove((String)frame.GetValue(FrameSessionStateKeyProperty));",481],["if (frame.GetValue(FrameSessionStateProperty) != null)",481]]},{"word":"Gets","context":[["///<summary>Gets the REST path.</summary>",10082],["///<summary>Gets the HTTP method.</summary>",10082],["///<summary>Gets the method name.</summary>",10082],["/// Gets the local name of the element.",3912],["/// Gets the type ID of the element.",3908],["/// <summary>Gets or sets the body of this request.</summary>",3833],["///Gets or sets the test context which provides",3536],["/// Gets the singleton.",3222],["/// Gets or sets the name.",2193],["/// Gets the hash code",2029]]},{"word":"Globalization","context":[["using System.Globalization;",158819],["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["internal static global::System.Globalization.CultureInfo Culture {",26565],["internal static global::System.Globalization.CultureInfo Culture",12307],["public static global::System.Globalization.CultureInfo Culture {",5166],["public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038],["public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038],["﻿using System.Globalization;",1947],["public static global::System.Globalization.CultureInfo Culture",1126],["[SuppressMessage(\"Microsoft.Globalization\", \"CA1303:Do not pass literals as localized parameters\",",1120]]},{"word":"Google","context":[["private readonly Google.Apis.Services.IClientService service;",3132],["using Microsoft.Owin.Security.Google;",2304],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["//     * Neither the name of Google Inc. nor the names of its",1953],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["\"pageToken\", new Google.Apis.Discovery.Parameter",1561]]},{"word":"Graphics","context":[["using Microsoft.Xna.Framework.Graphics;",17824],["using OpenRA.Graphics;",4148],["using OpenTK.Graphics.OpenGL;",2880],["using Android.Graphics;",1912],["using OpenTK.Graphics;",1693],["Graphics g = e.Graphics;",1527],["Graphics g = e.Graphics;",1527],["Graphics Engine OGRE, which can be found at http://ogre.sourceforge.net.",1486],["using Windows.Graphics.Display;",1306],["Axiom Graphics Engine Library",1189]]},{"word":"Guid","context":[["public Guid Id { get; set; }",6584],["_httpRequest.Headers.TryAddWithoutValidation(\"x-ms-client-request-id\", Guid.NewGuid().ToString());",2962],["Id = Guid.NewGuid(),",2307],["_httpRequest.Headers.TryAddWithoutValidation(\"x-ms-client-request-id\", System.Guid.NewGuid().ToString());",2018],["{ typeof(Guid), index => Guid.NewGuid() },",1416],["{ typeof(Guid), index => Guid.NewGuid() },",1416],["public Guid Id",1285],["var id = Guid.NewGuid();",1240],["[In, MarshalAs(UnmanagedType.LPStruct)] Guid guidKey,",1218],["return Guid.Empty;",1147]]},{"word":"Handle","context":[["//Handle exception based on policy",2538],["#region Handle transaction rollback and exception",2470],["#endregion Handle transaction rollback and exception",2470],["// Handle navigation failures",1860],["// Handle reset requests for clearing the backstack",1424],["// Handle when your app resumes",1204],["// Handle when your app sleeps",1202],["// Handle when your app starts",1187],["} // Handle",1096],["ErrorHandler.Handle(ex);",1034]]},{"word":"Headers","context":[["// Set Headers",22162],["using System.Net.Http.Headers;",17882],["/// Headers that will be added to request.",13974],["_httpRequest.Headers.Remove(_header.Key);",11093],["if (_httpRequest.Headers.Contains(_header.Key))",11093],["_httpRequest.Headers.TryAddWithoutValidation(_header.Key, _header.Value);",11093],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["_httpRequest.Headers.Remove(\"accept-language\");",5302]]},{"word":"Height","context":[["public int Height",3038],["Height = height;",2039],["public int Height { get; set; }",2018],["this.Height = height;",1274],["public int Height;",975],["public double Height",905],["public int Height { get; private set; }",800],["public int Height {",553],["for (int y = 0; y < Height; y++)",541],["int height = image.Height;",501]]},{"word":"Http","context":[["using System.Net.Http;",52763],["using System.Web.Http;",48439],["using System.Net.Http.Headers;",17882],["using System.Web.Http.Description;",10077],["using System.Web.Http.Controllers;",6909],["System.Net.Http.HttpResponseMessage _httpResponse = null;",4774],["using System.Net.Http.Formatting;",3794],["System.Net.Http.HttpRequestMessage _httpRequest = new System.Net.Http.HttpRequestMessage();",2844],["System.Net.Http.HttpRequestMessage _httpRequest = new System.Net.Http.HttpRequestMessage();",2844],["﻿using System.Web.Http;",2582]]},{"word":"HttpPost","context":[["[HttpPost]",91289],["[HttpPost, ActionName(\"Delete\")]",2871],["//[HttpPost]",807],["[HttpPost, ActionName(\"Edit\")]",766],["[HttpPost, GridAction(EnableCustomBinding = true)]",625],["[HttpPost, ValidateAntiForgeryToken]",424],["[HttpPost, ActionName(\"Create\")]",331],["[HttpPost, ParameterBasedOnFormName(\"save-continue\", \"continueEditing\")]",288],["[HttpPost, DbTransaction]",278],["[HttpPost, ParameterBasedOnFormNameAttribute(\"save-continue\", \"continueEditing\")]",262]]},{"word":"HttpResponseMessage","context":[["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError));",26327],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.Forbidden));",25647],["throw new HttpResponseException(new HttpResponseMessage",24125],["HttpResponseMessage httpResponse = null;",8929],["HttpResponseMessage _httpResponse = null;",5486],["System.Net.Http.HttpResponseMessage _httpResponse = null;",4774],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.MethodNotAllowed));",3112],["// Do the sample generation based on formatters only if an action doesn't return an HttpResponseMessage.",1431],["if (type != null && !typeof(HttpResponseMessage).IsAssignableFrom(type))",1417],["public Task<HttpResponseMessage> ExecuteAsync(CancellationToken cancellationToken)",939]]},{"word":"HttpStatusCode","context":[["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError));",26327],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.Forbidden));",25647],["StatusCode = HttpStatusCode.InternalServerError",24167],["HttpStatusCode statusCode = httpResponse.StatusCode;",11154],["HttpStatusCode _statusCode = _httpResponse.StatusCode;",8249],["return new HttpStatusCodeResult(HttpStatusCode.BadRequest);",7388],["if (statusCode != HttpStatusCode.OK)",5514],["if (statusCode == HttpStatusCode.OK)",4594],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.MethodNotAllowed));",3112],["Assert.Equal(HttpStatusCode.OK, response.StatusCode);",2903]]},{"word":"I","context":[["/// An I/O error occurred.",3577],["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"describeContents\", \"()I\", AccessFlags = 1)]",2578],["interface I",2350],["[Dot42.DexImport(\"hashCode\", \"()I\", AccessFlags = 1)]",2203],["[Dot42.DexImport(\"<init>\", \"(I)V\", AccessFlags = 1)]",1575],["testRunner.And(\"I hit \\\"Save\\\"\", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), \"And \");",1258],["class C : I",1167],["/// <exception cref=\"T:System.IO.IOException\">An I/O error occurs. </exception>",1066],["case 'I':",910]]},{"word":"ICollection","context":[["public ICollection<System.Web.Mvc.SelectListItem> Providers { get; set; }",3038],["bool ICollection.IsSynchronized",1749],["object ICollection.SyncRoot",1603],["void ICollection.CopyTo(Array array, int index)",1528],["genericTypeDefinition == typeof(ICollection<>))",1414],["type == typeof(ICollection))",1414],["Type closedCollectionType = typeof(ICollection<>).MakeGenericType(genericArguments[0]);",1411],["public ICollection<string> Keys",1116],["public ICollection<SelectListItem> Providers { get; set; }",924],["public ICollection<TKey> Keys",916]]},{"word":"ID","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID",6708],["public int ID { get; set; }",6328],["/// request ID.",6069],["/// Gets the type ID of the element.",3908],["public long ID { get; set; }",3819],["switch (field.ID)",3162],["// Die folgende GUID bestimmt die ID der Typbibliothek, wenn dieses Projekt für COM verfügbar gemacht wird",3048],["/// <summary> System ID </summary>",2726],["field.ID = 1;",2556]]},{"word":"IDictionary","context":[["if (typeof(IDictionary).IsAssignableFrom(type))",1566],["public static void SetSampleObjects(this HttpConfiguration config, IDictionary<Type, object> sampleObjects)",1443],["if (type == typeof(IDictionary))",1434],["public IDictionary<HelpPageSampleKey, Type> ActualHttpMessageTypes { get; internal set; }",1432],["public IDictionary<HelpPageSampleKey, object> ActionSamples { get; internal set; }",1432],["public IDictionary<Type, object> SampleObjects { get; internal set; }",1432],["public IDictionary<MediaTypeHeaderValue, object> SampleRequests { get; private set; }",1429],["public IDictionary<MediaTypeHeaderValue, object> SampleResponses { get; private set; }",1429],["public IDictionary<MediaTypeHeaderValue, object> GetSampleRequests(ApiDescription api)",1428],["public IDictionary<MediaTypeHeaderValue, object> GetSampleResponses(ApiDescription api)",1428]]},{"word":"IEnumerable","context":[["IEnumerator IEnumerable.GetEnumerator()",18212],["System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()",7278],["#region IEnumerable Members",4329],["this IEnumerable<TSource> source,",4195],["public IEnumerable<DisplayField> GetDisplayFields()",3689],["IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);",2474],["public IEnumerable<PetaPoco.CustomField> GetCustomFields(string resourceId)",2043],["IEnumerator IEnumerable.GetEnumerator() {",1532],["public IEnumerable<dynamic> Export()",1470],["//// and have IEnumerable<string> as the body parameter or return type.",1438]]},{"word":"IEnumerator","context":[["IEnumerator IEnumerable.GetEnumerator()",18212],["System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()",7278],["public IEnumerator<T> GetEnumerator()",5204],["public IEnumerator GetEnumerator()",4272],["object IEnumerator.Current",3303],["IEnumerator IEnumerable.GetEnumerator() {",1532],["IEnumerator<T> IEnumerable<T>.GetEnumerator()",1127],["object System.Collections.IEnumerator.Current",1091],["public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()",1091],["IEnumerator IEnumerable.GetEnumerator ()",1057]]},{"word":"IList","context":[["public IList<UserLoginInfo> Logins { get; set; }",1988],["public IList<AuthenticationDescription> OtherLogins { get; set; }",1982],["public IList<UserLoginInfo> CurrentLogins { get; set; }",1980],["if (typeof(IList).IsAssignableFrom(type))",1463],["if (type == typeof(IList) ||",1414],["if (genericTypeDefinition == typeof(IList<>) ||",1414],["public IList<object> references { get; set; }",1182],["private static IList<ParameterDescription> GetParameterDescriptions(ModelDescription modelDescription)",1073],["public IList<ParameterDescription> RequestBodyParameters",1072],["public IList<ParameterDescription> ResourceProperties",1071]]},{"word":"IN","context":[["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",17822],["* DISCLAIMED. IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY",12534],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",3924],["OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",3173],["// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",2695],["// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",2695],["WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA.",1940],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",1425],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",1425]]},{"word":"IO","context":[["using System.IO;",464577],["﻿using System.IO;",11245],["using System.IO.Compression;",6207],["/// <exception cref=\"System.IO.IOException\">",4067],["global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();",3540],["using Cake.Core.IO;",2824],["using System.IO.Ports;",2350]]},{"word":"Id","context":[["public int Id { get; set; }",32950],["public string Id { get; set; }",16225],["b.HasKey(\"Id\");",7898],["Id = id;",7254],["string IMigrationMetadata.Id",6774],["public Guid Id { get; set; }",6584],["b.Property<int>(\"Id\")",5516],["public int Id",5245],["principalColumn: \"Id\",",4705],["public string Id",4593]]},{"word":"Identity","context":[["using Microsoft.AspNet.Identity;",25085],["using Microsoft.AspNet.Identity.Owin;",13703],["using Microsoft.AspNet.Identity.EntityFramework;",12499],["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["Assert.Equal(ConversionKind.Identity, semanticInfo.ImplicitConversion.Kind);",3821],["var user = UserManager.FindById(User.Identity.GetUserId());",3490],["if (User.Identity.IsAuthenticated)",3191],["#region Identity",2371],["﻿using Microsoft.AspNet.Identity;",2011],["var loginInfo = await AuthenticationManager.GetExternalLoginInfoAsync(XsrfKey, User.Identity.GetUserId());",1965]]},{"word":"If","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["// If we got this far, something failed, redisplay form",11850],["* along with this program; see the file COPYING.  If not, write to",5076],["/// the HTTP status code for the successful request. If the",2531],["/// code returned for the Get Operation Status operation itself. If",2531],["// obligated to do so.  If you do not wish to do so, delete this",2107],["// If the user does not have an account, then prompt the user to create an account",2088],["/// ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter",2053],["// If a user enters incorrect codes for a specified amount of time then the user account",1864]]},{"word":"Image","context":[["this.Frame = ((System.Windows.Controls.Image)(target));",1194],["this.Light = ((System.Windows.Controls.Image)(target));",1194],["internal System.Windows.Controls.Image Frame;",1194],["internal System.Windows.Controls.Image Light;",1194],["this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject(\"pictureBox1.Image\")));",1015],["this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject(\"pictureBox1.Image\")));",1015],["this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject(\"pictureBox1.Image\")));",1015],["public string Image { get; set; }",937],["public Image Image",854],["public Image Image",854]]},{"word":"ImmutableArray","context":[["public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics",3524],["return ImmutableArray.Create(Rule);",1969],["ImmutableArray.Create(",1331],["public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics => ImmutableArray.Create(Rule);",1028],["public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics => ImmutableArray.Create(Rule);",1028],["public override ImmutableArray<Location> Locations",718],["public override ImmutableArray<SyntaxReference> DeclaringSyntaxReferences",565],["return ImmutableArray<NamedTypeSymbol>.Empty;",472],["public override ImmutableArray<string> FixableDiagnosticIds",462],["ImmutableArray<AssemblyIdentity> missingAssemblyIdentities;",450]]},{"word":"In","context":[["//In order to begin building localizable applications, set",8486],["// This method is invoked when the application has loaded and is ready to run. In this",1457],["// In order to sign your assembly you must specify a key to use. Refer to the",1296],["//   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.",1227],["[In, MarshalAs(UnmanagedType.LPStruct)] Guid guidKey,",1218],["/// Returns a function that Performs In, then Merge. Parameter lists are merged.",982],["public void In(",964],["[In]",727],["[In] Int32 BufferSize,",680],["subsequent Recipients to identify the originator of the Modification. In fulfillment of these",631]]},{"word":"Index","context":[["public ActionResult Index()",20838],["return RedirectToAction(\"Index\");",14712],["return RedirectToAction(\"Index\", \"Home\");",10309],["defaults: new { controller = \"Home\", action = \"Index\", id = UrlParameter.Optional }",7060],["return RedirectToAction(\"Index\", \"Manage\");",4652],["// GET: /Manage/Index",1830],["public IActionResult Index()",1764],["public int Index",1737],["public int Index { get; set; }",1697],["Index = index;",1694]]},{"word":"Info","context":[["case LogLevel.Info:",1783],["Info,",1535],["Info = info;",1173],["if (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info)",724],["Additional Info:",661],["public void Info(string message)",608],["Log.Info(\"Calling CreateImprovement\");",537],["public abstract class Info",511],["DiagnosticSeverity.Info,",472],["Dhgms.Nucleotide.Model.Info.CollectionType.None,",366]]},{"word":"Information","context":[["// General Information about an assembly is controlled through the following",263447],["// Information about this assembly is defined by the following attributes.",8530],["#region Type Information",3697],["#endregion SVN Version Information",1241],["#region SVN Version Information",1241],["MessageBoxIcon.Information);",1023],["//  * Open Behavioral Health Information Technology Architecture (OBHITA.org)",796],["MessageBoxButtons.OK, MessageBoxIcon.Information);",754],["* \\section ApiInfo API Version Information",588],["* \\section ForMoreInfo For More Information",588]]},{"word":"Initialize","context":[["Initialize();",13535],["public void Initialize()",8988],["base.Initialize();",6903],["public override void Initialize()",6341],["public static void Initialize()",6257],["protected override void Initialize()",5189],["public override void Initialize(AnalysisContext context)",4865],["private void Initialize()",4545],["this.Initialize();",3337],["Initialize ();",2181]]},{"word":"InitializeComponent","context":[["InitializeComponent();",150032],["private void InitializeComponent()",79069],["this.InitializeComponent();",26673],["public void InitializeComponent() {",9240],["/// InitializeComponent",9198],["private void InitializeComponent() {",5014],["public void InitializeComponent()",1761],["InitializeComponent ();",1321],["// TODO: Add any constructor code after InitializeComponent call",1040],["app.InitializeComponent();",1023]]},{"word":"Initializes","context":[["/// Initializes the singleton application object.  This is the first line of authored code",5125],["/// Initializes a new instance of the",3848],["/// <summary>Initializes List parameter list.</summary>",2131],["/// <summary>Initializes Get parameter list.</summary>",1773],["/// Initializes a new instance of the <see cref=\"XmlDocumentationProvider\"/> class.",1419],["/// Initializes a new instance of the <see cref=\"HelpPageApiModel\"/> class.",1415],["/// Initializes a new instance of the <see cref=\"HelpPageSampleGenerator\"/> class.",1414],["/// Initializes a new instance of the <see cref=\"ImageSample\"/> class.",1394],["/// Initializes a new instance.",1080],["/// <summary>Initializes Delete parameter list.</summary>",1043]]},{"word":"Input","context":[["using System.Windows.Input;",64835],["using Windows.UI.Xaml.Input;",16170],["using Microsoft.Xna.Framework.Input;",7824],["//Input",1733],["this.Light.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.Light_MouseWheel);",1191],["this.Frame.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.Light_MouseWheel);",1191],["/// <item>Input    ::= ParameterName: Value [, Input]*</item>",999],["/// <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>",999],["/// <item>Input    ::= ParameterName: Value [, Input]*</item>",999],["/// <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>",999]]},{"word":"Instance","context":[["var unmarshaller = StringUnmarshaller.Instance;",6180],["#region Instance Fields",4896],["T = NullLocalizer.Instance;",3845],["Logger = NullLogger.Instance;",2397],["Instance = this;",2359],["oconPCS = new OleDbConnection(Utils.Instance.OleDbConnectionString);",2190],["NetRuntimeSystem.Reflection.BindingFlags.Instance |",1737],["#region Public Instance Properties",1607],["/// <param name=\"sender\">Instance that triggered the event.</param>",1551],["#region Private Instance Fields",1529]]},{"word":"Int32","context":[["case TypeCode.Int32:",5056],["/// A <see cref=\"T:Int32\"/>.",2576],["System.Int32 a1;",1795],["// Format the generic type name to something like: Generic{System.Int32,System.String}",1440],["{ typeof(Int32), index => (Int32)(index % Int32.MaxValue) },",1399],["{ typeof(Int32), index => (Int32)(index % Int32.MaxValue) },",1399],["{ typeof(Int32), index => (Int32)(index % Int32.MaxValue) },",1399],["System.Int32 a2;",1214],["{ typeof(Int32), \"integer\" },",1049],["public Int32 Count",933]]},{"word":"IntPtr","context":[["IntPtr.Zero,",4270],["return IntPtr.Zero;",3876],["if( System.IntPtr.Size == 4 )",3251],["global::System.IntPtr a0,",2559],["static public void reg(IntPtr l) {",2512],["__Instance = new global::System.IntPtr(native);",1869],["static public int constructor(IntPtr l) {",1838],["internal static extern void ctor_0(global::System.IntPtr instance);",1729],["if (_pNative == RootSystem.IntPtr.Zero)",1689],["internal static extern void dtor_0(global::System.IntPtr instance);",1543]]},{"word":"Internal","context":[["using Amazon.Runtime.Internal;",16088],["using Amazon.Runtime.Internal.Transform;",9518],["using Amazon.Runtime.Internal.Util;",7619],["#region Internal Methods",3155],[": this((Internal*) null)",2495],["namespace Amazon.EC2.Model.Internal.MarshallTransformations",1442],["public new partial struct Internal",1427],["// Internal state.",1337],["#region Internal Properties",1329],["Internal.ctor_0(__Instance);",1250]]},{"word":"InteropServices","context":[["using System.Runtime.InteropServices;",418618],["[System.Runtime.InteropServices.ComVisibleAttribute(true)]",16110],["using System.Runtime.InteropServices.WindowsRuntime;",14860],["[System.Runtime.InteropServices.ComVisibleAttribute(false)]",7692],["[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]",6272],["[System.Runtime.InteropServices.ComVisible(true)]",5824],["[System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]",4295],["[System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]",4295],["global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();",3951],["[System.Runtime.InteropServices.ComVisible(false)]",2734]]},{"word":"InvalidOperationException","context":[["throw new InvalidOperationException();",25457],["throw new InvalidOperationException(",10697],["/// <exception cref=\"InvalidOperationException\">",8510],["catch (InvalidOperationException)",5936],["[ExpectedException(typeof(InvalidOperationException))]",3462],["/// <exception cref=\"System.InvalidOperationException\">",3248],["catch (InvalidOperationException ex)",2008],["throw new InvalidOperationException(\"never reached\");",1969],["throw new InvalidOperationException ();",1963],["throw new InvalidOperationException(message);",1679]]},{"word":"InvariantCulture","context":[["CultureInfo.InvariantCulture,",6820],["var outWriter = new StringWriter(CultureInfo.InvariantCulture);",3401],["outWriter = new StringWriter(CultureInfo.InvariantCulture);",2383],["Assert.AreEqual (string.Format (CultureInfo.InvariantCulture,",1956],["name += String.Format(CultureInfo.InvariantCulture, \"({0})\", String.Join(\",\", parameterTypeNames));",1416],["Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;",1398],["throw new BuildException(string.Format(CultureInfo.InvariantCulture,",1253],["string selectExpression = String.Format(CultureInfo.InvariantCulture, TypeExpression, controllerTypeName);",1185],["string.Format(CultureInfo.InvariantCulture,",1077],["name = String.Format(CultureInfo.InvariantCulture, \"{0}{{{1}}}\", genericTypeName, String.Join(\",\", argumentTypeNames));",1058]]},{"word":"Invoker","context":[["object[] paramsArray = Invoker.ValidateParamsArray(value);",27376],["object returnItem = Invoker.PropertyGet(this, \"Parent\", paramsArray);",1904],["Invoker.ReleaseParamsArray();",1828],["object returnItem = Invoker.PropertyGet(this, \"Application\", paramsArray);",1806],["object[] paramsArray = Invoker.ValidateParamsArray(pEvtObj);",1406],["object[] paramsArray = Invoker.ValidateParamsArray(index);",1328],["object returnItem = Invoker.MethodReturn(this, \"Add\", paramsArray);",1133],["object returnItem = Invoker.PropertyGet(this, \"Creator\", paramsArray);",1115],["object returnItem = Invoker.PropertyGet(this, \"Count\", paramsArray);",837],["object returnItem = Invoker.PropertyGet(this, \"Name\", paramsArray);",608]]},{"word":"Is","context":[["Assert.That( result, Is.Not.Null );",16519],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["Assert.That(result.Count(), Is.EqualTo(1));",1559],["Assert.That(result, Is.Not.Null);",1309],["Assert.That( result.Value, Is.InstanceOf( target.Value.GetType() ) );",1276],["Assert.That(result, Is.True);",1086],["Assert.That( result.Polymorphic, Is.EqualTo( target.Polymorphic ) );",880],["Assert.That( result.Polymorphic, Is.InstanceOf( target.Polymorphic.GetType() ) );",880],["Assert.That(result.Count(), Is.EqualTo(0));",821],["Assert.That(actual, Is.EqualTo(expected));",801]]},{"word":"IsNotNull","context":[["Assert.IsNotNull(result);",10504],["Assert.IsNotNull(actual);",3204],["Assert.IsNotNull (ex.Message, \"#4\");",2736],["Assert.IsNotNull(element);",2197],["Assert.IsNotNull(response);",1391],["Assert.IsNotNull(docType0);",1318],["Assert.IsNotNull(document);",970],["Assert.IsNotNull (entry as ShortIFDEntry, \"Entry is not a short!\");",965],["Assert.IsNotNull(savedRequest);",882],["Assert.IsNotNull (ex.Message, \"#A4\");",808]]},{"word":"IsNullOrEmpty","context":[["if (string.IsNullOrEmpty(value))",7361],["if (string.IsNullOrEmpty(responseContent) == false)",4425],["if (string.IsNullOrEmpty(name))",3622],["if (!String.IsNullOrEmpty(Configuration.AccessToken))",2716],["if (!string.IsNullOrEmpty(value))",2056],["if (string.IsNullOrEmpty(text))",1783],["if (string.IsNullOrEmpty(path))",1783],["if (String.IsNullOrEmpty(value))",1575],["if (!String.IsNullOrEmpty(apiId))",1400],["if (string.IsNullOrEmpty(key))",1280]]},{"word":"IsTrue","context":[["Assert.IsTrue(reader.Read());",17165],["Assert.IsTrue(result);",3987],["Assert.IsTrue(",3299],["Assert.IsTrue(Math.Abs(1 - result/(double)expected) < Tolerance, $\"result = {result}\\texpected = {expected}\");",1680],["Assert.IsTrue( result.HasValue );",967],["Assert.IsTrue(success);",833],["Assert.IsTrue(true);",813],["Assert.IsTrue(noChange);",793],["Assert.IsTrue( unpacker.Read() );",788],["Assert.IsTrue(result.IsSuccess());",664]]},{"word":"IsValid","context":[["if (ModelState.IsValid)",26985],["if (!ModelState.IsValid)",22642],["public bool IsValid",1838],["if (!this.ModelState.IsValid)",1769],["public bool IsValid()",1282],["if (this.ModelState.IsValid)",1281],["if (IsValid)",1276],["if (!ModelState.IsValid) {",986],["if (!IsValid)",890],["public override bool IsValid(object value)",843]]},{"word":"It","context":[["/// The above documentation is © Microsoft Corporation. It is reproduced here",3118],["It.IsAny<string>(),",1678],["/// during unit testing. It is not intended for consumption by users of the library and there is no",776],["such Modification causes the combination to be covered by the Covered Patents. It does not apply to",631],["/// It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.",515],["///                      It.IsAny&lt;string&gt;(),",480],["//It can be modified using the Windows Form Designer.",420],["using It = Machine.Specifications.It;",373],["using It = Machine.Specifications.It;",373],["It.IsAny<CancellationToken>()))",350]]},{"word":"Item","context":[["ParallelQuery<int> query = labeled.Item;",1921],["public class Item",1764],["new Item[]",1314],["// Item...'.",1065],["Item = item;",1045],["Item item;",900],["var project = vbe.Object.VBProjects.Item(0);",868],["[NetRuntimeSystem.Runtime.CompilerServices.IndexerName(\"Item\")]",854],["var module = project.VBComponents.Item(0).CodeModule;",822],["if (e.Item.ItemIndex > -1)",728]]},{"word":"Items","context":[["namespace Server.Items",17842],["using Server.Items;",16488],["this.menuStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {",3158],["sequence.Items.Add(any1);",2589],["sequence.Items.Add(any2);",2589],["using Sitecore.Data.Items;",2026],["this.toolStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {",1668],["this.statusStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {",1593],["sequence.Items.Add(any);",1089],["Items.Clear();",1012]]},{"word":"JToken","context":[["JToken responseDoc = null;",4405],["responseDoc = JToken.Parse(responseContent);",4405],["foreach (JToken valueValue in ((JArray)valueArray))",1517],["JToken valueArray = responseDoc[\"value\"];",1489],["JToken requestDoc = null;",1295],["JToken nameValue = responseDoc[\"name\"];",1291],["JToken idValue = responseDoc[\"id\"];",1123],["JToken propertiesValue = responseDoc[\"properties\"];",1118],["JToken propertiesValue = valueValue[\"properties\"];",1026],["JToken nameValue = valueValue[\"name\"];",968]]},{"word":"JTokenType","context":[["if (responseDoc != null && responseDoc.Type != JTokenType.Null)",4176],["if (nameValue != null && nameValue.Type != JTokenType.Null)",3095],["if (idValue != null && idValue.Type != JTokenType.Null)",2617],["if (typeValue != null && typeValue.Type != JTokenType.Null)",2292],["if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)",2174],["if (locationValue != null && locationValue.Type != JTokenType.Null)",1788],["if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)",1617],["if (valueArray != null && valueArray.Type != JTokenType.Null)",1519],["if (nameValue2 != null && nameValue2.Type != JTokenType.Null)",1141],["if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)",1064]]},{"word":"Java","context":[["return default(global::Java.Lang.ICharSequence);",2104],["return default(global::Java.Math.BigInteger);",1000],["return default(global::Java.Lang.StringBuffer);",687],["/// <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source",656],["using Java.Lang;",561],["//JAVA TO C# CONVERTER WARNING: The original Java variable was marked 'final':",558],["// Original C++/Java/Python code:",516],["return default(global::Java.Math.BigDecimal);",475],["return default(global::Java.Io.InputStream);",458],["return default(global::Java.Util.IIterator<E>);",456]]},{"word":"Json","context":[["using Newtonsoft.Json;",81375],["using Newtonsoft.Json.Linq;",29193],["﻿using Newtonsoft.Json;",14737],["using Newtonsoft.Json.Converters;",6894],["using Newtonsoft.Json.Serialization;",5457],["[Newtonsoft.Json.JsonPropertyAttribute(\"kind\")]",5147],["catch (Newtonsoft.Json.JsonException)",4070],["catch (Newtonsoft.Json.JsonException ex)",3599],["using Newtonsoft.Json.Utilities;",3470],["using ThirdParty.Json.LitJson;",3441]]},{"word":"JsonProperty","context":[["[JsonProperty]",6855],["[JsonProperty(\"name\")]",3215],["[JsonProperty(\"id\")]",3039],["[JsonProperty(\"type\")]",1630],["[JsonProperty(PropertyName = \"name\")]",1326],["[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]",1278],["[JsonProperty(PropertyName = \"id\")]",1196],["[JsonProperty(\"description\")]",1121],["[JsonProperty(\"url\")]",918],["[JsonProperty(\"status\")]",909]]},{"word":"Key","context":[["[Key]",12518],["_httpRequest.Headers.TryAddWithoutValidation(_header.Key, _header.Value);",11093],["if (_httpRequest.Headers.Contains(_header.Key))",11093],["_httpRequest.Headers.Remove(_header.Key);",11093],["public string Key { get; set; }",3655],["Key = key;",2901],["public string Key",2063],["// Primary Key",2014],["/// <param name=\"awsAccessKeyId\">AWS Access Key ID</param>",1749],["/// <param name=\"awsSecretAccessKey\">AWS Secret Access Key</param>",1741]]},{"word":"KeyValuePair","context":[["if (genericTypeDefinition == typeof(KeyValuePair<,>))",1421],["/// Key value pairs: <see cref=\"KeyValuePair{TKey,TValue}\"/>",1414],["public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()",1091],["Type keyValuePairType = typeof(KeyValuePair<,>).MakeGenericType(genericArguments);",1053],["public IEnumerator<KeyValuePair<string, object>> GetEnumerator()",830],["public bool Contains(KeyValuePair<TKey, TValue> item)",697],["public void Add(KeyValuePair<TKey, TValue> item)",686],["public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)",679],["public bool Remove(KeyValuePair<TKey, TValue> item)",678],["public void CopyTo(KeyValuePair<string, object>[] array, int arrayIndex)",654]]},{"word":"Keys","context":[["if (e.KeyCode == Keys.Enter)",1744],["case Keys.Down:",1283],["case Keys.Up:",1260],["protected override bool ProcessCmdKey(ref Message msg, Keys keyData)",1230],["case Keys.Left:",1214],["case Keys.Right:",1189],["public ICollection<string> Keys",1116],["if (e.KeyCode == Keys.Escape)",945],["public ICollection<TKey> Keys",916],["case Keys.Enter:",873]]},{"word":"Kind","context":[["public virtual string Kind { get; set; }",4426],["Assert.Equal(SyntaxKind.ClassDeclaration, file.Members[0].Kind());",4028],["Assert.Equal(ConversionKind.Identity, semanticInfo.ImplicitConversion.Kind);",3821],["Assert.Equal(SyntaxKind.MethodDeclaration, agg.Members[0].Kind());",1748],["switch (declaration.Kind())",1681],["switch (node.Kind())",1667],["switch (symbol.Kind)",1098],["Assert.Equal(SyntaxKind.ClassKeyword, cs.Keyword.Kind());",1008],["switch (this.CurrentToken.Kind)",897],["new DirectiveInfo { Kind = SyntaxKind.EndIfDirectiveTrivia, Status = NodeStatus.IsActive });",828]]},{"word":"Label","context":[["this.label1 = new System.Windows.Forms.Label();",26604],["private System.Windows.Forms.Label label1;",25419],["this.label2 = new System.Windows.Forms.Label();",19658],["private System.Windows.Forms.Label label2;",18818],["this.label3 = new System.Windows.Forms.Label();",14775],["private System.Windows.Forms.Label label3;",14122],["this.label4 = new System.Windows.Forms.Label();",11471],["private System.Windows.Forms.Label label4;",10928],["this.label5 = new System.Windows.Forms.Label();",8929],["private System.Windows.Forms.Label label5;",8471]]},{"word":"Landroid","context":[["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"CREATOR\", \"Landroid/os/Parcelable$Creator;\", AccessFlags = 25)]",2188],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;Landroid/util/AttributeSet;)V\", AccessFlags = 1)]",965],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;Landroid/util/AttributeSet;)V\", AccessFlags = 1)]",965],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;)V\", AccessFlags = 1)]",963],["[Dot42.DexImport(\"CONTENT_URI\", \"Landroid/net/Uri;\", AccessFlags = 25)]",864],["[Dot42.DexImport(\"<init>\", \"(Landroid/os/Parcel;)V\", AccessFlags = 1)]",724],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;Landroid/util/AttributeSet;I)V\", AccessFlags = 1)]",458],["[Dot42.DexImport(\"<init>\", \"(Landroid/content/Context;Landroid/util/AttributeSet;I)V\", AccessFlags = 1)]",458],["[Dot42.DexImport(\"draw\", \"(Landroid/graphics/Canvas;)V\", AccessFlags = 1)]",347]]},{"word":"Left","context":[["| System.Windows.Forms.AnchorStyles.Left)",21496],["if (e.Button == MouseButtons.Left)",3294],["| System.Windows.Forms.AnchorStyles.Left)));",2921],["Left,",2819],["case Keys.Left:",1214],["/// <param name=\"vector\">Left operand.</param>",906],["Left = left;",847],["public int Left;",645],["case Direction.Left:",494],["(virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||",492]]},{"word":"Length","context":[["for (int i = 0; i < array.Length; i++)",8147],["baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);",7732],["if (baseUrl[baseUrl.Length - 1] == '/')",7722],["for (int i = 0; i < values.Length; i++)",5186],["public override long Length",4298],["for (int i = 0; i < result.Length; i++)",4225],["if (attributes.Length == 0)",3820],["if( (true == _eventClass.IsCurrentlyDisposing) || (recipients.Length == 0) )",3570],["for (; ((s1.Position != s1.Length)",3517],["if ((s1.Length == s2.Length)) {",3491]]},{"word":"Linq","context":[["using System.Linq;",1359443],["using System.Linq.Expressions;",49410],["using System.Xml.Linq;",34701],["using Newtonsoft.Json.Linq;",29193],["﻿using System.Linq;",15264],["using System.Reactive.Linq;",9040],["throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();",4758],["partial void OnValidate(System.Data.Linq.ChangeAction action);",4617],["using System.Data.Linq;",4484],["using System.Data.Linq.Mapping;",3160]]},{"word":"List","context":[["List<string> queryParameters = new List<string>();",5818],["List<string> queryParameters = new List<string>();",5818],["List<string> _queryParameters = new List<string>();",4126],["List<string> _queryParameters = new List<string>();",4126],["List<EntityParser.Filter> filters = this.GetFilters(this._Catalog, filterName);",3104],["return RedirectToAction(\"List\");",2867],["List<EntityParser.Filter> f = filters.ToObject<List<EntityParser.Filter>>(JsonHelper.GetJsonSerializer());",2774],["List<EntityParser.Filter> f = filters.ToObject<List<EntityParser.Filter>>(JsonHelper.GetJsonSerializer());",2774],["/// The NextLink from the previous successful call to List operation.",2416],["List<string> list = new List<string>();",2227]]},{"word":"Ljava","context":[["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/Throwable;)V\", AccessFlags = 1)]",1075],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/Throwable;)V\", AccessFlags = 1)]",1075],["[Dot42.DexImport(\"clone\", \"()Ljava/lang/Object;\", AccessFlags = 1)]",1064],["[Dot42.DexImport(\"getName\", \"()Ljava/lang/String;\", AccessFlags = 1)]",995],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/Throwable;)V\", AccessFlags = 1)]",975],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/String;)V\", AccessFlags = 1)]",923],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/String;)V\", AccessFlags = 1)]",923]]},{"word":"Load","context":[["//TODO: Load state from previously suspended application",3637],["public override void Load()",3235],["this.Load += new System.EventHandler(this.Form1_Load);",2906],["public void Load()",2551],["Load();",2510],["protected override void Load(ContainerBuilder builder)",1543],["// TODO: Load state from previously suspended application",1372],["this.Load += new System.EventHandler(this.MainForm_Load);",1232],["this.Load += new System.EventHandler(this.Page_Load);",1161],["/// Handles the Load event of the Page control.",776]]},{"word":"Location","context":[["public string Location { get; set; }",3695],["this.menuStrip1.Location = new System.Drawing.Point(0, 0);",3025],["Location = location;",1682],["this.panel1.Location = new System.Drawing.Point(0, 0);",1605],["this.tableLayoutPanel1.Location = new System.Drawing.Point(0, 0);",1575],["this.label1.Location = new System.Drawing.Point(12, 9);",1505],["this.tabPage1.Location = new System.Drawing.Point(4, 22);",1415],["this.splitContainer1.Location = new System.Drawing.Point(0, 0);",1364],["this.tabPage2.Location = new System.Drawing.Point(4, 22);",1266],["public string Location",1255]]},{"word":"Log","context":[["Log.Error(ex);",1966],["using Microsoft.CodeAnalysis.Internal.Log;",1225],["using (var activity = Log.Enter(() => new { param }))",1000],["public bool Log(LogLevel logLevel, Func<string> messageFunc, Exception exception, params object[] formatParameters)",960],["Log.Error(err);",837],["// Log error message into log file.",802],["private static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);",636],["Log.Error(exception);",593],["Site.Log.Add(LogEntryKind.Debug,",586],["LogManager.Log(",558]]},{"word":"Logger","context":[["Global.Logger.AddItem(new LogItem(ex));",5330],["public ILogger Logger { get; set; }",2859],["Logger = NullLogger.Instance;",2397],["Logger.LogMessage(ex, METHOD_NAME, Level.ERROR);",1766],["Logger.LogMessage(ex.CauseException, METHOD_NAME, Level.ERROR);",1406],["Logger.Error(ex);",1388],["var provider = new PetaPocoUnitOfWorkProvider(Logger);",1299],["private static readonly Logger Logger = LogManager.GetCurrentClassLogger();",1124],["private static readonly Logger Logger = LogManager.GetCurrentClassLogger();",1124],["Logger = logger;",1068]]},{"word":"Looks","context":[["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["///   Looks up a localized resource of type System.Byte[].",3534],["///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).",3469],["///   Looks up a localized string similar to .",1543],["///   Looks up a localized string similar to LeftToRight.",1364],["///   Looks up a localized string similar to MY APPLICATION.",1238],["///   Looks up a localized string similar to us-EN.",1024],["///   Looks up a localized string similar to menu item.",1009],["///   Looks up a localized string similar to button.",981],["///   Looks up a localized string similar to Name.",939]]},{"word":"M","context":[["void M()",19465],["static void M()",7750],["CompileAndVerifyIL(source, \"C.M\", @\"",3066],["public void M()",2838],["public void M() {",2349],["void M() {",1634],["private const string MethodExpression = \"/doc/members/member[@name='M:{0}']\";",1435],["var context = CreateMethodContext(runtime, \"C.M\");",1279],["methodName: \"C.M\");",1187],["methodName: \"C.M\",",1067]]},{"word":"Main","context":[["static void Main()",95606],["static void Main(string[] args)",75227],["public static void Main()",39282],["public static void Main(string[] args)",14997],["public static int Main()",12759],["private static void Main(string[] args)",4353],["static int Main()",2921],["void Main()",2912],["public static void Main(string[] args) {",2685],["public static int Main(string[] args)",2651]]},{"word":"Major","context":[["//      Major Version",251287],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["// and \"{Major}.{Minor}.{Build}.*\" will update just the revision.",8393],["// The form \"{Major}.{Minor}.*\" will automatically update the build and revision,",8385],["// Major.Minor.Build.Revision",1340],["internal const Severity RuleSeverity = Severity.Major;",427],["// Major Version Minor Version Build Number Revision",378],["packaging a Major Component, but which is not part of that Major",319],["Major Component, or to implement a Standard Interface for which an",319],["packaging a Major Component, but which is not part of that Major",319]]},{"word":"Management","context":[["using System.Management.Automation;",19304],["using System.Management;",2391],["using System.Management.Automation.Runspaces;",1374],["using Microsoft.Azure.Management.SiteRecovery.Models;",1023],["using Microsoft.Azure.Management.Resources;",955],["namespace System.Management.Automation",879],["using System.Management.Automation.Internal;",852],["/// Required. The name of the Api Management service.",833],["using Microsoft.WindowsAzure.Management.Compute.Models;",800],["using Microsoft.Azure.Management.Compute.Models;",769]]},{"word":"Manager","context":[["KeePass Password Safe - The Open-Source Password Manager",2112],["this.Manager.EndTest();",1789],["this.Manager.Checkpoint(\"MS-SMB_R8380\");",1620],["this.Manager.Comment(\"checking step \\'return CheckRequirementEnabled/[out False]\\'\");",1203],["this.Manager.Comment(\"checking step \\'return CheckRequirementEnabled/[out True]\\'\");",1203],["this.Manager.Checkpoint(\"MS-SMB_R2322\");",1054],["this.Manager.Comment(\"This step would have covered MS-SMB_R2322, MS-SMB_R8380\");",1054],["this.Manager.Comment(\"checking step \\'return SessionClose\\'\");",892],["this.Manager.Comment(\"executing step \\'call SessionClose(1)\\'\");",892],["this.Manager.Checkpoint(\"MS-SMB_R2299\");",892]]},{"word":"MarshalAs","context":[["[return: MarshalAs(UnmanagedType.Bool)]",12764],["[MarshalAs(UnmanagedType.FunctionPtr)]",4267],["[return: MarshalAs(UnmanagedType.I1)]",4056],["[MarshalAs(UnmanagedType.LPWStr)]",3072],["[return: MarshalAs(UnmanagedType.Interface)]",2799],["[MarshalAs(UnmanagedType.I4)]",1967],["[MarshalAs(UnmanagedType.U4)]",1395],["[MarshalAs(UnmanagedType.I1)]",1393],["[return: MarshalAs(UnmanagedType.BStr)]",1376],["[In, MarshalAs(UnmanagedType.LPStruct)] Guid guidKey,",1218]]},{"word":"Math","context":[["// Math.NET Numerics, part of the Math.NET Project",3558],["// Math.NET Numerics, part of the Math.NET Project",3558],["using Accord.Math;",3009],["Assert.IsTrue(Math.Abs(1 - result/(double)expected) < Tolerance, $\"result = {result}\\texpected = {expected}\");",1680],["using Org.BouncyCastle.Math;",1623],["return default(global::Java.Math.BigInteger);",1000],["using WaveEngine.Common.Math;",950],["﻿// Accord Math Library",803],["var typeCode = ( byte )( Math.Abs( Environment.TickCount ) % 128 );",756],["const float rad2deg = (float)(180 / Math.PI);",587]]},{"word":"MaxValue","context":[["any1.MaxOccurs = decimal.MaxValue;",2583],["MissileSpeed = int.MaxValue,",2054],["MissileSpeed = int.MaxValue",1721],["{ typeof(UInt16), index => (UInt16)(index % UInt16.MaxValue) },",1400],["{ typeof(UInt32), index => (UInt32)(index % UInt32.MaxValue) },",1400],["{ typeof(Int16), index => (Int16)(index % Int16.MaxValue) },",1399],["{ typeof(Int32), index => (Int32)(index % Int32.MaxValue) },",1399],["return int.MaxValue;",1033],["byte.MaxValue,",934],["return DateTime.MaxValue;",643]]},{"word":"Media","context":[["using System.Windows.Media;",61423],["using System.Windows.Media.Imaging;",39137],["using System.Windows.Media.Animation;",18928],["using Windows.UI.Xaml.Media;",18490],["using System.Windows.Media.Media3D;",9366],["using System.Windows.Media.Effects;",7259],["using System.Windows.Media.TextFormatting;",7176],["using Microsoft.Xna.Framework.Media;",3139],["using Windows.UI.Xaml.Media.Animation;",2699],["using Windows.UI.Xaml.Media.Imaging;",2479]]},{"word":"Members","context":[["#region IDisposable Members",8067],["Assert.Equal(1, file.Members.Count);",5163],["#region Members",5086],["#region IEnumerable Members",4329],["#region Private Members",4235],["Assert.Equal(SyntaxKind.ClassDeclaration, file.Members[0].Kind());",4028],["#region [ Members ]",2980],["var agg = (TypeDeclarationSyntax)file.Members[0];",2457],["Assert.Equal(1, agg.Members.Count);",1962],["Assert.Equal(SyntaxKind.MethodDeclaration, agg.Members[0].Kind());",1748]]},{"word":"MemoryStream","context":[["using ( var buffer = new MemoryStream() )",20575],["MemoryStream ms = new MemoryStream();",5883],["MemoryStream ms = new MemoryStream();",5883],["using (MemoryStream ms = new MemoryStream())",4109],["using (MemoryStream ms = new MemoryStream())",4109],["using (var ms = new MemoryStream())",4000],["global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();",3540],["global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();",3540]]},{"word":"Message","context":[["Content = new StringContent(ex.Message),",24152],["public string Message { get; set; }",7846],["Console.WriteLine(ex.Message);",5355],["MessageBox.Show(ex.Message);",4633],["Console.WriteLine(e.Message);",4163],["Message = message;",3936],["public string Message",3444],["Assert.IsNotNull (ex.Message, \"#4\");",2736],["ViewBag.Message = \"Your contact page.\";",2713],["ex = new CloudException(_errorBody.Message);",2307]]},{"word":"Method","context":[["[AttributeUsage(AttributeTargets.Method)]",6236],["void Method()",5916],["#region Extensibility Method Definitions",5635],["[AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Method)]",4985],["httpRequest.Method = HttpMethod.Get;",4639],["_httpRequest.Method = new HttpMethod(\"GET\");",3356],["///<summary> A Get Method for Static Variables </summary>",2764],["///<summary> A Set Method for Static Variables </summary>",2760],["#region Factory Method",2555],["request.Method = \"POST\";",2524]]},{"word":"MethodBuilder","context":[["public override string ToString() /* MethodBuilder.Create */",5239],["public override int GetHashCode() /* MethodBuilder.Create */",2370],["public virtual int DescribeContents() /* MethodBuilder.Create */",1881],["public override void Close() /* MethodBuilder.Create */",1056],["public virtual void WriteToParcel(global::Android.Os.Parcel dest, int flags) /* MethodBuilder.Create */",901],["public override bool Equals(object @object) /* MethodBuilder.Create */",833],["public virtual object Clone() /* MethodBuilder.Create */",709],["public int DescribeContents() /* MethodBuilder.Create */",698],["public virtual void WriteToParcel(global::Android.OS.Parcel dest, int flags) /* MethodBuilder.Create */",682],["public override bool Equals(object o) /* MethodBuilder.Create */",673]]},{"word":"MethodImplOptions","context":[["[MethodImpl(MethodImplOptions.AggressiveInlining)]",18546],["[MethodImplAttribute(MethodImplOptions.InternalCall)]",11417],["[MethodImpl(MethodImplOptions.NoInlining)]",8381],["[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]",8342],["[MethodImpl(MethodImplOptions.InternalCall)]",5985],["[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]",5919],["[MethodImpl(MethodImplOptions.InternalCall), WrapperlessIcall]",3281],["[MethodImpl(MethodImplOptions.Synchronized)]",2759],["[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]",2275],["[MethodImplAttribute(MethodImplOptions.NoInlining)]",1959]]},{"word":"Methods","context":[["#region Methods",50383],["#region Public Methods",21051],["#region Private Methods",14229],["// Methods",11874],["#endregion Methods",7946],["#region Public Methods and Operators",7437],["#region Methods and constructors",6184],["#region Protected Methods",4004],["#endregion Public Methods",3733],["#region Internal Methods",3155]]},{"word":"Microsoft","context":[["using Microsoft.VisualStudio.TestTools.UnitTesting;",68889],["[System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1823:AvoidUnusedPrivateFields\")]",40436],["using Microsoft.Xna.Framework;",25252],["using Microsoft.AspNet.Identity;",25085],["[assembly: AssemblyCompany(\"Microsoft\")]",21290],["using Microsoft.Xna.Framework.Graphics;",17824],["using Microsoft.CodeAnalysis;",17449],["using Microsoft.CodeAnalysis.CSharp.Syntax;",15883],["using Microsoft.CodeAnalysis.Text;",13979],["using Microsoft.AspNet.Identity.Owin;",13703]]},{"word":"Minor","context":[["//      Minor Version",251283],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["// and \"{Major}.{Minor}.{Build}.*\" will update just the revision.",8393],["// The form \"{Major}.{Minor}.*\" will automatically update the build and revision,",8385],["// Major.Minor.Build.Revision",1340],["// Major Version Minor Version Build Number Revision",378],["internal const Severity RuleSeverity = Severity.Minor;",236],["//\t  Minor Version",194],["Minor = minor;",176],["\"\"Minor\"\": 2,",132]]},{"word":"Mobile","context":[["public override void OnDoubleClick( Mobile from )",2544],["public override void OnDoubleClick(Mobile from)",1821],["Mobile from = state.Mobile;",1618],["Mobile from = state.Mobile;",1618],["private Mobile m_Mobile;",1247],["private Mobile m_From;",1160],["protected override void OnTarget( Mobile from, object targeted )",1075],["protected override void OnTarget(Mobile from, object targeted)",971],["private readonly Mobile m_Mobile;",957],["Mobile from = e.Mobile;",813]]},{"word":"Mock","context":[["var mockHost = new Mock<IHostApplication>();",3072],["var notificationService = new Mock<INotificationService>();",2314],["var cache = new Mock<ICache>().Object;",2030],["var parser = MockParser.Create(vbe.Object, new RubberduckParserState(new Mock<ISinks>().Object));",1443],["var mediator = new Mock<IMediator>();",1193],["var mockMediator = new Mock<IMediator>();",750],["var service = new ChatService(cache, new Mock<IRecentMessageCache>().Object, repository);",733],["var mock = new Mock<IFoo>();",712],["commandRuntimeMock = new Mock<ICommandRuntime>();",649],["private Mock<ICommandRuntime> commandRuntimeMock;",633]]},{"word":"Model","context":[["using Model;",2932],["using MediaBrowser.Model.Logging;",2731],["using MediaBrowser.Model.Entities;",2496],["namespace Amazon.EC2.Model",2187],["using PLW.Model;",1719],["using Amazon.EC2.Model;",1586],["namespace Amazon.EC2.Model.Internal.MarshallTransformations",1442],["using PLW.Model.Policy.NewBusiness;",1407],["using ININ.PureCloudApi.Model;",1289],["namespace ININ.PureCloudApi.Model",1279]]},{"word":"ModelState","context":[["if (ModelState.IsValid)",26985],["if (!ModelState.IsValid)",22642],["return BadRequest(ModelState);",6535],["ModelState.AddModelError(\"\", error);",5035],["if (!this.ModelState.IsValid)",1769],["ModelState.AddModelError(\"\", \"Invalid code.\");",1657],["ModelState.AddModelError(\"\", \"Failed to verify phone\");",1505],["ModelState.AddModelError(\"\", \"Invalid login attempt.\");",1445],["if (this.ModelState.IsValid)",1281],["ModelState state = ModelState[\"OldPassword\"];",1016]]},{"word":"Models","context":[["using Models;",9208],["using Umbraco.Core.Models;",3943],["using Data.Models;",1516],["using AllReady.Models;",1432],["using Merchello.Core.Models;",1237],["using Microsoft.Azure.Commands.Network.Models;",1199],["using Microsoft.Azure.Commands.Common.Authentication.Models;",1153],["using Microsoft.Azure.Common.Authentication.Models;",1043],["using Orchard.Environment.Extensions.Models;",1025],["using Microsoft.Azure.Management.SiteRecovery.Models;",1023]]},{"word":"Mvc","context":[["using System.Web.Mvc;",100134],["﻿using System.Web.Mvc;",9159],["using Microsoft.AspNet.Mvc;",4092],["using Microsoft.AspNetCore.Mvc;",3397],["using System.Web.Mvc.Html;",3164],["public ICollection<System.Web.Mvc.SelectListItem> Providers { get; set; }",3038],["using System.Web.Mvc.Ajax;",2022],["using Kendo.Mvc.UI;",1105],["/// <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>",1062],["using Microsoft.AspNet.Mvc.Rendering;",1055]]},{"word":"N","context":[["N(SyntaxKind.IdentifierToken);",5670],["N(SyntaxKind.IdentifierName);",3912],["namespace N",2890],["for (int i = 0; i < N; i++)",1595],["N(SyntaxKind.OpenParenToken);",1558],["N(SyntaxKind.CompilationUnit);",1506],["N(SyntaxKind.CloseParenToken);",1501],["N(SyntaxKind.EndOfFileToken);",1501],["N(SyntaxKind.SemicolonToken);",1457],["N(SyntaxKind.OpenBraceToken);",1083]]},{"word":"NET","context":[["// The Accord.NET Framework",6457],["* @author    : Ext.NET, Inc. http://www.ext.net/",3882],["* This file is part of Ext.NET.",3847],["// Math.NET Numerics, part of the Math.NET Project",3558],["// Math.NET Numerics, part of the Math.NET Project",3558],["/* Yet Another Forum.NET",2696],["/// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>",2584],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll",2483],["// AForge.NET framework",2250],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Web.dll",2167]]},{"word":"NUnit","context":[["using NUnit.Framework;",148355],["﻿using NUnit.Framework;",9534],["[NUnit.Framework.TestAttribute()]",4695],["[NUnit.Framework.Test]",1835],["using ErieInsurance.Testing.NUnit;",1177],["[NUnit.Framework.TearDownAttribute()]",1158],["[NUnit.Framework.TestFixtureAttribute()]",1158],["[NUnit.Framework.TestFixtureSetUpAttribute()]",1154],["[NUnit.Framework.TestFixtureTearDownAttribute()]",1154],["[NUnit.Framework.SetUpAttribute()]",1031]]},{"word":"Name","context":[["public string Name { get; set; }",82260],["public string Name",41989],["this.label1.Name = \"label1\";",27591],["Name = name;",25832],["this.label2.Name = \"label2\";",20432],["/// <param name=\"actionName\">Name of the action.</param>",17490],["/// <param name=\"controllerName\">Name of the controller.</param>",17416],["this.label3.Name = \"label3\";",15378],["public override string Name",14228],["public string Name { get; private set; }",13312]]},{"word":"Namespace","context":[["this.Namespace = table.Namespace;",2648],["this.Namespace = table.Namespace;",2648],["if ((table.Namespace != table.DataSet.Namespace)) {",2596],["if ((table.Namespace != table.DataSet.Namespace)) {",2596],["any1.Namespace = \"http://www.w3.org/2001/XMLSchema\";",2589],["any2.Namespace = \"urn:schemas-microsoft-com:xml-diffgram-v1\";",2589],["attribute1.FixedValue = ds.Namespace;",2583],["this.Namespace = ds.Namespace;",2166],["this.Namespace = ds.Namespace;",2166],["[System.Xml.Serialization.XmlTypeAttribute(Namespace=\"http://datex2.eu/schema/2/2_0\")]",1613]]},{"word":"Net","context":[["using System.Net;",132599],["using System.Net.Http;",52763],["using System.Net.Sockets;",21569],["using System.Net.Http.Headers;",17882],["using MixERP.Net.Framework;",7059],["using MixERP.Net.EntityParser;",5584],["using System.Net.Mail;",4884],["System.Net.Http.HttpResponseMessage _httpResponse = null;",4774],["using MixERP.Net.ApplicationState.Cache;",4260],["using MixERP.Net.Common.Extensions;",3838]]},{"word":"Never","context":[["[EditorBrowsable(EditorBrowsableState.Never)]",42231],["[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]",35833],["[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]",13801],["[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]",8270],["[DebuggerBrowsable(DebuggerBrowsableState.Never)]",5393],["[global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]",3039],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]",3035],["[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]",1733],["[Browsable(false), EditorBrowsable(EditorBrowsableState.Never)]",1145],["[EditorBrowsable (EditorBrowsableState.Never)]",1103]]},{"word":"Newtonsoft","context":[["using Newtonsoft.Json;",81375],["using Newtonsoft.Json.Linq;",29193],["﻿using Newtonsoft.Json;",14737],["using Newtonsoft.Json.Converters;",6894],["using Newtonsoft.Json.Serialization;",5457],["[Newtonsoft.Json.JsonPropertyAttribute(\"kind\")]",5147],["catch (Newtonsoft.Json.JsonException)",4070],["catch (Newtonsoft.Json.JsonException ex)",3599],["using Newtonsoft.Json.Utilities;",3470],["[Newtonsoft.Json.JsonPropertyAttribute(\"id\")]",2332]]},{"word":"No","context":[["/// No Metadata Documentation available.",28550],["/// No documentation.",8424],["/// <exception cref=\"ArgumentOutOfRangeException\">No match was found</exception>",3102],["LuaDLL.luaL_error(l,\"No matched override function to call\");",1690],["//No need to check RemotingRole; no call to db.",1506],["/// No Modeled Description Available",1195],["// No specific object available, try our factories.",1075],["LuaDLL.lua_pushstring(l,\"No matched override function to call\");",1052],["// herein are fictitious.  No association with any real company,",854],["// No-op.",802]]},{"word":"NodeType","context":[["NodeType = XPathNodeType.Element,",18601],["new XPathResultToken {NodeType = XPathNodeType.Whitespace, HasNameTable = true},",8027],["new XPathResultToken { NodeType = XPathNodeType.Whitespace, HasNameTable = true },",3705],["NodeType = XPathNodeType.Text,",2001],["if (reader.NodeType == XmlNodeType.Element)",1446],["Assert.AreEqual(NodeType.Element, dochtml1.NodeType);",1361],["Assert.AreEqual(NodeType.Element, dochtml1.NodeType);",1361],["Assert.AreEqual(NodeType.Element, dochtml1head0.NodeType);",1358],["Assert.AreEqual(NodeType.Element, dochtml1head0.NodeType);",1358],["Assert.AreEqual(NodeType.DocumentType, docType0.NodeType);",1318]]},{"word":"None","context":[[".HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)",20978],["None = 0,",19745],["var context = NewSerializationContext( PackerCompatibilityOptions.None );",18314],["None,",15823],["ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located",8570],["[ResourceExposure(ResourceScope.None)]",6741],["this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;",2917],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.None;",2039],["[ClassInterface(ClassInterfaceType.None)]",1883],["None",1745]]},{"word":"Not","context":[["Assert.That( result, Is.Not.Null );",16519],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["/// Not implemented",1337],["Assert.That(result, Is.Not.Null);",1309],["case ExpressionType.Not:",896],["throw new DMException(this, e, String.Format(\"Dll Not Found Exception thrown :  Caller - [{0}] :: Member - [{1}]\",",592],["// ERROR: Not supported in C#: OnErrorStatement",552],["throw new Exception(\"Not supported\");",500],["/// Not implemented.",456],["expr = Expression.Not(expr);",426]]},{"word":"NotImplementedException","context":[["throw new NotImplementedException();",202994],["get { throw new NotImplementedException(); }",27582],["throw new NotImplementedException ();",19926],["throw new System.NotImplementedException();",10965],["set { throw new NotImplementedException(); }",4954],["//throw new NotImplementedException();",2365],["get { throw new NotImplementedException (); }",1723],["/// <exception cref=\"System.NotImplementedException\"></exception>",1697],["get { throw new System.NotImplementedException(); }",1269],["catch (NotImplementedException)",906]]},{"word":"NotNull","context":[["[NotNull]",19984],["Assert.NotNull(file);",6041],["Assert.NotNull(result);",4733],["Assert.NotNull(csException);",3119],["Assert.NotNull(etException);",3119],["Assert.NotNull(creationEx);",2248],["Assert.NotNull(expectedEx);",2248],["Assert.NotNull(ms.Body);",1691],["Assert.NotNull(token);",1691],["Assert.NotNull(actual);",1613]]},{"word":"NotSupportedException","context":[["throw new NotSupportedException();",35762],["throw new NotSupportedException ();",4414],["get { throw new NotSupportedException(); }",2797],["/// <exception cref=\"NotSupportedException\">",2493],["catch (NotSupportedException)",2384],["/// <exception cref=\"System.NotSupportedException\">",2282],["throw new NotSupportedException(",2023],["set { throw new NotSupportedException(); }",1753],["/// <exception cref=\"NotSupportedException\"/>",1251],["/// <exception cref=\"T:System.NotSupportedException\">",1221]]},{"word":"Now","context":[["DateTime now = DateTime.Now;",3386],["DateTime start = DateTime.Now;",2892],["var now = DateTime.Now;",2260],["start = DateTime.Now;",1830],["{ typeof(DateTime), index => DateTime.Now },",1414],["{ typeof(DateTimeOffset), index => new DateTimeOffset(DateTime.Now) },",1409],["DateTime.Now,",1146],["DateTime startTime = DateTime.Now;",1091],["DateTime dt = DateTime.Now;",1042],["return DateTime.Now;",969]]},{"word":"Null","context":[["Assert.That( result, Is.Not.Null );",16519],["if (responseDoc != null && responseDoc.Type != JTokenType.Null)",4176],["if (nameValue != null && nameValue.Type != JTokenType.Null)",3095],["if( ___occuredException != RuntimeObject.Null ) throw RuntimeException.Create( ___occuredException );",3085],["Assert.Null(error);",2677],["if (idValue != null && idValue.Type != JTokenType.Null)",2617],["Assert.Null(semanticInfo.Symbol);",2328],["if (typeValue != null && typeValue.Type != JTokenType.Null)",2292],["if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)",2174],["if (locationValue != null && locationValue.Type != JTokenType.Null)",1788]]},{"word":"Nullable","context":[["System.Nullable`1[TestEnum]",2451],["if (genericTypeDefinition == typeof(Nullable<>))",1430],["/// Nullables: <see cref=\"Nullable{T}\"/>.",1416],["private System.Nullable<bool> _prettyPrint;",1240],["public Nullable<System.DateTimeOffset> CreatedDate { get; set; }",1234],["public virtual System.Nullable<bool> PrettyPrint {",1223],["public Nullable<System.DateTimeOffset> timestamp { get; set; }",1223],["public Nullable<System.DateTimeOffset> ValidUntilDate { get; set; }",1127],["public Nullable<System.DateTimeOffset> ValidFromDate { get; set; }",1115],["Type underlyingType = Nullable.GetUnderlyingType(modelType);",1058]]},{"word":"Number","context":[["//      Build Number",251178],["/// <param name=\"pageLength\">Number of rows to return.</param>",3568],["[Display(Name = \"Phone Number\")]",3212],["public string Number { get; set; }",2598],["Destination = model.Number,",1568],["return RedirectToAction(\"VerifyPhoneNumber\", new { PhoneNumber = model.Number });",1474],["var code = await UserManager.GenerateChangePhoneNumberTokenAsync(User.Identity.GetUserId(), model.Number);",1408],["public int Number { get; set; }",1259],["Number,",991],["public int Number",729]]},{"word":"Numbers","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["// Build Numbers by using the '*' as shown below:",1088],["// You can specify all the values or you can default the Build and Revision Numbers by using the '*'",307],["Console.WriteLine(\"Numbers and squares:\");",166],["// Numbers",154],["#region Numbers",94],["using d60.Cirqus.Numbers;",66],["var hasEnumerable = new HasEnumerable { Numbers = new[] { 1, 2 } };",64],["var resultNumbers = result.Numbers.ToArray();",64]]},{"word":"OF","context":[["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",17822],["* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4163],["// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4072],["* DAWN OF LIGHT - The first free open source DAoC server emulator",3973],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",3924],["OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",3173],["OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",3173],["// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN",2695]]},{"word":"OK","context":[["if (statusCode != HttpStatusCode.OK)",5514],["if (statusCode == HttpStatusCode.OK)",4594],["DialogResult = DialogResult.OK;",3527],["MessageBoxButtons.OK,",3409],["this.DialogResult = DialogResult.OK;",2977],["Assert.Equal(HttpStatusCode.OK, response.StatusCode);",2903],["if (result == DialogResult.OK)",2342],["MessageBoxButtons.OK, MessageBoxIcon.Error);",2185],["if (!(statusCode == (HttpStatusCode)Enum.Parse(typeof(HttpStatusCode), \"OK\")))",1431],["if (result != RESULT.OK)",1354]]},{"word":"OR","context":[["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",43344],["// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",17822],["// MERCHANTABLITY OR NON-INFRINGEMENT.",4187],["* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4163],["* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4163],["// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4072],["// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4072],["// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",4072],["WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",3924]]},{"word":"Object","context":[["global::System.Object _r0_o = null;",8630],["global::System.Object _r1_o = null;",7853],["global::System.Object _r2_o = null;",4968],["global::System.Object _r3_o = null;",2874],["Object localVarPostBody = null;",2518],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["notificationService.Object);",2192],["global::System.Object _java_exception = ex.getJavaException();",2186],["return default(Object);",2137],["/// <param name=\"obj\">Object to be compared</param>",2030]]},{"word":"Open","context":[["connection.Open();",14735],["conn.Open();",10669],["con.Open();",3883],["// Contributor(s): (Open source contributors should list themselves and their modifications here).",3814],["!= global::System.Data.ConnectionState.Open)) {",3592],["cn.Open();",3216],["ocmdPCS.Connection.Open();",2230],["KeePass Password Safe - The Open-Source Password Manager",2112],["public void Open()",1573],["c.Open();",1536]]},{"word":"Orchard","context":[["using Orchard.ContentManagement;",6329],["using Orchard.Localization;",4638],["using Orchard.Environment.Extensions;",2455],["[assembly: AssemblyProduct(\"Orchard\")]",2284],["using Orchard.Data;",2262],["using Orchard.Logging;",2257],["using Orchard.ContentManagement.Handlers;",2000],["using Orchard.Security;",1813],["using Orchard;",1670],["using Orchard.ContentManagement.Drivers;",1570]]},{"word":"Order","context":[["[System.Xml.Serialization.XmlElementAttribute(Order=0)]",5846],["[System.Xml.Serialization.XmlElementAttribute(Order=1)]",4521],["[System.Xml.Serialization.XmlElementAttribute(Order=2)]",3006],["[System.Xml.Serialization.XmlElementAttribute(Order=3)]",2088],["[System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]",1653],["[DataMember(Order = 1)]",1579],["[System.Xml.Serialization.XmlElementAttribute(Order=4)]",1576],["[XmlElement(Order=0)]",1565],["[XmlElement(Order=1)]",1402],["public int Order { get; set; }",1372]]},{"word":"POST","context":[["[AcceptVerbs(\"POST\")]",6981],["// POST: /Account/Register",3283],["// POST: /Account/Login",3207],["// POST: /Account/LogOff",3155],["get { return \"POST\"; }",3148],["// POST: /Account/ExternalLogin",3016],["// POST: /Account/ExternalLoginConfirmation",2997],["request.Method = \"POST\";",2524],["// POST: /Account/ResetPassword",2186],["// POST: /Account/ForgotPassword",2178]]},{"word":"Page","context":[["public sealed partial class MainPage : Page",4034],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["throw new Exception(\"Failed to load Page \" + e.SourcePageType.FullName);",3617],["if (!Page.IsPostBack)",2963],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409",1709],["/// Use this class to customize the Help Page.",1424],["/// <param name=\"pageSize\">Page size</param>",1331],["pageTool tool = new pageTool(this.Page);",1281],["/// Page specific logic should be placed in event handlers for the",964],["public partial class Default : System.Web.UI.Page",932]]},{"word":"Parameter","context":[["[Parameter(",12253],["[AttributeUsage(AttributeTargets.Parameter)]",10720],["[AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Method)]",4985],["[Parameter]",4944],["[Parameter(Mandatory = false)]",2186],["[Parameter(Mandatory = true,",2118],["AttributeTargets.Method | AttributeTargets.Parameter | AttributeTargets.Property |",1807],["[Parameter(Mandatory = false,",1806],["/// <param name=\"e\">Event data that describes how this page was reached.  The Parameter",1602],["\"pageToken\", new Google.Apis.Discovery.Parameter",1561]]},{"word":"Parameters","context":[["// Parameters:",9051],["cmd.Parameters.Clear();",3914],["using Org.BouncyCastle.Crypto.Parameters;",2074],["#region Parameters",1618],["this._adapter.UpdateCommand.Parameters.Add(param);",1362],["cmd.Parameters.Add(par);",1211],["var validator = new AWSQueryValidator(internalRequest.Parameters, request, service_model, operation);",1031],["command.Parameters.Clear();",812],["#endregion Parameters",803],["this._adapter.DeleteCommand.Parameters.Add(param);",796]]},{"word":"Parent","context":[["Parent = parent;",2100],["if (Parent != null)",1911],["object returnItem = Invoker.PropertyGet(this, \"Parent\", paramsArray);",1904],["public object Parent",1787],["parent = parent.Parent;",1762],["public class Parent",1659],["node = node.Parent;",1604],["this.Parent = parent;",879],["if (Parent == null)",829],["dynamic p = new Parent();",681]]},{"word":"Parse","context":[["int n = int.Parse(Console.ReadLine());",4982],["responseDoc = JToken.Parse(responseContent);",4405],["var tree = Parse(text);",3077],["parser.Parse(new CancellationTokenSource());",2211],["var node = Parse(text);",2086],["_httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse(\"application/json; charset=utf-8\");",1909],["XDocument responseDoc = XDocument.Parse(responseContent);",1879],["int number = int.Parse(Console.ReadLine());",1577],["public override void Parse(GameBitBuffer buffer)",1549],["if (!(statusCode == (HttpStatusCode)Enum.Parse(typeof(HttpStatusCode), \"OK\")))",1431]]},{"word":"Password","context":[["[DataType(DataType.Password)]",35890],["public string Password { get; set; }",17439],["[Display(Name = \"Password\")]",8722],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["public string Password",3144],["KeePass Password Safe - The Open-Source Password Manager",2112],["KeePass Password Safe - The Open-Source Password Manager",2112],["var result = await UserManager.CreateAsync(user, model.Password);",1982],["var result = await UserManager.ResetPasswordAsync(user.Id, model.Code, model.Password);",1503],["Password = password;",1339]]},{"word":"Path","context":[["public string Path { get; set; }",4092],["public string Path",3209],["Path = path;",2220],["CleanupAllGeneratedFiles(file.Path);",1253],["public string Path { get; private set; }",1223],["[Google.Apis.Util.RequestParameterAttribute(\"accountId\", Google.Apis.Util.RequestParameterType.Path)]",1089],["[Google.Apis.Util.RequestParameterAttribute(\"project\", Google.Apis.Util.RequestParameterType.Path)]",1055],["this.Path = path;",868],["return System.IO.Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase);",857],["\").Path;",851]]},{"word":"Player","context":[["public override void Use(Player p, string message)",2146],["public override void Help(Player p)",2136],["public class Player",787],["public void Execute(Player player, string[] args)",638],["public override void Help(Player p) {",537],["public override void Use(Player p, string message) {",509],["// PSP Player Emulation Suite",497],["Player = player;",457],["Player = ObjectManager.Player;",435],["Player = ObjectManager.Player;",435]]},{"word":"Point","context":[["this.menuStrip1.Location = new System.Drawing.Point(0, 0);",3025],["// public class Point",1951],["this.panel1.Location = new System.Drawing.Point(0, 0);",1605],["this.tableLayoutPanel1.Location = new System.Drawing.Point(0, 0);",1575],["this.label1.Location = new System.Drawing.Point(12, 9);",1505],["this.tabPage1.Location = new System.Drawing.Point(4, 22);",1415],["this.splitContainer1.Location = new System.Drawing.Point(0, 0);",1364],["this.tabPage2.Location = new System.Drawing.Point(4, 22);",1266],["this.groupBox1.Location = new System.Drawing.Point(12, 12);",1032],["this.toolStrip1.Location = new System.Drawing.Point(0, 0);",975]]},{"word":"Position","context":[["buffer.Position = 0;",22006],["stream.Position = 0;",11741],["ms.Position = 0;",5515],["public override long Position",4653],["s1.Position = 0;",3541],["s2.Position = 0;",3541],["for (; ((s1.Position != s1.Length)",3517],["if ((s1.Position == s1.Length)) {",3491],["Position = position;",2416],["Position = 0,",2050]]},{"word":"Private","context":[["#region Private Methods",14229],["#region Private Fields",9675],["#region Private methods",4544],["#region Private Members",4235],["#region Private Variables",2508],["#endregion Private Methods",2295],["#region Private",2192],["#endregion Private Fields",2016],["#region Private fields",1908],["#region Private members",1584]]},{"word":"Program","context":[["class Program",80067],["static class Program",18304],["public class Program",10082],["internal class Program",4223],["public static class Program",3094],["@\"class Program",2610],["var code = @\"class Program",2256],["class Program {",2053],["internal static class Program",1795],["var expected = @\"class Program",1197]]},{"word":"Project","context":[["</Project>",10301],["*     * Neither the name of the OpenSimulator Project nor the",10035],["// Math.NET Numerics, part of the Math.NET Project",3558],["</Project>\");",2340],["Project Orleans Cloud Service SDK ver. 1.0",2320],["Project = project;",1441],["*     * Neither the name of the Aurora-Sim Project nor the",1317],["//  Project owner:",1260],["// Project-level suppressions either have no target or are given",1255],["Project project = new Project();",1231]]},{"word":"Properties","context":[["#region Properties",77633],["#region Public Properties",17205],["// Properties",11461],["#endregion Properties",8776],["#region Properties and indexers",4543],["Properties.Settings.Default.Save();",4372],["#region [ Properties ]",3025],["#endregion Public Properties",2590],["complexModelDescription.Properties.Add(propertyModel);",2150],["return complexTypeModelDescription.Properties;",2149]]},{"word":"Property","context":[["b.Property<int>(\"Id\")",5516],["[AttributeUsage(AttributeTargets.Property)]",4580],["End Property",3905],["b.Property<string>(\"UserId\");",2535],["b.Property<string>(\"ConcurrencyStamp\")",2234],["b.Property<string>(\"Name\")",2169],["b.Property<string>(\"ClaimType\");",2078],["b.Property<string>(\"ClaimValue\");",2078],["b.Property<string>(\"Id\");",2036],["b.Property<string>(\"Name\");",1870]]},{"word":"PropertyChanged","context":[["public event PropertyChangedEventHandler PropertyChanged;",20653],["public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;",13608],["System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;",12017],["if (PropertyChanged != null)",5861],["if ((this.PropertyChanged != null))",5718],["this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));",5327],["PropertyChanged(this, new PropertyChangedEventArgs(propertyName));",2989],["PropertyChangedEventHandler handler = PropertyChanged;",2049],["var handler = PropertyChanged;",1715],["if (this.PropertyChanged != null)",1639]]},{"word":"Public","context":[["#region Public Methods",21051],["#region Public Properties",17205],["#region Public Methods and Operators",7437],["#region Public methods",5462],["#endregion Public Methods",3733],["* This Source Code Form is subject to the terms of the Mozilla Public",2993],["#region Public properties",2940],["#endregion Public Properties",2590],["This program is provided to you under the terms of the Microsoft Public",2503],["#region Public Constructors",2172]]},{"word":"Random","context":[["Random random = new Random();",3078],["Random random = new Random();",3078],["Random rand = new Random();",2937],["Random rand = new Random();",2937],["var random = new Random();",2657],["Random rnd = new Random();",2297],["Random rnd = new Random();",2297],["Random r = new Random();",1901],["Random r = new Random();",1901],["var rand = new Random();",1602]]},{"word":"ReSharper","context":[["// ReSharper disable All",11390],["// ReSharper disable InconsistentNaming",7806],["// ReSharper restore InconsistentNaming",3487],["// ReSharper disable once CheckNamespace",3417],["// ReSharper disable once InconsistentNaming",3401],["// ReSharper disable UnusedMember.Global",1999],["// ReSharper disable once AssignNullToNotNullAttribute",1965],["// ReSharper disable CheckNamespace",1787],["// ReSharper disable MemberCanBePrivate.Global",1488],["// ReSharper disable once PossibleNullReferenceException",1381]]},{"word":"Read","context":[["reader.Read();",18616],["Assert.IsTrue(reader.Read());",17165],["while (reader.Read())",15292],["this.Validate(AccessTypeEnum.Read, this._LoginId, this._Catalog, false);",9537],["this.Validate(AccessTypeEnum.Read, this._LoginId, false);",6737],["if ((unpacker.Read() == false)) {",5608],["public override int Read(byte[] buffer, int offset, int count)",4612],["context.Read();",3202],["public void Read (TProtocol iprot)",2875],["if (reader.Read())",2831]]},{"word":"ReadLine","context":[["Console.ReadLine();",15120],["int n = int.Parse(Console.ReadLine());",4982],["string input = Console.ReadLine();",2567],["while ((line = reader.ReadLine()) != null)",1817],["string line = reader.ReadLine();",1682],["line = reader.ReadLine();",1581],["int number = int.Parse(Console.ReadLine());",1577],["while ((line = sr.ReadLine()) != null)",1229],["string line = sr.ReadLine();",1169],["double b = double.Parse(Console.ReadLine());",1036]]},{"word":"ReferenceEquals","context":[["if (object.ReferenceEquals(resourceMan, null)) {",31017],["if (ReferenceEquals(null, obj)) return false;",6165],["if (ReferenceEquals(this, obj)) return true;",5205],["if (ReferenceEquals(other, null)) {",3019],["if (ReferenceEquals(this, other)) return true;",3010],["if (ReferenceEquals(other, this)) {",2935],["if (ReferenceEquals(null, other)) return false;",2604],["if (ReferenceEquals(null, obj))",2121],["if (ReferenceEquals(this, obj))",1938],["if (ReferenceEquals(this, other))",1681]]},{"word":"Reflection","context":[["﻿using System.Reflection;",271622],["using System.Reflection;",247744],["using System.Reflection.Emit;",9194],["using System.Reflection.Metadata;",1984],["NetRuntimeSystem.Reflection.BindingFlags.Instance |",1737],["NetRuntimeSystem.Reflection.BindingFlags.NonPublic).GetValue(this);",1737],["namespace System.Reflection",1647],["var currentMethodName = System.Reflection.MethodBase.GetCurrentMethod().Name;",1365],["var currentClassName = System.Reflection.MethodInfo.GetCurrentMethod().DeclaringType.Name;",1365],["using System.Reflection.Metadata.Ecma335;",1166]]},{"word":"Register","context":[["public static void Register(HttpConfiguration config)",7568],["DependencyProperty.Register(",6193],["GlobalConfiguration.Configure(WebApiConfig.Register);",3741],["public ActionResult Register()",3294],["// POST: /Account/Register",3283],["// GET: /Account/Register",3260],["public async Task<ActionResult> Register(RegisterViewModel model)",2188],["WebApiConfig.Register(GlobalConfiguration.Configuration);",2159],["[Register(\"AppDelegate\")]",1709],["[Register (\"AppDelegate\")]",1479]]},{"word":"Remove","context":[["_httpRequest.Headers.Remove(_header.Key);",11093],["_httpRequest.Headers.Remove(\"accept-language\");",5302],["this.Rows.Remove(row);",2648],["public bool Remove(T item)",1922],["// Remove this handler since it is no longer needed",1854],["public void Remove()",1502],["public bool Remove(string key)",1338],["public bool Remove(TKey key)",1337],["httpRequest.Headers.Remove(header.Key);",1335],["case NotifyCollectionChangedAction.Remove:",1294]]},{"word":"Replace","context":[["url = url.Replace(\" \", \"%20\");",8691],["config.Services.Replace(typeof(IDocumentationProvider), documentationProvider);",1432],["localPath.Replace(\"/\", \"-\").Replace(\"{\", String.Empty).Replace(\"}\", String.Empty));",1407],["localPath.Replace(\"/\", \"-\").Replace(\"{\", String.Empty).Replace(\"}\", String.Empty));",1407],["localPath.Replace(\"/\", \"-\").Replace(\"{\", String.Empty).Replace(\"}\", String.Empty));",1407],["_url = _url.Replace(\"{subscriptionId}\", Uri.EscapeDataString(this.Client.SubscriptionId));",1164],["name = name.Replace(\"+\", \".\");",1084],["_url = _url.Replace(\"{resourceGroupName}\", Uri.EscapeDataString(resourceGroupName));",1038],["friendlyPath.AppendFormat(\"_{0}\", queryKeyString.Replace('.', '-'));",967],["case NotifyCollectionChangedAction.Replace:",964]]},{"word":"Request","context":[["// Send Request",23048],["// Serialize Request",13934],["_result.Request = _httpRequest;",11093],["ex.Request = new HttpRequestMessageWrapper(_httpRequest, _requestContent);",7416],["case SampleDirection.Request:",2864],["ex.Request = new Microsoft.Rest.HttpRequestMessageWrapper(_httpRequest, _requestContent);",2844],["// Request a redirect to the external login provider to link a login for the current user",2402],["// Request a redirect to the external login provider",2360],["result.Request = httpRequest;",2273],["ex.Request = httpRequest;",2235]]},{"word":"Required","context":[["[Required]",95170],["/// Required method for Designer support - do not modify",72324],["/// Required designer variable.",68219],["[Required(ErrorMessage = \"±ØÌî\")]",4073],["/// Required.",2864],["/// Required. The name of the resource group.",2821],["// Required for Windows Form Designer support",2800],["[Required(ErrorMessage = \"±ØÌî\",AllowEmptyStrings = true)]",2474],["this.NavigationCacheMode = NavigationCacheMode.Required;",1259],["Required = required;",1213]]},{"word":"Requires","context":[["Contract.Requires(source != null);",1277],["Contract.Requires<ArgumentNullException>(source != null);",1217],["Contract.Requires(value != null);",1078],["Contract.Requires<ArgumentNullException>(value != null);",1025],["Contract.Requires(type != null);",833],["Contract.Requires(left != null);",796],["Contract.Requires(right != null);",776],["Contract.Requires(path != null);",687],["Contract.Requires(name != null);",656],["Contract.Requires(t1 != null);",629]]},{"word":"Reset","context":[["public void Reset()",15139],["Reset();",10572],["public override void Reset()",4847],["this.Reset();",2444],["base.Reset();",2444],["void Reset();",2034],["public void Reset() {",1927],["if (e.NavigationMode == NavigationMode.Reset)",1524],["public virtual void Reset()",1262],["this.Reset(ref resetPoint);",1225]]},{"word":"ResourceManager","context":[["private static global::System.Resources.ResourceManager resourceMan;",45167],["///   Returns the cached ResourceManager instance used by this class.",38276],["internal static global::System.Resources.ResourceManager ResourceManager {",26564],["internal static global::System.Resources.ResourceManager ResourceManager {",26564],["internal static global::System.Resources.ResourceManager ResourceManager",12312],["internal static global::System.Resources.ResourceManager ResourceManager",12312],["public static global::System.Resources.ResourceManager ResourceManager {",5165],["public static global::System.Resources.ResourceManager ResourceManager {",5165],["return ResourceManager.GetString(\"ApplicationTitle\", resourceCulture);",1483],["return ResourceManager.GetString(\"ResourceLanguage\", resourceCulture);",1468]]},{"word":"Resources","context":[["private static global::System.Resources.ResourceManager resourceMan;",45167],["using System.Resources;",33073],["internal static global::System.Resources.ResourceManager ResourceManager {",26564],["internal Resources() {",22374],["internal class Resources {",20953],["internal class Resources",12414],["internal Resources()",12313],["internal static global::System.Resources.ResourceManager ResourceManager",12312],["get { return Resources.GetString(\"Target\"); }",6676],["public static global::System.Resources.ResourceManager ResourceManager {",5165]]},{"word":"Response","context":[["// Deserialize Response",16708],["_result.Response = _httpResponse;",11093],["ex.Response = new HttpResponseMessageWrapper(_httpResponse, _responseContent);",7416],["Response<string>",7317],["case SampleDirection.Response:",2860],["ex.Response = new Microsoft.Rest.HttpResponseMessageWrapper(_httpResponse, _responseContent);",2844],["result.Response = httpResponse;",2273],["ex.Response = httpResponse;",2235],["Response.End();",2130],["Response",1462]]},{"word":"Result","context":[["// Create Result",22303],["//---------------Test Result -----------------------",8193],["Contract.Ensures(Contract.Result<String>() != null);",2534],["return Result;",2471],["Contract.Ensures(Contract.Result<string>() != null);",2395],["public string Result {",2083],["public bool Result {",1407],["? (apiClient.Result())",1365],["UnU.Media.DirectX.Result __result__;",1254],["/// <returns>Result</returns>",1222]]},{"word":"ResumeLayout","context":[["this.ResumeLayout(false);",75113],["this.groupBox1.ResumeLayout(false);",7800],["this.panel1.ResumeLayout(false);",5620],["this.groupBox2.ResumeLayout(false);",4488],["this.tableLayoutPanel1.ResumeLayout(false);",3302],["this.menuStrip1.ResumeLayout(false);",3166],["this.splitContainer1.ResumeLayout(false);",2933],["this.splitContainer1.Panel1.ResumeLayout(false);",2855],["this.splitContainer1.Panel2.ResumeLayout(false);",2705],["this.groupBox3.ResumeLayout(false);",2559]]},{"word":"Returns","context":[["///   Returns the cached ResourceManager instance used by this class.",38276],["// Returns:",10791],["/// <returns>Returns true if the element is defined in the specified version.</returns>",3931],["/// <returns>Returns the cloned node. </returns>",3908],["///<summary>Returns the body of the request.</summary>",3823],["///<para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:",3380],["///<para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:",3380],["/// <returns>Returns the requested page from the collection using the supplied filters.</returns>",3255],["/// Returns a <see cref=\"System.String\"/> that represents this instance.",3191],["/// Returns an enumerator that iterates through the collection.",2755]]},{"word":"Revision","context":[["//      Revision",255887],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["//     <version>$Revision$</version>",3221],["// Major.Minor.Build.Revision",1340],["// You can specify all the values or you can use the default the Revision and",1086],["// Major Version Minor Version Build Number Revision",378],["* Revision History:",319],["// You can specify all the values or you can default the Build and Revision Numbers by using the '*'",307]]},{"word":"Right","context":[["| System.Windows.Forms.AnchorStyles.Right)));",49511],["Right,",2065],["if (e.Button == MouseButtons.Right)",1719],["case Keys.Right:",1189],["Right",940],["/// <param name=\"scale\">Right operand.</param>",934],["Right = right;",747],["| DevExpress.XtraPrinting.BorderSide.Right)",739],["public int Right;",612],["case Direction.Right:",504]]},{"word":"Rows","context":[["this.Rows.Add(row);",2696],["return this.Rows.Count;",2652],["this.Rows.Remove(row);",2648],["foreach (DataRow row in table.Rows)",2634],["if (table?.Rows == null || table.Rows.Count == 0)",1716],["if (table?.Rows == null || table.Rows.Count == 0)",1716],["foreach (DataRow dr in dt.Rows)",1372],["if (dt.Rows.Count > 0)",1188],["if (dtst.Tables[0].Rows.Count > 0)",1186],["selectedrow = Commands.Rows.Add();",1104]]},{"word":"Run","context":[["public void Run()",6263],["public static void Run()",5229],["Application.Run(new Form1());",5150],["var result = fixture.Run();",4281],["public override int Run(InterpretedFrame frame)",2893],["Application.Run(new MainForm());",2844],["public override void Run()",2304],["var result = Record.Exception(() => fixture.Run());",2184],["Task.Run(() =>",2157],["game.Run();",1936]]},{"word":"Runtime","context":[["using System.Runtime.InteropServices;",418618],["using System.Runtime.CompilerServices;",314838],["[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]",80047],["using System.Runtime.Serialization;",78716],["//     Runtime Version:4.0.30319.42000",25738],["global::Android.Runtime.ResourceIdManager.UpdateIdValues();",25354],["[System.Runtime.Serialization.DataMemberAttribute()]",24923],["[System.Runtime.Serialization.EnumMemberAttribute()]",23156],["using Amazon.Runtime;",19112],["[System.Runtime.Serialization.OptionalFieldAttribute()]",18755]]},{"word":"S","context":[["struct S",3155],["public struct S",1099],["case 'S':",1050],["// Use, duplication, or disclosure by the U.S. Government is subject to",1036],["struct S { }",905],["static class S",856],["&& S()",847],["unsafe struct S",844],["GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT.  RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE",631],["S s;",631]]},{"word":"Save","context":[["Save();",4868],["public void Save()",4710],["Properties.Settings.Default.Save();",4372],["//TODO: Save application state and stop any background activity",3617],["Settings.Default.Save();",2409],["// TODO: Save application state and stop any background activity",1371],["testRunner.And(\"I hit \\\"Save\\\"\", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), \"And \");",1258],["Config.Save();",1205],["void Save();",1012],["_unitOfWork.Save();",933]]},{"word":"Schema","context":[["using System.ComponentModel.DataAnnotations.Schema;",15929],["[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]",8418],["using System.Xml.Schema;",5994],["global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();",3559],["global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();",3559],["global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();",3559],["global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();",3559],["global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();",3540],["global::System.Xml.Schema.XmlSchema schema = null;",3540],["schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));",3516]]},{"word":"Security","context":[["[System.Security.SuppressUnmanagedCodeSecurity()]",38818],["using System.Security;",28671],["using System.Security.Cryptography;",25883],["[System.Security.SecurityCritical]  // auto-generated",18500],["using System.Web.Security;",17978],["[System.Security.SecuritySafeCritical]  // auto-generated",17743],["[System.Security.SecuritySafeCriticalAttribute]",15332],["using System.Security.Claims;",15095],["using Microsoft.Owin.Security;",12266],["[System.Security.SecurityCriticalAttribute]",11794]]},{"word":"Select","context":[["IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);",2474],["[DataObjectMethod(DataObjectMethodType.Select)]",2252],["var factorOptions = userFactors.Select(purpose => new SelectListItem { Text = purpose, Value = purpose }).ToList();",1889],[".Select(",1603],["string[] parameterTypeNames = parameters.Select(param => GetTypeName(param.ParameterType)).ToArray();",1419],["string[] argumentTypeNames = genericArguments.Select(t => GetTypeName(t)).ToArray();",1416],[".Select(x =>",1133],["string[] argumentTypeNames = genericArguments.Select(t => GetModelName(t)).ToArray();",1051],["DataRow[] dataRows = MainWindow.dtInstruments.Select(\"IDInst=\" + dataImportID);",671],["result = db.Select(ev);",548]]},{"word":"Send","context":[["// Send Request",23048],["// Send an email with this link",4186],["creature.Client.Send(packet);",1522],["// Send an SMS through the SMS provider to verify the phone number",1456],["// Send request",959],["client.Send(packet);",721],["state.Send(p);",406],["client.Send(message);",364],["Send(",353],["// Send an SMS to verify the phone number",344]]},{"word":"Serializable","context":[["[Serializable]",136532],["[System.Serializable]",9553],["[Serializable()]",9083],["[global::System.Serializable()]",4198],["[System.Serializable()]",1159],["﻿    [Serializable]",667],["[ Serializable ]",480],["<Serializable>",474],["//[Serializable]",389],["[Serializable, StructLayout(LayoutKind.Sequential)]",348]]},{"word":"Serialization","context":[["using System.Runtime.Serialization;",78716],["using System.Xml.Serialization;",62328],["[System.Xml.Serialization.XmlAttributeAttribute()]",35886],["[System.Xml.Serialization.XmlIgnoreAttribute()]",33091],["[System.Runtime.Serialization.DataMemberAttribute()]",24923],["[System.Runtime.Serialization.EnumMemberAttribute()]",23156],["[System.Runtime.Serialization.OptionalFieldAttribute()]",18755],["[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]",9313],["[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]",8418],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Runtime.Serialization\", \"4.0.0.0\")]",7279]]},{"word":"Serialize","context":[["base.Serialize( writer );",25497],["public override void Serialize( GenericWriter writer )",25467],["base.Serialize(writer);",20632],["public override void Serialize(GenericWriter writer)",19558],["// Serialize Request",13934],["public override void Serialize(IDataWriter writer)",1903],["#region Serialize/Deserialize",1295],["string xmlString = Serialize();",1116],["public override void Serialize(BigEndianWriter writer)",1079],["public virtual string Serialize()",1063]]},{"word":"Server","context":[["namespace Server.Items",17842],["using Server;",16886],["using Server.Items;",16488],["using Server.Mobiles;",9886],["using Server.Network;",9836],["namespace Server.Mobiles",8502],["using Server.Targeting;",5738],["using Server.Gumps;",4486],["namespace Server",2234],["using Server.Spells;",1871]]},{"word":"ServiceModel","context":[["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.ServiceModel\", \"4.0.0.0\")]",20773],["using System.ServiceModel;",15232],["using System.ServiceModel.Channels;",5421],["[System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]",4483],["[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]",3516],["using System.ServiceModel.Description;",3343],["using System.ServiceModel.Web;",2111],["using System.ServiceModel.Dispatcher;",1886],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.ServiceModel\", \"3.0.0.0\")]",1848],["namespace System.ServiceModel.Channels",1478]]},{"word":"Services","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",14113],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Services.Design\", \"1.0.0\")]",7600],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Web.Services\", \"4.0.30319.1\")]",5010],["using System.Web.Services;",3496],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Web.Services\", \"4.0.30319.18408\")]",3334],["private readonly Google.Apis.Services.IClientService service;",3132],["using OpenSim.Services.Interfaces;",3112],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Web.Services\", \"4.0.30319.17929\")]",3044],["using System.Web.Services.Protocols;",2297],["using DotNetNuke.Services.Localization;",2085]]},{"word":"Set","context":[["/// Get/Set",27631],["// Set Headers",22162],["// Set Credentials",15292],["//---------------Set up test pack-------------------",7871],["///<summary> A Set Method for Static Variables </summary>",2760],["// Set the root visual to allow the application to render",1856],["ar => waitHandle.Set(),",1799],["End Set",1386],["// Set the font to match the display language defined by the",1374],["// Set the FlowDirection of all elements under the root frame based",1373]]},{"word":"Setting","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["/// Setting this property's value to a non-null reference creates the",631],["/// Setting this property's value to a null reference deletes the",631],["// Setting ComVisible to false makes the types in this assembly not visible to COM components. If",283],["//Setting up destination open document report",232],["[Setting]",203],["//Setting up source open spreadsheet template",183],["[Setting, DefaultValue(true)]",172],["public class Setting",152],["#region Setting Constants",145]]},{"word":"Settings","context":[["public static Settings Default {",16558],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {",16102],["public static Settings Default",13407],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase",13281],["Properties.Settings.Default.Save();",4372],["Settings.Default.Save();",2409],["//Application.Current.Host.Settings.EnableRedrawRegions = true;",1892],["//Application.Current.Host.Settings.EnableCacheVisualization = true;",1891],["Application.Current.Host.Settings.EnableFrameRateCounter = true;",1763],["public class Settings",1222]]},{"word":"Should","context":[["// Should be rendered as:",4867],["using Should;",3044],[".Should()",2844],["response.Should().NotBeNull();",1282],["// Should never happen!",848],["result.Should().NotBeNull();",757],["response.ItemCount.Should().HaveValue().And.Be(itemCount);",728],["response.PageCount.Should().HaveValue().And.Be(1);",728],["response.Items.Should().NotBeNull().And.HaveCount(itemCount);",728],["result.Should().BeTrue();",673]]},{"word":"Show","context":[["MessageBox.Show(ex.Message);",4633],["MessageBox.Show(",4356],["MessageBox.Show(this, strError);",2116],["this.Show();",1946],["Show();",1889],["PCSMessageBox.Show(ErrorCode.LOG_EXCEPTION, MessageBoxIcon.Error);",1887],["// Show graphics profiling information while debugging.",1850],["// Show the areas of the app that are being redrawn in each frame.",1814],["form.Show();",1774],["window.Show();",1590]]},{"word":"Single","context":[["var tree = compilation.SyntaxTrees.Single();",4834],["case TypeCode.Single:",4785],["System.Single a2;",1909],["var ns = comp.SourceModule.GlobalNamespace.GetMembers(\"NS\").Single() as NamespaceSymbol;",1852],["System.Single a3;",1542],["{ typeof(Single), index => (Single)(index + 0.1) },",1403],["{ typeof(Single), index => (Single)(index + 0.1) },",1403],["/// A <see cref=\"System.Single\"/> for the time in seconds the animation will take to complete.",1400],["/// A <see cref=\"System.Single\"/>",1144],["var tree = comp.SyntaxTrees.Single();",1086]]},{"word":"Size","context":[["if( System.IntPtr.Size == 4 )",3251],["this.button1.Size = new System.Drawing.Size(75, 23);",2864],["this.button1.Size = new System.Drawing.Size(75, 23);",2864],["public int Size",2393],["this.AutoScaleBaseSize = new System.Drawing.Size(5, 13);",2383],["this.btnCancel.Size = new System.Drawing.Size(75, 23);",1772],["this.btnCancel.Size = new System.Drawing.Size(75, 23);",1772],["this.fileToolStripMenuItem.Size = new System.Drawing.Size(37, 20);",1560],["this.fileToolStripMenuItem.Size = new System.Drawing.Size(37, 20);",1560],["Size = size;",1514]]},{"word":"Source","context":[["string IMigrationMetadata.Source",6774],["* This Source Code Form is subject to the terms of the Mozilla Public",2993],["KeePass Password Safe - The Open-Source Password Manager",2112],["public string Source { get; set; }",1820],["public class Source",1704],["public string Source",1357],["Source = source;",1355],["if (apiParameter.Source == ApiParameterSource.FromBody)",1089],["if (apiParameter.Source == ApiParameterSource.FromUri)",1088],["p => p.Source == ApiParameterSource.FromBody ||",1087]]},{"word":"Start","context":[["void Start () {",25063],["void Start()",14737],["public void Start()",12989],["void Start ()",9070],["timer.Start();",5044],["sw.Start();",4656],["t.Start();",4334],["thread.Start();",3938],["private void Start()",3775],["Start();",3654]]},{"word":"State","context":[["public string State { get; set; }",3497],["if (oconPCS.State != ConnectionState.Closed)",2555],["if (parser.State.Status >= ParserState.Error) { Assert.Inconclusive(\"Parser Error\"); }",2450],["new State(",1522],["// State",1481],["State = state;",1225],["global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;",1162],["if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)",1154],["global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;",1078],["global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;",1078]]},{"word":"Status","context":[["//<Expects Status=success></Expects>",4209],["public string Status { get; set; }",3667],["/// code returned for the Get Operation Status operation itself. If",2531],["if (parser.State.Status >= ParserState.Error) { Assert.Inconclusive(\"Parser Error\"); }",2450],["// <Expects Status=success></Expects>",2032],["public string Status",1529],["Status = status;",1404],["public static int Status;",1010],["public int Status { get; set; }",1008],["/// code returned for the Get Operation Status operation itself.  If",965]]},{"word":"StatusCode","context":[["StatusCode = HttpStatusCode.InternalServerError",24167],["HttpStatusCode statusCode = httpResponse.StatusCode;",11154],["result.StatusCode = statusCode;",8898],["HttpStatusCode _statusCode = _httpResponse.StatusCode;",8249],["Assert.Equal(HttpStatusCode.OK, response.StatusCode);",2903],["System.Net.HttpStatusCode _statusCode = _httpResponse.StatusCode;",2844],["int localVarStatusCode = (int) localVarResponse.StatusCode;",2511],["int statusCode = (int) response.StatusCode;",1386],["Assert.Equal(HttpStatusCode.MethodNotAllowed, ex.Response.StatusCode);",1170],["return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode)",1108]]},{"word":"Stop","context":[["public void Stop()",10870],["Stop();",7670],["sw.Stop();",6770],["timer.Stop();",4566],["stopwatch.Stop();",4286],["if (field.Type == TType.Stop) {",3008],["watch.Stop();",2688],["void Stop();",2069],["public override void Stop()",1801],["_timer.Stop();",1507]]},{"word":"Stream","context":[["///<para> - Stream, no deserialization, response stream is your responsibility </para>",4536],["///<para> - Stream, no deserialization, response stream is your responsibility</para>",2224],["Stream stream = null;",1171],["Stream stream;",1047],["private Stream _stream;",720],["private readonly Stream _stream;",563],["public override void Parse(Stream s)",545],["private Stream stream;",542],["SocketType.Stream,",536],["public override UploadResult Upload(Stream stream, string fileName)",521]]},{"word":"String","context":[["return String.Empty;",15701],["String.Format(",6492],["public override String ToString()",5633],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);",4470],["protected virtual void SendPropertyChanged(String propertyName)",4234],["var queryParams = new Dictionary<String, String>();",3979],["var queryParams = new Dictionary<String, String>();",3979],["/// Returns a <see cref=\"System.String\"/> that represents this instance.",3191]]},{"word":"StringBuilder","context":[["StringBuilder sb = new StringBuilder();",33434],["StringBuilder sb = new StringBuilder();",33434],["var sb = new StringBuilder();",23824],["StringBuilder builder = new StringBuilder();",9347],["StringBuilder builder = new StringBuilder();",9347],["var builder = new StringBuilder();",6374],["StringBuilder result = new StringBuilder();",3947],["StringBuilder result = new StringBuilder();",3947],["StringBuilder strSql = new StringBuilder();",3028],["StringBuilder strSql = new StringBuilder();",3028]]},{"word":"Substring","context":[["url = url.Substring(1);",7756],["baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);",7732],["genericTypeName = genericTypeName.Substring(0, genericTypeName.IndexOf('`'));",2163],["TextString = TextString.Substring (TextString.IndexOf(EOL) + EOL.Length);",844],["sourceCode = sourceCode.Substring(startIndex, sourceCode.Length - startIndex);",830],["substring = TextString.Substring (0, TextString.IndexOf(EOL));",808],["string firstPart = story.Substring(0, endIndex);",625],["string secondPart = story.Substring(startIndex, story.Length - startIndex);",561],["returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));",470],["typeName = typeName.Substring(0, typeName.IndexOf('`'));",367]]},{"word":"Success","context":[["case SignInStatus.Success:",5365],["if (match.Success)",4677],["[ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]",3959],["if (m.Success)",2846],["if (res != CUResult.Success) throw new CudaException(res);",2003],["Success,",1924],["if (!match.Success)",1795],["public bool Success { get; set; }",1475],["if (errorCode != SocketError.Success)",1328],["if (result.Success)",1239]]},{"word":"SupportByVersion","context":[["/// SupportByVersion MSHTML 4",27572],["/// SupportByVersion Excel 9, 10, 11, 12, 14, 15, 16",13397],["/// SupportByVersion MSProject 11, 12, 14",8087],["/// SupportByVersion Word 9, 10, 11, 12, 14, 15, 16",7235],["/// SupportByVersion Visio 11, 12, 14, 15, 16",6624],["/// SupportByVersion MSHTML, 4",5268],["[SupportByVersion(\"MSHTML\", 4)]",4663],["/// SupportByVersion Access 9, 10, 11, 12, 14, 15, 16",4200],["/// SupportByVersion OWC10 1",4037],["/// SupportByVersion Publisher 14, 15, 16",3006]]},{"word":"SupportByVersionAttribute","context":[["[SupportByVersionAttribute(\"MSHTML\", 4)]",24913],["[SupportByVersionAttribute(\"Excel\", 9,10,11,12,14,15,16)]",14144],["[SupportByVersionAttribute(\"MSProject\", 11,12,14)]",8314],["[SupportByVersionAttribute(\"Word\", 9,10,11,12,14,15,16)]",7615],["[SupportByVersionAttribute(\"Visio\", 11,12,14,15,16)]",7305],["[SupportByVersionAttribute(\"Access\", 9,10,11,12,14,15,16)]",4644],["[SupportByVersionAttribute(\"OWC10\", 1)]",4372],["[SupportByVersionAttribute(\"Publisher\", 14,15,16)]",3253],["[SupportByVersionAttribute(\"Office\", 12,14,15,16)]",2593],["[SupportByVersionAttribute(\"Excel\", 12,14,15,16)]",2536]]},{"word":"SuppressUnmanagedCodeSecurity","context":[["[System.Security.SuppressUnmanagedCodeSecurity()]",38818],["[SuppressUnmanagedCodeSecurity]",29590],["[SuppressUnmanagedCodeSecurity()]",7009],["[DllImport(Native.Dll, CallingConvention = Native.Conv), SuppressUnmanagedCodeSecurity]",3474],["[ComImport, System.Security.SuppressUnmanagedCodeSecurity,",1907],["SuppressUnmanagedCodeSecurity]",1294],["[DllImport(ODE_NATIVE_LIBRARY, CallingConvention = CALLING_CONVENTION), SuppressUnmanagedCodeSecurity]",1203],["[DllImport(\"BulletSim\", CallingConvention = CallingConvention.Cdecl), SuppressUnmanagedCodeSecurity]",1139],["[System.Security.SuppressUnmanagedCodeSecurity]",1017],["[DllImport(\"csfml-graphics-2\", CallingConvention = CallingConvention.Cdecl), SuppressUnmanagedCodeSecurity]",836]]},{"word":"SuspendLayout","context":[["this.SuspendLayout();",76395],["this.groupBox1.SuspendLayout();",7823],["this.panel1.SuspendLayout();",5634],["this.groupBox2.SuspendLayout();",4500],["this.tableLayoutPanel1.SuspendLayout();",3313],["this.menuStrip1.SuspendLayout();",3178],["this.splitContainer1.SuspendLayout();",2949],["this.splitContainer1.Panel1.SuspendLayout();",2871],["this.splitContainer1.Panel2.SuspendLayout();",2719],["this.groupBox3.SuspendLayout();",2566]]},{"word":"SyntaxKind","context":[["N(SyntaxKind.IdentifierToken);",5670],["Assert.Equal(SyntaxKind.ClassDeclaration, file.Members[0].Kind());",4028],["N(SyntaxKind.IdentifierName);",3912],["case SyntaxKind.MethodDeclaration:",2077],["case SyntaxKind.PropertyDeclaration:",2072],["context.RegisterSyntaxNodeAction(AnalyzeIfStatement, SyntaxKind.IfStatement);",2056],["case SyntaxKind.IndexerDeclaration:",1750],["Assert.Equal(SyntaxKind.MethodDeclaration, agg.Members[0].Kind());",1748],["case SyntaxKind.ClassDeclaration:",1672],["case SyntaxKind.FieldDeclaration:",1617]]},{"word":"System","context":[["using System.Collections.Generic;",1898359],["using System;",1847007],["using System.Linq;",1359443],["﻿using System;",1239682],["using System.Text;",965951],["using System.Threading.Tasks;",554913],["using System.IO;",464577],["using System.Runtime.InteropServices;",418618],["using System.Runtime.CompilerServices;",314838],["using System.Collections;",309630]]},{"word":"T","context":[["/// <typeparam name=\"T\"></typeparam>",25253],["return default(T);",13338],["where T : class",11368],["/// <exception cref=\"T:System.ArgumentNullException\">",6222],["public IEnumerator<T> GetEnumerator()",5204],["/// <typeparam name=\"T\">",5204],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["public Localizer T { get; set; }",4491],["T = NullLocalizer.Instance;",3845],["///<para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:",3380]]},{"word":"TKey","context":[["public TValue this[TKey key]",1681],["public bool TryGetValue(TKey key, out TValue value)",1621],["public bool ContainsKey(TKey key)",1457],["/// Key value pairs: <see cref=\"KeyValuePair{TKey,TValue}\"/>",1414],["public bool Remove(TKey key)",1337],["public void Add(TKey key, TValue value)",1262],["Func<TSource, TKey> keySelector,",1220],["/// <typeparam name=\"TKey\">The type of the key.</typeparam>",1148],["public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()",1091],["/// <typeparam name=\"TKey\"></typeparam>",945]]},{"word":"TODO","context":[["// TODO",5257],["//TODO: Load state from previously suspended application",3637],["//TODO: Save application state and stop any background activity",3617],["//TODO",2779],["// TODO:",2755],["[TODO]",1850],["// TODO: Add constructor logic here",1819],["// TODO...",1643],["// TODO: change this value to a cache size that is appropriate for your application",1374],["// TODO: Load state from previously suspended application",1372]]},{"word":"TabIndex","context":[["this.label1.TabIndex = 0;",7889],["this.label1.TabIndex = 1;",3667],["this.label2.TabIndex = 2;",2815],["this.label1.TabIndex = 2;",2571],["this.label2.TabIndex = 1;",2524],["this.label2.TabIndex = 3;",2161],["this.button1.TabIndex = 0;",1937],["this.groupBox1.TabIndex = 0;",1816],["this.tabPage1.TabIndex = 0;",1738],["this.label1.TabIndex = 3;",1683]]},{"word":"Table","context":[["[TestCategory(ComponentCategory.Table)]",2943],["using Microsoft.WindowsAzure.Storage.Table;",2310],["// Container child table1.Gtk.Table+TableChild",2293],["// Table & Column Mappings",1861],["tableMapping.SourceTable = \"Table\";",1534],["/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>",1349],["// RepeatLayout      : Table",1280],["testRunner.And(\"I hit \\\"Save\\\"\", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), \"And \");",1258],["/// <p>Function Definition Table syntax:</p>",993],["testRunner.And(\"I am redirected\", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), \"And \");",762]]},{"word":"Target","context":[["string IMigrationMetadata.Target",6774],["get { return Resources.GetString(\"Target\"); }",6676],["</Target>",6628],["private class InternalTarget : Target",1590],["Target = target;",1493],["<Target Name='t'>",1133],["packHelperParameters0.Target = objectTree;",1068],["packHelperParameters.Target = objectTree;",1068],["request.Headers[\"X-Amz-Target\"] = target;",1006],["public string Target { get; set; }",983]]},{"word":"Task","context":[["return Task.FromResult(0);",11975],["return Task.Factory.StartNew((object s) =>",5576],["return tcs.Task;",5434],["return Task.FromResult<object>(null);",4405],["public Task SendAsync(IdentityMessage message)",4160],["/// <returns>Task.</returns>",3475],["return Task.FromResult(true);",3123],["return Task.CompletedTask;",3059],["public async Task<ActionResult> LinkLoginCallback()",2483],["public async Task<ActionResult> Login(LoginViewModel model, string returnUrl)",2272]]},{"word":"Tasks","context":[["using System.Threading.Tasks;",554913],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["warrior.Tasks.Enqueue(mod(ip));",8065],["﻿using System.Threading.Tasks;",7872],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Xamarin.Android.Build.Tasks\", \"1.0.0.0\")]",3288],["using System.Reactive.Threading.Tasks;",2527],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 14.0.0.0\")]",2482],["using Microsoft.Phone.Tasks;",1151],["//using System.Threading.Tasks;",959],["namespace System.Threading.Tasks",803]]},{"word":"Test","context":[["[Test]",1120305],["public class Test",17910],["class Test",16254],["Test(",13445],["[Test()]",12173],["//---------------Test Result -----------------------",8193],["//---------------Execute Test ----------------------",8148],["using Roslyn.Test.Utilities;",7531],["public void Test()",4716],["[Test, DataContextSource]",4388]]},{"word":"TestCategory","context":[["[TestCategory(SmokeTestCategory.NonSmoke)]",9808],["[TestCategory(TestTypeCategory.UnitTest)]",9611],["[TestCategory(ComponentCategory.Blob)]",4592],["[TestCategory(ComponentCategory.Table)]",2943],["[TestCategory(\"UnitTest\")]",2609],["[TestMethod, Priority(0), TestCategory(\"Core\")]",2096],["[TestCategory(TenantTypeCategory.DevFabric), TestCategory(TenantTypeCategory.Cloud)]",2091],["[TestCategory(TenantTypeCategory.DevFabric), TestCategory(TenantTypeCategory.Cloud)]",2091],["[TestCategory(\"CheckIn\")]",1976],["[TestCategory(\"Unit\")]",1857]]},{"word":"TestClass","context":[["[TestClass]",68743],["class TestClass",5459],["[TestClass()]",5387],["Class TestClass",1586],["public class TestClass",1512],["//public TestClass(System.IO.TextWriter tw):base(tw, false){}",400],["//public TestClass(System.IO.TextWriter tw):base(tw, true){}",400],["//public TestClass():base(true){}",400],["using TestClass = NUnit.Framework.TestFixtureAttribute;",392],["public TestClass()",291]]},{"word":"TestFixture","context":[["[TestFixture]",139104],["[TestFixture()]",2359],["using TestFixture = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestClassAttribute;",1410],["[TestFixture ()]",418],["[TestFixture, Category(TestCategories.UICategoryA)]",349],["[ TestFixture ]",279],["using TestFixture = Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute;",273],["/// [TestFixture]",262],["[TestFixture, RequiresSTA]",240],["//    [TestFixture]",224]]},{"word":"TestMethod","context":[["[TestMethod]",461679],["[TestMethod()]",27940],["[TestMethod, Priority(0)]",5239],["[TestMethod, Priority(1)]",3127],["//[TestMethod]",2671],["[TestMethod, Priority(0), TestCategory(\"Core\")]",2096],["//[TestMethod()]",912],["//        [TestMethod]",910],["void TestMethod ()",906],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethod()]",641]]},{"word":"TestTools","context":[["using Microsoft.VisualStudio.TestTools.UnitTesting;",68889],["﻿using Microsoft.VisualStudio.TestTools.UnitTesting;",7384],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]",2419],["using Microsoft.Protocols.TestTools;",1318],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethod()]",641],["[Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]",619],["[Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]",619],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]",602],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute(\"CheckIn\")]",518],["using VisualStudio.TestTools.UnitTesting;",496]]},{"word":"Tests","context":[["namespace Tests",2412],["﻿// Accord Unit Tests",1827],["#region Tests",1683],["using Assert = Newtonsoft.Json.Tests.XUnitAssert;",1126],["using Tests.Framework;",1074],["// Tests:",1021],["using Newtonsoft.Json.Tests.TestObjects;",965],["namespace MixERP.Net.Api.Core.Tests",914],["using Tests.Framework.Integration;",912],["public class Tests",907]]},{"word":"Text","context":[["using System.Text;",965951],["using System.Text.RegularExpressions;",70251],["using Microsoft.CodeAnalysis.Text;",13979],["public string Text { get; set; }",7074],["public string Text",6424],["using Microsoft.VisualStudio.Text;",5968],["Text = text;",4387],["using Microsoft.VisualStudio.Text.Editor;",3733],["this.Text = \"Form1\";",3557],["this.menuStrip1.Text = \"menuStrip1\";",3046]]},{"word":"TextBox","context":[["this.textBox1 = new System.Windows.Forms.TextBox();",4359],["private System.Windows.Forms.TextBox textBox1;",4116],["this.textBox2 = new System.Windows.Forms.TextBox();",1958],["private System.Windows.Forms.TextBox textBox2;",1847],["this.textBox3 = new System.Windows.Forms.TextBox();",1100],["private System.Windows.Forms.TextBox textBox3;",1042],["this.textBoxDescription = new System.Windows.Forms.TextBox();",832],["private System.Windows.Forms.TextBox textBoxDescription;",814],["protected global::System.Web.UI.WebControls.TextBox Email;",738],["this.textBox4 = new System.Windows.Forms.TextBox();",701]]},{"word":"That","context":[["Assert.That( result, Is.Not.Null );",16519],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["Assert.That(",5153],["Assert.That(result.Count(), Is.EqualTo(1));",1559],["Assert.That(result, Is.Not.Null);",1309],["Assert.That( result.Value, Is.InstanceOf( target.Value.GetType() ) );",1276],["Assert.That(result, Is.True);",1086],["/// That means any unused constructor parameters won't be reported as such.",1024],["Assert.That( result.Polymorphic, Is.InstanceOf( target.Polymorphic.GetType() ) );",880],["Assert.That( result.Polymorphic, Is.EqualTo( target.Polymorphic ) );",880]]},{"word":"The","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["/// The cancellation token.",37778],["/// The operations group for this extension method.",24979],["/// <param name=\"value\">The value.</param>",22398],["/// <param name=\"config\">The <see cref=\"HttpConfiguration\"/>.</param>",21088],["/// <param name=\"context\">The parse tree.</param>",20795],["/// <param name=\"type\">The type.</param>",15574],["/// The main entry point for the application.",15420],["/// <param name=\"mediaType\">The media type.</param>",13700],["/// The headers that will be added to request.",12749]]},{"word":"This","context":[["//     This code was generated by a tool.",125487],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["//     This code was generated from a template.",10945],["// Warning: This code was generated by a tool.",10227],["This file is part of dnSpy",6807],["This file is part of MixERP.",5354],["//    This code was generated from a template.",5346],["/// Initializes the singleton application object.  This is the first line of authored code",5125],["// This code was auto-generated by AFNOR StoredProcedureSystem, version 1.0",5114]]},{"word":"Thread","context":[["Thread.Sleep(1000);",9958],["Thread.Sleep(100);",8047],["Thread.Sleep(500);",4779],["Thread.Sleep(10);",3431],["Thread.Sleep(1);",2752],["Thread.Sleep(50);",2723],["Thread.Sleep(2000);",2653],["System.Threading.Thread.Sleep(1000);",2447],["System.Threading.Thread.Sleep(100);",2255],["Thread.Sleep(200);",2138]]},{"word":"Threading","context":[["using System.Threading.Tasks;",554913],["using System.Threading;",201062],["using System.Windows.Threading;",12714],["﻿using System.Threading.Tasks;",7872],["using System.Reactive.Threading.Tasks;",2527],["System.Threading.Thread.Sleep(1000);",2447],["System.Threading.Thread.Sleep(100);",2255],["﻿using System.Threading;",2019],["System.Threading.Thread.Sleep(500);",1685],["namespace System.Threading",1225]]},{"word":"ThrowIfCancellationRequested","context":[["cancellationToken.ThrowIfCancellationRequested();",87212],["_cancellationToken.ThrowIfCancellationRequested();",1050],["token.ThrowIfCancellationRequested();",961],["ct.ThrowIfCancellationRequested();",531],["cancellationToken.ThrowIfCancellationRequested ();",267],["context.CancellationToken.ThrowIfCancellationRequested();",233],["options.CancellationToken.ThrowIfCancellationRequested();",203],["cancelToken.ThrowIfCancellationRequested();",169],["if (cancellationToken.IsCancellationRequested) cancellationToken.ThrowIfCancellationRequested();",143],["_token.ThrowIfCancellationRequested();",131]]},{"word":"TimeSpan","context":[["validateInterval: TimeSpan.FromMinutes(30),",1961],["manager.DefaultAccountLockoutTimeSpan = TimeSpan.FromMinutes(5);",1891],["app.UseTwoFactorSignInCookie(DefaultAuthenticationTypes.TwoFactorCookie, TimeSpan.FromMinutes(5));",1869],["return TimeSpan.FromTicks(1234567);",1406],["typeof(TimeSpan), index =>",1404],["return TimeSpan.Zero;",1204],["{ typeof(TimeSpan), \"time interval\" },",1058],["AccessTokenExpireTimeSpan = TimeSpan.FromDays(14),",740],["this.HttpClient.Timeout = TimeSpan.FromSeconds(300);",537],["public TimeSpan Duration { get; set; }",524]]},{"word":"Title","context":[["public string Title { get; set; }",17849],["public string Title",6489],["Title = title;",2418],["public override string Title",1770],["public string Title {",1440],["public string Title { get; private set; }",1222],["public string Title;",1194],["this.Title = title;",1184],["Title = title,",1175],["Title,",1135]]},{"word":"To","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["///    <para>[To be supplied.]</para>",11568],["// To protect from overposting attacks, please enable the specific properties you want to bind to, for",3131],["* To change this template use Tools | Options | Coding | Edit Standard Headers.",3013],["// To enable password failures to trigger account lockout, change to shouldLockout: true",1539],["// To ensure that the font of your application is aligned with its supported languages and that the",1361],["// have not yet chosen which version of Entity Framework to use. To generate a context class and entity",1065],["// To enable legacy code generation, change the value of the 'Code Generation Strategy' designer",1065],["kernel.Bind<IHttpModule>().To<HttpApplicationInitializationHttpModule>();",813]]},{"word":"ToArray","context":[[".ToArray();",20243],["}).ToArray();",3831],["return result.ToArray();",3604],["return ms.ToArray();",3481],["return list.ToArray();",2904],[".ToArray()",1585],["string[] parameterTypeNames = parameters.Select(param => GetTypeName(param.ParameterType)).ToArray();",1419],["string[] argumentTypeNames = genericArguments.Select(t => GetTypeName(t)).ToArray();",1416],[".ToArray());",1262],["return stream.ToArray();",1096]]},{"word":"ToList","context":[[".ToList();",34442],["}).ToList();",8255],[".ToList()",4449],["var factorOptions = userFactors.Select(purpose => new SelectListItem { Text = purpose, Value = purpose }).ToList();",1889],[").ToList();",1720],["return Factory.Get<EntityParser.Filter>(catalog, sql, filterName).ToList();",1552],["}).ToList()",1257],[".ToList());",758],["var list = q.ToList();",688],["return query.ToList();",639]]},{"word":"ToString","context":[["public override string ToString()",127251],["return sb.ToString();",43889],["public override string ToString() {",17000],["LuaDLL.luaL_error(l, e.ToString());",15598],["return builder.ToString();",10933],["return NetRuntimeSystem.Convert.ToString(returnItem);",10344],["invocationId = TracingAdapter.NextInvocationId.ToString();",8982],["_invocationId = ServiceClientTracing.NextInvocationId.ToString();",8249],["return result.ToString();",7398],["public virtual string ToString() {}",6796]]},{"word":"ToolStripMenuItem","context":[["this.fileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();",2337],["private System.Windows.Forms.ToolStripMenuItem fileToolStripMenuItem;",2257],["this.exitToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();",1977],["private System.Windows.Forms.ToolStripMenuItem exitToolStripMenuItem;",1908],["this.aboutToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();",1479],["private System.Windows.Forms.ToolStripMenuItem aboutToolStripMenuItem;",1433],["this.helpToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();",1377],["private System.Windows.Forms.ToolStripMenuItem helpToolStripMenuItem;",1328],["this.openToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();",905],["private System.Windows.Forms.ToolStripMenuItem openToolStripMenuItem;",858]]},{"word":"Trait","context":[["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["[Trait(Category.AcceptanceType, Category.CheckIn)]",9483],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateMethod)]",5464],["[Fact, Trait(Traits.Feature, Traits.Features.QuickInfo)]",4674],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateVariable)]",4405],["[WpfFact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",4194],["[WpfFact, Trait(Traits.Feature, Traits.Features.Completion)]",3703]]},{"word":"Traits","context":[["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.KeywordRecommending)]",19347],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["[Fact, Trait(Traits.Feature, Traits.Features.Completion)]",16906],["using OpenRA.Traits;",7928],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Formatting)]",5648],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.Workspace)]",5524],["[Fact, Trait(Traits.Feature, Traits.Features.CodeActionsGenerateMethod)]",5464]]},{"word":"True","context":[["True",5762],["[global::System.Configuration.DefaultSettingValueAttribute(\"True\")]",4901],["Assert.True(result);",3804],["Assert.True(success);",2705],["Assert.True(false);",1988],["Assert.True(",1821],["// Separator         : True",1600],["// Header            : True",1600],["// Footer            : True",1600],["// OuterTableImplied : True",1600]]},{"word":"Type","context":[["TProtocolUtil.Skip(iprot, field.Type);",11364],["public string Type { get; set; }",7940],["///<param name=\"comProxyType\">Type of inner wrapped COM proxy\"</param>",7518],["Type = type;",7352],["public Type GetType() {}",6807],["public object Convert(object value, Type targetType, object parameter, CultureInfo culture)",5679],["public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)",5592],["Type = SkillShotType.SkillshotMissileLine,",4941],["public override bool CanConvert(Type objectType)",4302],["public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)",4195]]},{"word":"TypedDataSetGenerator","context":[["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"2.0.0.0\")]",1053],["[System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"2.0.0.0\")]",117],["[GeneratedCode(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\"), DebuggerNonUserCode]",85],["[GeneratedCode(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",28],["global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\"),",25]]},{"word":"U","context":[["// Use, duplication, or disclosure by the U.S. Government is subject to",1036],["/// <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>",974],["/// <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>",974],["case 'U':",780],["/// <typeparam name=\"U\"></typeparam>",766],["[U]",379],["/// <param name=\"computeVectors\">Compute the singular U and VT vectors or not.</param>",327],["return default(U);",274],["/// <param name=\"u\">If <paramref name=\"computeVectors\"/> is <c>true</c>, on exit U contains the left",266],["where U : class",266]]},{"word":"UI","context":[["using System.Web.UI;",51309],["using System.Web.UI.WebControls;",44527],["using Windows.UI.Xaml;",30356],["using Windows.UI.Xaml.Controls;",29191],["using Windows.UI.Xaml.Navigation;",20324],["using Windows.UI.Xaml.Data;",18774],["using Windows.UI.Xaml.Media;",18490],["using Windows.UI.Xaml.Input;",16170],["using Windows.UI.Xaml.Controls.Primitives;",15348],["using UnityEngine.UI;",14300]]},{"word":"UUID","context":[["return UUID.Zero;",1265],["return UUID.Zero.ToString();",805],["List<UUID> uuids = new List<UUID>();",367],["List<UUID> uuids = new List<UUID>();",367],["UUID uuid = UUID.Zero;",353],["UUID uuid = UUID.Zero;",353],["UUID key = new UUID();",288],["UUID key = new UUID();",288],["foreach (KeyValuePair<UUID, TaskInventoryItem> inv in m_host.TaskInventory)",273],["this.OnPropertyChanged(\"UUID\");",260]]},{"word":"UnityEngine","context":[["using UnityEngine;",92878],["﻿using UnityEngine;",92024],["using UnityEngine.UI;",14300],["using UnityEngine.EventSystems;",2610],["using UnityEngine.SceneManagement;",2417],["using UnityEngine.Events;",1413],["UnityEngine.Vector3 a1;",1337],["UnityEngine.Vector2 a1;",1210],["UnityEngine.Animator self=(UnityEngine.Animator)checkSelf(l);",1019],["UnityEngine.Animator self=(UnityEngine.Animator)checkSelf(l);",1019]]},{"word":"UnmanagedType","context":[["[return: MarshalAs(UnmanagedType.Bool)]",12764],["[MarshalAs(UnmanagedType.FunctionPtr)]",4267],["[return: MarshalAs(UnmanagedType.I1)]",4056],["[MarshalAs(UnmanagedType.LPWStr)]",3072],["[return: MarshalAs(UnmanagedType.Interface)]",2799],["[MarshalAs(UnmanagedType.I4)]",1967],["[MarshalAs(UnmanagedType.U4)]",1395],["[MarshalAs(UnmanagedType.I1)]",1393],["[return: MarshalAs(UnmanagedType.BStr)]",1376],["[In, MarshalAs(UnmanagedType.LPStruct)] Guid guidKey,",1218]]},{"word":"Update","context":[["// Update is called once per frame",30232],["void Update () {",22702],["void Update()",13191],["void Update ()",8684],["//the NeutralResourceLanguage attribute below.  Update the \"en-US\" in",8479],["public void Update()",6324],["Update();",4083],["private void Update()",3927],["base.Update(gameTime);",3561],["public override void Update()",3057]]},{"word":"Uri","context":[["httpRequest.RequestUri = new Uri(url);",11205],["_httpRequest.RequestUri = new Uri(_url);",6319],["url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);",5907],["_httpRequest.RequestUri = new System.Uri(_url);",4774],["url = url + Uri.EscapeDataString(resourceGroupName);",2901],["Uri uri;",1932],["typeof(Uri), index =>",1404],["return new Uri(String.Format(CultureInfo.CurrentCulture, \"http://webapihelppage{0}.com\", index));",1394],["_queryParameters.Add(string.Format(\"api-version={0}\", Uri.EscapeDataString(this.Client.ApiVersion)));",1337],["_url = _url.Replace(\"{subscriptionId}\", Uri.EscapeDataString(this.Client.SubscriptionId));",1164]]},{"word":"Use","context":[["// Use this for initialization",32451],["/// Use this attribute for custom wrappers similar to",7219],["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["public override void Use(Player p, string message)",2146],["//Use ClassInitialize to run code before running the first test in the class",2111],["//Use ClassCleanup to run code after all tests in a class have run",2109],["//Use TestCleanup to run code after each test has run",2094],["//Use TestInitialize to run code before running each test",2070],["/// <param name=\"responseFields\">Use this field to include those fields which are not included by default.</param>",1971],["// Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run",1675]]},{"word":"UseVisualStyleBackColor","context":[["this.button1.UseVisualStyleBackColor = true;",7241],["this.button2.UseVisualStyleBackColor = true;",3901],["this.btnCancel.UseVisualStyleBackColor = true;",3025],["this.button3.UseVisualStyleBackColor = true;",2218],["this.tabPage1.UseVisualStyleBackColor = true;",1644],["this.btnOK.UseVisualStyleBackColor = true;",1528],["this.tabPage2.UseVisualStyleBackColor = true;",1475],["this.button4.UseVisualStyleBackColor = true;",1364],["this.cancelButton.UseVisualStyleBackColor = true;",1303],["this.buttonCancel.UseVisualStyleBackColor = true;",1259]]},{"word":"User","context":[["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["#region Packet Session and User Check",5014],["var user = UserManager.FindById(User.Identity.GetUserId());",3490],["[Display(Name = \"User name\")]",3200],["if (User.Identity.IsAuthenticated)",3191],["/// User id of application user accessing this table.",2882],["public class User",2527],["var loginInfo = await AuthenticationManager.GetExternalLoginInfoAsync(XsrfKey, User.Identity.GetUserId());",1965],["// User Interface of the application, as well as listening (and optionally responding) to",1800],["var result = await UserManager.AddLoginAsync(User.Identity.GetUserId(), loginInfo.Login);",1763]]},{"word":"UserManager","context":[["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["UserManager = userManager;",4520],["public ApplicationUserManager UserManager",4151],["var user = UserManager.FindById(User.Identity.GetUserId());",3490],["var user = await UserManager.FindByNameAsync(model.Email);",3405],["result = await UserManager.AddLoginAsync(user.Id, info.Login);",2497],["public class ApplicationUserManager : UserManager<ApplicationUser>",2177],["var result = await UserManager.CreateAsync(user, model.Password);",1982],["var result = await UserManager.CreateAsync(user);",1900],["// string code = await UserManager.GenerateEmailConfirmationTokenAsync(user.Id);",1825]]},{"word":"Util","context":[["using Amazon.Runtime.Internal.Util;",7619],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"prettyPrint\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"oauth_token\", Google.Apis.Util.RequestParameterType.Query)]",1999],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["[Google.Apis.Util.RequestParameterAttribute(\"pageToken\", Google.Apis.Util.RequestParameterType.Query)]",1781],["using Android.Util;",1690],["[Google.Apis.Util.RequestParameterAttribute(\"maxResults\", Google.Apis.Util.RequestParameterType.Query)]",1506],["[Google.Apis.Util.RequestParameterAttribute(\"maxResults\", Google.Apis.Util.RequestParameterType.Query)]",1506]]},{"word":"Utilities","context":[["using Roslyn.Utilities;",15893],["using Roslyn.Test.Utilities;",7531],["using Newtonsoft.Json.Utilities;",3470],["using DotNetNuke.Common.Utilities;",3291],["using Microsoft.CodeAnalysis.Test.Utilities;",3272],["using Microsoft.CodeAnalysis.CSharp.Test.Utilities;",3102],["using Microsoft.VisualStudio.Utilities;",2985],["using Microsoft.Build.Utilities;",2974],["using Microsoft.WindowsAzure.Commands.Utilities.Common;",2456],["using ClearCanvas.Common.Utilities;",2252]]},{"word":"Utils","context":[["oconPCS = new OleDbConnection(Utils.Instance.OleDbConnectionString);",2190],["Utils utils = new Utils();",2006],["Utils utils = new Utils();",2006],["Utils.XPathNodesetTest(xml, testExpression, expected, startingNodePath: startingNodePath);",1605],["using Utils;",1222],["using SIL.Utils;",1051],["using YAF.Utils;",1017],["Utils.XPathNodesetTest(xml, testExpression, expected);",1003],["using System.Dynamic.Utils;",936],["public static class Utils",896]]},{"word":"V","context":[["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 1)]",16039],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 0)]",6632],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"writeToParcel\", \"(Landroid/os/Parcel;I)V\", AccessFlags = 1)]",2697],["[Dot42.DexImport(\"close\", \"()V\", AccessFlags = 1)]",1777],["[Dot42.DexImport(\"finalize\", \"()V\", AccessFlags = 4)]",1602],["[Dot42.DexImport(\"<init>\", \"(I)V\", AccessFlags = 1)]",1575],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 4)]",1235],["return default(V);",1126],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/Throwable;)V\", AccessFlags = 1)]",1075]]},{"word":"Value","context":[["_httpRequest.Headers.TryAddWithoutValidation(_header.Key, _header.Value);",11093],["Value = value;",10579],["public string Value { get; set; }",9278],["public string Value",5661],["this.Value = value;",5430],["Value =",4647],["if (this.Client.GenerateClientRequestId != null && this.Client.GenerateClientRequestId.Value)",4235],["public int Value { get; set; }",3423],["return Ensure(n.HasValue && n.Value == t);",3000],["public object Value",2943]]},{"word":"Vector2","context":[["new Vector2(",1843],["UnityEngine.Vector2 a1;",1210],["UnityEngine.Vector2 a2;",750],["Vector2 result;",673],["public Vector2 Position",635],["return new Vector2(",634],["public Vector2 Position;",598],["Vector2 position;",468],["return Vector2.Zero;",439],["public Vector2 Position { get; set; }",407]]},{"word":"Vector3","context":[["UnityEngine.Vector3 a1;",1337],["public Vector3 Position;",1156],["return Vector3.zero;",1129],["return new Vector3(",1083],["UnityEngine.Vector3 a2;",938],["Vector3 result;",818],["new Vector3(",814],["public Vector3 Position",688],["Vector3 vector;",654],["UnityEngine.Vector3 v;",554]]},{"word":"Verify","context":[["parsedArgs.Errors.Verify();",10711],["// Verify outcome",8933],["parsedArgs.Errors.Verify(",4735],["// Verify",2540],["Assert.Inconclusive(\"Verify the correctness of this test method.\");",2408],["Verify(children,",1864],["Verify(evalResult,",1602],["args.Errors.Verify();",1284],["public override bool? Verify(ServiceContext context, out ExtensionRuleViolationInfo info)",926],["// Verify attributes from source and then load metadata to see attributes are written correctly.",762]]},{"word":"Version","context":[["//      Major Version",251287],["//      Minor Version",251283],["// Version information for an assembly consists of the following four values:",249312],["//     Runtime Version:4.0.30319.42000",25738],["/// <para>Version: 2.6</para>",9422],["//     Runtime Version:4.0.30319.34014",8434],["//     Runtime Version:4.0.30319.34209",7381],["//     Runtime Version:4.0.30319.18444",7202],["//     Runtime Version:4.0.30319.1",4578],["public string Version { get; set; }",3193]]},{"word":"View","context":[["return View();",71746],["return View(model);",48374],["return View(\"Error\");",12209],["return View(\"Lockout\");",5639],["/// View the original documentation topic online:",3399],["return View(viewModel);",3377],["return this.View();",3286],["return this.View(model);",3011],["this._OfficeId = AppUsers.GetCurrent().View.OfficeId.ToInt();",2672],["this._LoginId = AppUsers.GetCurrent().View.LoginId.ToLong();",2672]]},{"word":"Visible","context":[["[DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]",2446],["Visible = false;",2169],["public bool Visible",1755],["this.Visible = false;",1608],["Visible = true;",1401],["return Visibility.Visible;",1372],["if (Visible)",846],["Alert_Mensaje.Visible = true;",705],["this.Visible = true;",685],["if (!Visible)",671]]},{"word":"VisualStudio","context":[["using Microsoft.VisualStudio.TestTools.UnitTesting;",68889],["﻿using Microsoft.VisualStudio.TestTools.UnitTesting;",7384],["using Microsoft.VisualStudio.Shell.Interop;",6606],["using Microsoft.VisualStudio.Text;",5968],["using Microsoft.VisualStudio.Shell;",5564],["using Microsoft.VisualStudio;",4226],["using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;",3964],["using Microsoft.VisualStudio.Text.Editor;",3733],["using Microsoft.VisualStudio.Utilities;",2985],["[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]",2419]]},{"word":"We","context":[["// We do not provide override values",548],["[ExcludeFromCodeCoverage(Justification = \"We only need to test one currency.\")]",300],["//We get the player from the event arguments and check if he qualifies",259],["* on any button in the quest offer dialog. We check if he accepts or",258],["//We also check if the player is already doing the quest",250],["// We should warn whenever one of the builtin nullable operators is used and one op is null and",226],["// We take on all the available display area",212],["// We're not in the UI thread, so we need to call BeginInvoke",200],["// We no longer generate a warning in such cases.",199],["// We protect our code from consumer thrown exceptions",198]]},{"word":"Web","context":[["using System.Web;",177296],["using System.Web.Mvc;",100134],["using System.Web.UI;",51309],["using System.Web.Http;",48439],["using System.Web.UI.WebControls;",44527],["using System.Web.Routing;",33231],["using System.Web.Security;",17978],["using System.Web.Optimization;",16234],["﻿using System.Web;",14346],["using System.Web.UI.HtmlControls;",12135]]},{"word":"WebControls","context":[["using System.Web.UI.WebControls;",44527],["using System.Web.UI.WebControls.WebParts;",6506],["namespace System.Web.UI.WebControls",1646],["protected global::System.Web.UI.WebControls.ContentPlaceHolder MainContent;",1069],["protected global::System.Web.UI.WebControls.Label Label1;",878],["namespace System.Web.UI.WebControls {",813],["protected global::System.Web.UI.WebControls.TextBox Email;",738],["protected global::System.Web.UI.WebControls.Literal ErrorMessage;",727],["protected global::System.Web.UI.WebControls.ContentPlaceHolder HeadContent;",694],["protected global::System.Web.UI.WebControls.TextBox Password;",670]]},{"word":"When","context":[["// When",26576],["// When the navigation stack isn't restored navigate to the first page,",4932],["// Given, When",2099],["//When",1222],["//       When specifying the KeyFile, the location of the KeyFile should be",1211],["/// ASP.NET MVC attribute. When applied to a parameter of an attribute,",969],["protected override void When()",917],["/// When applied to a target attribute, specifies a requirement for any type marked",869],["//When test complete, set the flag.",575],["// When the previous key or Alt+Left are pressed navigate back",450]]},{"word":"Width","context":[["public int Width",3137],["Width = width;",2344],["public int Width { get; set; }",2049],["this.Width = width;",1404],["public int Width;",1060],["public double Width",990],["public int Width { get; private set; }",803],["Width = width,",641],["public int Width {",616],["for (int x = 0; x < Width; x++)",522]]},{"word":"Windows","context":[["using System.Windows.Forms;",162506],["using System.Windows;",124900],["using System.Windows.Controls;",72031],["using System.Windows.Input;",64835],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["using System.Windows.Media;",61423],["#region Windows Form Designer generated code",54340],["| System.Windows.Forms.AnchorStyles.Right)));",49511],["using System.Windows.Data;",45617],["using System.Windows.Documents;",40252]]},{"word":"WithArguments","context":[["Diagnostic(ErrorCode.ERR_UseDefViolation, \"a\").WithArguments(\"a\"),",1641],["Diagnostic(ErrorCode.ERR_DuplicateNameInNS, \"Util\").WithArguments(\"Util\", \"NS\")",462],["Diagnostic(ErrorCode.ERR_BadArgExtraRef, \"l\").WithArguments(\"1\", \"ref\"),",456],["Diagnostic(ErrorCode.ERR_BadArgType, \"l\").WithArguments(\"2\", \"long\", \"char\"),",408],["Diagnostic(ErrorCode.ERR_BadArgExtraRef, \"c\").WithArguments(\"1\", \"ref\"),",360],["Diagnostic(ErrorCode.WRN_UnreferencedVar, \"z\").WithArguments(\"z\"));",317],["Diagnostic(ErrorCode.FTL_InputFileNameTooLong).WithArguments(\" \"));",265],["Diagnostic(ErrorCode.ERR_HasNoTypeVars, \"C<>\").WithArguments(\"Program.C\", \"type\"),",264],["Diagnostic(ErrorCode.WRN_UnreferencedVarAssg, \"y\").WithArguments(\"y\"),",264],["Diagnostic(ErrorCode.ERR_HasNoTypeVars, \"S<>\").WithArguments(\"Program.S\", \"type\"),",264]]},{"word":"WorkItem","context":[["[WorkItem(7336, \"DevDiv_Projects/Roslyn\")]",3122],["[WorkItem(468, \"https://github.com/dotnet/roslyn/issues/468\")]",498],["[WorkItem(9229, \"DevDiv_Projects/Roslyn\")]",496],["[WorkItem(1032176)]",454],["[WorkItem(1032176, \"http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/1032176\")]",415],["[WorkItem(530676, \"DevDiv\")]",368],["[WorkItem(1064748)]",368],["[WorkItem(528, \"http://github.com/dotnet/roslyn/issues/528\")]",361],["[WorkItem(617633)]",330],["[WorkItem(1064748, \"http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/1064748\")]",328]]},{"word":"Write","context":[["writer.Write( (int) 0 ); // version",13339],["writer.Write((int)0); // version",8055],["writer.Write( (int) 0 );",4988],["public override void Write(byte[] buffer, int offset, int count)",4563],["writer.Write((int)0);",4446],["dsSchema.Write(s1);",3541],["schema.Write(s2);",3541],["public void Write(TProtocol oprot) {",3008],["internal void Write(StreamWriter sw, string nodeName)",2458],["buffer.Write((byte)0x00);",2452]]},{"word":"WriteLine","context":[["Console.WriteLine();",52254],["__printer.WriteLine();",7630],["writer.WriteLine();",5952],["Console.WriteLine(ex.Message);",5355],["Console.WriteLine(\"\");",5023],["Console.WriteLine(",4736],["Console.WriteLine(e.Message);",4163],["WriteLine();",4135],["Console.WriteLine(ex);",3777],["Console.WriteLine(e);",3776]]},{"word":"X","context":[["X = x;",3769],["public class X",3220],["public int X;",2670],["this.X = x;",1950],["//     public int X { get; set; }",1942],["class X",1927],["public int X { get; set; }",1767],["public int X",1543],["public float X;",1204],["request.Headers[\"X-Amz-Target\"] = target;",1006]]},{"word":"Xaml","context":[["using Windows.UI.Xaml;",30356],["using Windows.UI.Xaml.Controls;",29191],["using Windows.UI.Xaml.Navigation;",20324],["using Windows.UI.Xaml.Data;",18774],["using Windows.UI.Xaml.Media;",18490],["using Windows.UI.Xaml.Input;",16170],["using Windows.UI.Xaml.Controls.Primitives;",15348],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 4.0.0.0\")]",8844],["using Windows.UI.Xaml.Media.Animation;",2699],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Windows.UI.Xaml.Build.Tasks\",\" 14.0.0.0\")]",2482]]},{"word":"Xml","context":[["using System.Xml;",81744],["using System.Xml.Serialization;",62328],["[System.Xml.Serialization.XmlAttributeAttribute()]",35886],["using System.Xml.Linq;",34701],["[System.Xml.Serialization.XmlIgnoreAttribute()]",33091],["[System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]",9313],["[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]",8418],["[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]",8418],["using System.Xml.XPath;",8298],["using System.Xml.Schema;",5994]]},{"word":"Xunit","context":[["using Xunit;",90018],["using Xunit.Abstractions;",3867],["using Xunit.Extensions;",3698],["﻿using Xunit;",1722],["[Xunit.FactAttribute()]",1199],["using Test = Xunit.FactAttribute;",1153],["using Xunit.Sdk;",1103],["using Microsoft.Xunit.Performance;",492],["[Xunit.TraitAttribute(\"Category\", \"mock\")]",461],["namespace Xunit.Sdk",398]]},{"word":"Y","context":[["Y = y;",3600],["//     public int Y { get; set; }",1936],["this.Y = y;",1820],["public int Y;",1711],["public int Y { get; set; }",1604],["public int Y",1350],["public float Y;",1213],["// Regular complex class Point will have properties X and Y added to UriParameters collection.",970],["//         Y = y;",968],["public double Y",887]]},{"word":"You","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["* You can contact Ascensio System SIA by email at sales@onlyoffice.com",7287],["//You can use the following additional attributes as you write your tests:",2077],["// You can write your own provider and plug it in here.",1732],["// You can configure the account lockout settings in IdentityConfig",1519],["//  You can use the DbSet<T>.AddOrUpdate() helper extension method",1454],["// You have 17 seconds to return from this method, or iOS will terminate your application.",1454],["// You can use the following additional attributes as you write your tests:",1434],["// You can specify all the values or you can use the default the Revision and",1086]]},{"word":"Z","context":[["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["Z = z;",1360],["namespace Z.Test",1086],["using Z.Dapper.Plus;",986],["namespace Z.Test.EntityFramework.Plus",717],["public float Z;",713],["case 'Z':",703],["this.Z = z;",599],["using Z.EntityFramework.Plus;",548],["[Dot42.DexImport(\"isEmpty\", \"()Z\", AccessFlags = 1)]",413]]},{"word":"Zero","context":[["IntPtr.Zero,",4270],["return IntPtr.Zero;",3876],["if (_pNative == RootSystem.IntPtr.Zero)",1689],["IntPtr.Zero);",1490],["swigCPtr = new HandleRef(null, IntPtr.Zero);",1306],["return UUID.Zero;",1265],["return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;",1261],["return TimeSpan.Zero;",1204],["swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);",1091],["if (handle == IntPtr.Zero)",1052]]},{"word":"_","context":[["//                          | ' </ _` | |  _| || | '_/ _` |",2459],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",2459],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",2459],["//                           _  __     _ _",2459],["//                          | ' </ _` | |  _| || | '_/ _` |",2459],["//                          | ' </ _` | |  _| || | '_/ _` |",2459],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",2459],["//                          |_|\\_\\__,_|_|\\__|\\_,_|_| \\__,_|",2459],["//                          | |/ /__ _| | |_ _  _ _ _ __ _",2459],["//                           _  __     _ _",2459]]},{"word":"_httpRequest","context":[["_httpRequest.Dispose();",18175],["if (_httpRequest.Headers.Contains(_header.Key))",11093],["_httpRequest.Headers.TryAddWithoutValidation(_header.Key, _header.Value);",11093],["_httpRequest.Headers.Remove(_header.Key);",11093],["_result.Request = _httpRequest;",11093],["ServiceClientTracing.SendRequest(_invocationId, _httpRequest);",8249],["ex.Request = new HttpRequestMessageWrapper(_httpRequest, _requestContent);",7416],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056],["HttpRequestMessage _httpRequest = new HttpRequestMessage();",6320],["_httpRequest.RequestUri = new Uri(_url);",6319]]},{"word":"_httpResponse","context":[["if (_httpResponse != null)",18174],["_httpResponse.Dispose();",18173],["_responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",16611],["_result.Response = _httpResponse;",11093],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["ServiceClientTracing.ReceiveResponse(_invocationId, _httpResponse);",8249],["HttpStatusCode _statusCode = _httpResponse.StatusCode;",8249],["ex.Response = new HttpResponseMessageWrapper(_httpResponse, _responseContent);",7416],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056],["HttpResponseMessage _httpResponse = null;",5486]]},{"word":"a","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["//     This code was generated by a tool.",125487],["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// class via a tool like ResGen or Visual Studio.",38476],["//(used if a resource is not found in the page,",17306],["//     This code was generated from a template.",10945],["// Warning: This code was generated by a tool.",10227],["dynamic d = a;",9016],["return a;",8539]]},{"word":"aapt","context":[["// aapt resource value: 0",37285],["// aapt resource value: 1",32367],["// aapt resource value: 2",25848],["// aapt resource value: 3",19849],["// aapt resource value: 4",18508],["// aapt resource value: 5",15746],["// aapt resource value: 6",12778],["// aapt resource value: 7",12625],["// aapt resource value: 8",10197],["// aapt resource value: 9",8865]]},{"word":"about","context":[["// General Information about an assembly is controlled through the following",263447],["// Information about this assembly is defined by the following attributes.",8530],["// if desired. See the Mono documentation for more information about signing.",8404],["/// <param name=\"e\">Details about the suspend request.</param>",5254],["/// <param name=\"e\">Details about the launch request and process.</param>",4776],["///information about and functionality for the current test run.",3535],["/// <param name=\"e\">Details about the navigation failure</param>",3296],["// <http://www.mysql.com/about/legal/licensing/foss-exception.html>.",2670],["/// Invoked when this page is about to be displayed in a Frame.",2592],["// and to use a cookie to temporarily store information about a user logging in with a third party login provider",2558]]},{"word":"abstract","context":[["public abstract string Name { get; }",1745],["public abstract class ModelDescription",1069],["public abstract void Dispose();",957],["public abstract class Error",514],["abstract class A",514],["public abstract class Info",511],["public abstract class Debug",510],["public abstract class Warning",509],["public abstract string Description { get; }",450],["public abstract void Close();",417]]},{"word":"access","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["/// Provides easy access to the root frame of the Phone Application.",1804],["/// Provides access to string resources.",1350],["/// <returns>An access token with an audience of the target principal</returns>",1188],["/// <param name=\"targetRealm\">Realm to use for the access token's nameid and audience</param>",1188],["/// <param name=\"targetPrincipalName\">Name of the target principal to retrieve an access token for</param>",891],["/// <exception cref=\"NotSupportedException\">Any access</exception>",883],["/// <returns>A ClientContext ready to call targetUrl with a valid access token</returns>",870],["/// This method provides no access to output parameters or the stored procedure's return value parameter.",790],["/// <param name=\"accessToken\">User&#39;s OAuth2 access token</param>",776]]},{"word":"action","context":[["/// <param name=\"actionName\">Name of the action.</param>",17490],["url: \"{controller}/{action}/{id}\",",8438],["action();",7512],["defaults: new { controller = \"Home\", action = \"Index\", id = UrlParameter.Optional }",7060],["partial void OnValidate(System.Data.Linq.ChangeAction action);",4617],["if (action == null)",3758],["///<param name=\"replacedObject\">object to replaced. replacedObject are not usable after this action</param>",3689],["/// <param name=\"action\"></param>",2735],["this.eventAction = action;",2699],["return action;",2413]]},{"word":"actual","context":[["Assert.AreEqual(expected, actual);",17782],["Assert.Equal(expected, actual);",10179],["Assert.IsNotNull(actual);",3204],["Assert.NotNull(actual);",1613],["string actual;",1528],["CollectionAssert.Contains(actual, expected);",1425],["bool actual;",1312],["int actual;",1095],["Assert.AreEqual(1, actual.Count);",1041],["actual);",1005]]},{"word":"add","context":[["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["add",19107],["add { }",13596],["add {",4803],["// Do not add any additional code to this method",3689],["/// Optional. The delegating handlers to add to the http client pipeline.",3324],["/// with the sole purpose to increase usability and add IntelliSense support.",3120],["// This is a security feature which is used when you change a password or add an external login to your account.",1620],["// This method gets called by the runtime. Use this method to add services to the container.",1337],["// Uncomment the following to provide samples for PageResult<T>. Must also add the Microsoft.AspNet.WebApi.OData",1075]]},{"word":"added","context":[["/// Headers that will be added to request.",13974],["/// The headers that will be added to request.",12749],[": message == ManageMessageId.AddPhoneSuccess ? \"Your phone number was added.\"",1736],["/// <returns>The newly added part.</returns>",1044],["// Class Point is bindable with a TypeConverter, so Point will be added to UriParameters collection.",970],["// Regular complex class Point will have properties X and Y added to UriParameters collection.",970],["/// The number of rows added to the table.",848],["added = true;",822],["the Contributor who added the notice.",631],["bool added = false;",630]]},{"word":"after","context":[["///<param name=\"replacedObject\">object to replaced. replacedObject are not usable after this action</param>",3689],["//Use ClassCleanup to run code after all tests in a class have run",2109],["//Use TestCleanup to run code after each test has run",2094],["// Use TestCleanup to run code after each test has run",1673],["//  This method will be called after migrating to the latest version.",1510],["// Use ClassCleanup to run code after all tests in a class have run",1478],["<source locate=\"after\">",1424],["/// Clean up after each test",1423],["/// Restores the content transitions after the app has launched.",1250],["// TODO: Add any constructor code after InitializeComponent call",1040]]},{"word":"all","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["///   Overrides the current thread's CurrentUICulture property for all",38271],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["//Use ClassCleanup to run code after all tests in a class have run",2109],["in all copies or substantial portions of the Data.",1940],["// Use ClassCleanup to run code after all tests in a class have run",1478],["/// Sets the sample directly for all actions with the specified type and media type.",1432],["// Set the FlowDirection of all elements under the root frame based",1373],["/// Constructor that accepts values for all mandatory fields",1325],["[Route(\"all\")]",1147]]},{"word":"already","context":[["// Do not repeat app initialization when the Window already has content,",5315],["// Sign in the user with this external login provider if the user already has a login",2112],["// Require that the user has already logged in via username/password or external login",1890],["// The object has been created already, just return it. This will handle the circular reference case.",1433],["/// has already been disposed.",936],["// Check to see if Dispose has already been called.",733],["return \"User name already exists. Please enter a different user name.\";",600],["return \"A user name for that e-mail address already exists. Please enter a different e-mail address.\";",595],["/// You already have a pending update to an Auto Scaling resource (for example, a group,",580],["return BadRequest(\"The external login is already associated with an account.\");",533]]},{"word":"an","context":[["// associated with an assembly.",263598],["// General Information about an assembly is controlled through the following",263447],["// Version information for an assembly consists of the following four values:",249312],["/// Thrown when the operation returned an invalid status code",11459],["/// A standard service response including an HTTP status code and",5861],["var ex = new ErrorException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",5667],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["// Send an email with this link",4186],["//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn",2906],["* @return {LTDescr} LTDescr an object that distinguishes the tween",2883]]},{"word":"and","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* Redistribution and use in source and binary forms, with or without",16512],["* Redistribution and use in source and binary forms, with or without",16512],["*       documentation and/or other materials provided with the distribution.",13352],["// Redistribution and use in source and binary forms, with or without",12613],["// Redistribution and use in source and binary forms, with or without",12613]]},{"word":"any","context":[["/// Clean up any resources being used.",69697],["// app, or any theme specific resource dictionaries)",8770],["// **NOTE** This file was generated by a tool and any changes will be overwritten.",4756],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>",4536],["ShareX - A program that allows you to take screenshots and share any file type",3917],["// Do not add any additional code to this method",3689],["//TODO: Save application state and stop any background activity",3617],["* vspython@microsoft.com. By using this source code in any fashion, you are agreeing to be bound",2989],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth",2224],["form, as well as any drawings, specifications, and documentation",1940]]},{"word":"api","context":[["/// <param name=\"api\">The <see cref=\"ApiDescription\"/>.</param>",6719],["routeTemplate: \"api/{controller}/{id}\",",5520],["if (api == null)",2949],["throw new ArgumentNullException(\"api\");",2866],["string actionName = api.ActionDescriptor.ActionName;",2475],["string controllerName = api.ActionDescriptor.ControllerDescriptor.ControllerName;",2475],["IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);",2474],["formatters = api.SupportedResponseFormatters;",1432],["formatters = api.SupportedRequestBodyFormatters;",1432],["public IDictionary<MediaTypeHeaderValue, object> GetSampleResponses(ApiDescription api)",1428]]},{"word":"app","context":[["// app, or any theme specific resource dictionaries)",8770],["public void Configuration(IAppBuilder app)",5437],["// Do not repeat app initialization when the Window already has content,",5315],["public void ConfigureAuth(IAppBuilder app)",3547],["app.UseExternalSignInCookie(DefaultAuthenticationTypes.ExternalCookie);",3299],["ConfigureAuth(app);",3200],["//app.UseMicrosoftAccountAuthentication(",3013],["//app.UseTwitterAuthentication(",2993],["app.UseCookieAuthentication(new CookieAuthenticationOptions",2950],["//app.UseFacebookAuthentication(",2947]]},{"word":"application","context":[["/// The main entry point for the application.",15420],["// or application resource dictionaries)",8776],["\"application/json\"",5347],["/// Provides application-specific behavior to supplement the default Application class.",5304],["/// Invoked when the application is launched normally by the end user.  Other entry points",5237],["/// without knowing whether the application will be terminated or resumed with the contents",5228],["/// Invoked when application execution is being suspended.  Application state is saved",5198],["/// Initializes the singleton application object.  This is the first line of authored code",5125],["/// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.",4114],["//TODO: Load state from previously suspended application",3637]]},{"word":"are","context":[["ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located",8570],["//inside a <PropertyGroup>.  For example, if you are using US english",8472],["// The following attributes are used to specify the signing key for the assembly,",8391],["// are met:",4436],["* that the following conditions are met:",4276],["///<param name=\"replacedObject\">object to replaced. replacedObject are not usable after this action</param>",3689],["/// The name of the database on which queries are being executed to.",3508],["* vspython@microsoft.com. By using this source code in any fashion, you are agreeing to be bound",2989],["// MySQL Connectors. There are special exceptions to the terms and",2662],["Console.WriteLine(\"and they are NOT equal !\");",2490]]},{"word":"args","context":[["static void Main(string[] args)",75227],["public static void Main(string[] args)",14997],["/// <param name=\"args\"></param>",8748],["private static void Main(string[] args)",4353],["/// <param name=\"args\">",4147],["public static void Main(string[] args) {",2685],["return args;",2672],["public static int Main(string[] args)",2651],["if (args.Length == 0)",2495],["public static void Main (string[] args)",2426]]},{"word":"argument","context":[["///Row event argument class",2529],["/// <param name=\"argument\">The argument to format.</param>",2245],["/// <param name=\"argument\">The argument to format.</param>",2245],["public override TResult Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument)",1679],["///   ShowError(\"Failed: {0}\"); // Warning: Non-existing argument in format string",1094],["/// argument is null.</exception>",880],["/// Indicates that the function argument should be string literal and match one",873],["/// <typeparam name=\"TArgument1\">The type of the first argument.</typeparam>",798],["/// <typeparam name=\"TArgument2\">The type of the second argument.</typeparam>",792],["/// <param name=\"argument2\">The second argument to format.</param>",780]]},{"word":"arguments","context":[["/// <param name=\"e\">Event arguments.</param>",2016],["/// <param name=\"args\">The command line arguments.</param>",1807],["/// <param name=\"e\">The event arguments.</param>",1513],["/// <param name=\"args\">The arguments.</param>",1496],["/// A <see cref=\"System.Object\"/> for arguments to be sent to the \"oncomplete\" method.",1200],["/// A <see cref=\"System.Object\"/> for arguments to be sent to the \"onstart\" method.",1200],["/// A <see cref=\"System.Object\"/> for arguments to be sent to the \"onupdate\" method.",1200],["/// <param name=\"e\">Event arguments</param>",1140],["// validate arguments",1108],["/// Indicates that the marked method builds string by format pattern and (optional) arguments.",989]]},{"word":"array","context":[["for (int i = 0; i < array.Length; i++)",8147],["return array;",6087],["if (array == null)",4660],["throw new ArgumentNullException(\"array\");",2925],["for (int j = 0; j < array.Length; j++)",2353],["// get the array",2252],["// generate expected array",2248],["// otherwise, verify the contents array",2248],["public void CopyTo(T[] array, int arrayIndex)",1921],["/// <param name=\"array\"></param>",1775]]},{"word":"as","context":[["// by using the '*' as shown below:",242545],["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["Frame rootFrame = Window.Current.Content as Frame;",5821],["/// executed, and as such is the logical equivalent of main() or WinMain().",5291],["// Create a Frame to act as the navigation context and navigate to the first page",5190],["// configuring the new page by passing required information as a navigation",4927],["// Should be rendered as:",4867],["/// will be used such as when the application is launched to open a specific file.",3257],["/// Main method, to run this code example as a standalone application.",2244]]},{"word":"assembly","context":[["[assembly: AssemblyCulture(\"\")]",288103],["[assembly: AssemblyConfiguration(\"\")]",287873],["[assembly: AssemblyTrademark(\"\")]",285036],["[assembly: ComVisible(false)]",281805],["[assembly: AssemblyDescription(\"\")]",264264],["// associated with an assembly.",263598],["// General Information about an assembly is controlled through the following",263447],["// Version information for an assembly consists of the following four values:",249312],["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// to COM components.  If you need to access a type in this assembly from",239070]]},{"word":"associated","context":[["// associated with an assembly.",263598],["/// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.",4114],["/// Gets the sample requests associated with the API.",1416],["/// Gets the sample responses associated with the API.",1416],["/// Gets the error messages associated with this model.",1416],["/// Preserves state associated with this page in case the application is suspended or the",954],["return BadRequest(\"The external login is already associated with an account.\");",533],["/// Gets a SharePointContext instance associated with the specified HTTP context.",507],["/// Gets the <see cref=\"NavigationHelper\"/> associated with this <see cref=\"Page\"/>.",480],["/// Provides storage for session state associated with the specified <see cref=\"Frame\"/>.",430]]},{"word":"async","context":[[".Do(async e =>",2905],["public async Task<ActionResult> LinkLoginCallback()",2483],["public async Task<ActionResult> Login(LoginViewModel model, string returnUrl)",2272],["public async Task<ActionResult> Register(RegisterViewModel model)",2188],["public async Task<ActionResult> ExternalLoginCallback(string returnUrl)",2187],["public async Task<ActionResult> ExternalLoginConfirmation(ExternalLoginConfirmationViewModel model, string returnUrl)",2093],["public async Task<ActionResult> ResetPassword(ResetPasswordViewModel model)",1829],["public async Task<ActionResult> ForgotPassword(ForgotPasswordViewModel model)",1825],["public async Task<ActionResult> ConfirmEmail(string userId, string code)",1769],["public async Task<ActionResult> VerifyCode(VerifyCodeViewModel model)",1631]]},{"word":"at","context":[["[StringLength(100, ErrorMessage = \"The {0} must be at least {2} characters long.\", MinimumLength = 6)]",11525],["* You can contact Ascensio System SIA by email at sales@onlyoffice.com",7287],["// cesarsouza at gmail.com",6577],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["/// <param name=\"start\">Row number at which to start reading.</param>",3017],["// The Blank Application template is documented at http://go.microsoft.com/fwlink/?LinkId=234227",1721],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409",1709],["* information for Cursive Systems, Inc. is available at",1546],["// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236",1544]]},{"word":"attribute","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// COM, set the ComVisible attribute to true on that type.",238633],["//the NeutralResourceLanguage attribute below.  Update the \"en-US\" in",8479],["/// Use this attribute for custom wrappers similar to",7219],["if (attribute != null)",2282],["/// ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter",2053],["if (attribute == null)",1417],["return attribute;",1377],["// COM, set the ComVisible attribute to true on that type. Only Windows",1270],["/// from the context. Use this attribute for custom wrappers similar to",1262]]},{"word":"attributes","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Information about this assembly is defined by the following attributes.",8530],["// The following attributes are used to specify the signing key for the assembly,",8391],["if (attributes.Length == 0)",3820],["#region Additional test attributes",3487],["//You can use the following additional attributes as you write your tests:",2077],["if (attributes.Length > 0)",1594],["// You can use the following additional attributes as you write your tests:",1434],["return attributes;",1358],["// Use the attributes below to control which key is used for signing.",1302]]},{"word":"author","context":[["* @author    : Ext.NET, Inc. http://www.ext.net/",3882],["/// </author>",3182],["LocalName = \"author\",",1437],["/// <author>Nicko Cadell</author>",1425],["/// <author>Nicko Cadell</author>",1425],["Name = \"author\",",1328],["// <author>Anton Angelov</author>",1232],["// <author>Anton Angelov</author>",1232],["/// <author>",1125],["/// <author>Gert Driesen</author>",875]]},{"word":"auto","context":[["// </auto-generated>",169020],["// <auto-generated>",169005],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["[System.Security.SecurityCritical]  // auto-generated",18500],["[System.Security.SecuritySafeCritical]  // auto-generated",17743],["// <auto-generated />",9304],["// This code was auto-generated by AFNOR StoredProcedureSystem, version 1.0",5114],["[System.Security.SecurityCritical]  // auto-generated_required",4896],["//  <auto-generated>",2348],["//  </auto-generated>",2320]]},{"word":"available","context":[["/// No Metadata Documentation available.",28550],["/// Whether this element is available in a specific version of Office Application.",3914],["//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in .NET:",1969],["* information for Cursive Systems, Inc. is available at",1546],["//// formats by the available formatters.",1437],["/// <para>The computed value falls back to the next available value e.g. appearance, init or",1236],["///<para>This class is available in Office2010 or above.</para>",1170],["// The BsonMediaTypeFormatter (if available) is not used to serialize the TextSample object.",1085],["// No specific object available, try our factories.",1075],["// property to 'Legacy ObjectContext'. This property is available in the Properties Window when the model",1065]]},{"word":"await","context":[["await TestAsync(",18580],["_responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",16611],["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["await SignInManager.SignInAsync(user, isPersistent: false, rememberBrowser: false);",10246],["string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",9421],["await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);",9370],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056],["await",5018],["await this.Client.Credentials.ProcessHttpRequestAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",4391]]},{"word":"b","context":[["b.HasKey(\"Id\");",7898],["return b;",7277],["b.Property<int>(\"Id\")",5516],["/// <param name=\"b\"></param>",2775],["b.Property<string>(\"UserId\");",2535],["if (b == null)",2434],["b.Property<string>(\"ConcurrencyStamp\")",2234],["return !(a == b);",2207],["b.Property<string>(\"Name\")",2169],["case 'b':",2154]]},{"word":"base","context":[["base.Dispose(disposing);",95836],["base.Serialize( writer );",25497],["base.Deserialize( reader );",25470],[": base()",25421],["base.Serialize(writer);",20632],["base.Deserialize(reader);",20611],[": base(serial)",16865],["base(exception, cancelled, userState) {",14244],[": base(message)",12826],[": base(service)",10968]]},{"word":"be","context":[["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["/// Headers that will be added to request.",13974],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// The headers that will be added to request.",12749],["///    <para>[To be supplied.]</para>",11568],["[StringLength(100, ErrorMessage = \"The {0} must be at least {2} characters long.\", MinimumLength = 6)]",11525],["//     Manual changes to this file will be overwritten if the code is regenerated.",10815],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["//    Manual changes to this file will be overwritten if the code is regenerated.",5316],["/// without knowing whether the application will be terminated or resumed with the contents",5228]]},{"word":"been","context":[["message == ManageMessageId.ChangePasswordSuccess ? \"Your password has been changed.\"",2721],[": message == ManageMessageId.SetPasswordSuccess ? \"Your password has been set.\"",2685],[": message == ManageMessageId.SetTwoFactorSuccess ? \"Your two-factor authentication provider has been set.\"",1740],["// This file has been generated by the GUI designer. Do not modify.",1440],["// The object has been created already, just return it. This will handle the circular reference case.",1433],["/// The <see cref=\"IMailStore\"/> has been disposed.",1335],["//   (*) KeyName refers to a key that has been installed in the Crypto Service",1294],["// This file has been generated automatically by Xamarin Studio from the outlets and",1093],["// This file has been generated automatically by Xamarin Studio to store outlets and",941],["/// has already been disposed.",936]]},{"word":"before","context":[["//Use ClassInitialize to run code before running the first test in the class",2111],["//Use TestInitialize to run code before running each test",2070],["// Use TestInitialize to run code before running each test",1656],["// Use ClassInitialize to run code before running the first test in the class",1500],["/// Setup before each test",1423],["// Update the internal state of this socket according to the error before throwing.",974],["/// Allows the game to perform any initialization it needs to before starting to run.",934],["// GET count before",880],["//  The SettingsSaving event is raised before the setting values are saved.",710],["//  The SettingChanging event is raised before a setting's value is changed.",708]]},{"word":"behind","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["/// Pour modifier, déplacez la déclaration de champ du fichier de concepteur dans le fichier code-behind.",427],["/// Per la modifica, spostare la dichiarazione di campo dal file di progettazione al file code-behind.",360],["/// Modificar a declaração do campo de movimento do arquivo de designer para o arquivo code-behind.",135],["///To modify move field declaration from designer file to code-behind file.",109],["// responsiveness by initiating the data loading task in the code behind for App.xaml when the app",88],["\"DownloadToFile should not leave an empty file behind after failing.\");",66],["// distance meters behind the target",54],["// calculate which leg is behind, so as to leave that leg trailing in the jump animation",50],["/// Push all of the widgets on the specified object back, making them appear behind everything else.",47]]},{"word":"being","context":[["/// Clean up any resources being used.",69697],["/// Invoked when application execution is being suspended.  Application state is saved",5198],["/// The name of the database on which queries are being executed to.",3508],["// Show the areas of the app that are being redrawn in each frame.",1814],["// ResourceLangauge not being correctly set to a supported language",1373],["/// The name of the database where queries are being executed on.",1317],["/// <param name=\"existingValue\">The existing value of object being read.</param>",872],["* <param name='node'>the node being exited</param>",828],["* <param name='node'>the node being entered</param>",828],["misrepresented as being the original source code.",684]]},{"word":"below","context":[["// by using the '*' as shown below:",242545],["//the line below to match the UICulture setting in the project file.",8484],["//the NeutralResourceLanguage attribute below.  Update the \"en-US\" in",8479],["/// Please update the test case below to test the model.",1412],["// Use the attributes below to control which key is used for signing.",1302],["// Build Numbers by using the '*' as shown below:",1088],["// type, regardless of the body parameter or return type. The lines below avoid display of binary content.",1085],["// constructors) or for which you prefer to use non-default property values. Line below provides a fallback",1084],["// // To add event handlers for saving and changing settings, uncomment the lines below:",663],["/// <para>Documentation can be found following the link below:</para>",397]]},{"word":"binary","context":[["* Redistribution and use in source and binary forms, with or without",16512],["// Redistribution and use in source and binary forms, with or without",12613],["// Redistribution and use in source and binary forms, with or without modification,",6525],["Redistribution and use in source and binary forms, with or without",6264],["* Redistribution and use in source and binary forms,",4163],["* *   Redistributions in binary form must reproduce the above",4163],["* Redistribution and use in source and binary forms, with or without modification,",2186],["//     * Redistributions in binary form must reproduce the above",1954],["Redistribution and use in source and binary forms, with or without modification,",1405],["* - Redistribution and use in source and binary forms, with or without",1149]]},{"word":"block","context":[["return block;",1631],["/// A new memory block will be allocated for storing the matrix.",1273],["// The using block is used to call dispose automatically even if there are an exception.",621],["if (block == null)",588],["if (block != null)",529],["/// This is called from the compile/run appdomain to convert objects within an expression block to a string",481],["c1 = block[i1 + 1];",380],["c2 = block[i2 + 1];",380],["/// Makes a copy of this expression, changing the ContainingBlock to the given block.",378],["foreach (var block in blocks)",361]]},{"word":"body","context":[["/// A response object containing the response body and response headers.",9294],["Body = body;",4834],["/// <param name=\"body\">The body of the request.</param>",3852],["/// <param name=\"body\">The body of the request.</param>",3852],["/// <summary>Gets or sets the body of this request.</summary>",3833],["///<summary>Returns the body of the request.</summary>",3823],["/// The response body contains the status of the specified asynchronous",3544],["/// asynchronous operation failed, the response body includes the HTTP",3502],["/// the asynchronous operation succeeded, the response body includes",3496],["if (body == null)",2428]]},{"word":"bool","context":[["protected override void Dispose(bool disposing)",93650],["public override bool Equals(object obj)",51268],["return default(bool);",48702],["bool retVal = true;",18272],["protected virtual void Dispose(bool disposing)",14193],["private bool _contentLoaded;",10103],["bool result = false;",10039],["bool shouldTrace = TracingAdapter.IsEnabled;",8973],["bool[] ab_false = new bool[3];",8540],["bool[] ab_true = new bool[3];",8540]]},{"word":"break","context":[["break;",2288233],["yield break;",23794],["break;}",4499],["} break;",3905],["//    break;",3659],["//            break;",3598],["//        break;",3359],["default: break;",2758],["//                    break;",2640],["//                break;",1976]]},{"word":"buffer","context":[["buffer.Position = 0;",22006],["using ( var buffer = new MemoryStream() )",20575],["serializer.Pack( buffer, target );",16912],["var result = serializer.Unpack( buffer );",16785],["return buffer;",5454],["if (buffer == null)",5332],["public override int Read(byte[] buffer, int offset, int count)",4612],["public override void Write(byte[] buffer, int offset, int count)",4563],["throw new ArgumentNullException(\"buffer\");",2938],["buffer.Write((byte)0x00);",2452]]},{"word":"builder","context":[["return builder.ToString();",10933],["StringBuilder builder = new StringBuilder();",9347],["var builder = new StringBuilder();",6374],["return builder;",4830],["var builder = new ContainerBuilder();",4351],["var builder = new MockVbeBuilder();",3727],["protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {",2495],["builder.AppendLine();",2400],["builder",2204],["var container = builder.Build();",1978]]},{"word":"but","context":[["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536],["///<para> - byte[], no deserialization, but the response stream will be closed</para>",2224],["// this exception to your version of the library, but you are not",2109],["// Create the frame but don't set it as RootVisual yet; this allows the splash",1859],["appreciated but is not required.",1707],["// when source is FromUri. Ignored in request model and among resource parameters but listed",1089],["/// The method returns an <strong>HRESULT</strong>. Possible values include, but are not limited to,",1071],["* appreciated but is not required.",784],["including, but not limited to, determining the validity of this Agreement, the meaning of its",631],["// If one is null, but not both, return false.",539]]},{"word":"by","context":[["// by using the '*' as shown below:",242545],["//     This code was generated by a tool.",125487],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["///   Returns the cached ResourceManager instance used by this class.",38276],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["// Warning: This code was generated by a tool.",10227],["// Information about this assembly is defined by the following attributes.",8530],["// by DotNetNuke Corporation",7760],["* You can contact Ascensio System SIA by email at sales@onlyoffice.com",7287],["* form is not reasonably feasible for technical reasons, you must include the words \"Powered by ONLYOFFICE\"",7255]]},{"word":"byte","context":[["return ((byte[])(obj));",7000],["public override int Read(byte[] buffer, int offset, int count)",4612],["public override void Write(byte[] buffer, int offset, int count)",4563],["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536],["internal override byte NamespaceId",3926],["public  byte target_system;",2961],["public  byte target_component;",2633],["buffer.Write((byte)0x00);",2452],["return new byte[0];",2372],["///<para> - byte[], no deserialization, but the response stream will be closed</para>",2224]]},{"word":"bytes","context":[["return bytes;",5698],["if (bytes == null)",2496],["byte[] bytes;",1388],["for (int i = 0; i < bytes.Length; i++)",896],["/// <param name=\"bytes\"></param>",860],["stream.Write(bytes, 0, bytes.Length);",821],["stream.Write(bytes, 0, bytes.Length);",821],["Array.Reverse(bytes);",793],["throw new ArgumentNullException(\"bytes\");",715],["if (bytes != null)",711]]},{"word":"c","context":[["c => new",11707],["return c;",10423],["c >>= 32;",5963],["switch (c)",4174],["Id = c.Int(nullable: false, identity: true),",3858],["sb.Append(c);",3017],["if (c != null)",2770],["select c;",2694],["char c;",2644],["c =>",2622]]},{"word":"cache","context":[["var cache = new Mock<ICache>().Object;",2030],["cache,",1979],["// TODO: change this value to a cache size that is appropriate for your application",1374],["if (cache == null)",1042],["///Represents a strongly typed in-memory cache of data.",1034],["/// page is discarded from the navigation cache.  Values must conform to the serialization",921],["// Pull the parameters for this stored procedure from the parameter cache (or discover them & populate the cache)",888],["// Pull the parameters for this stored procedure from the parameter cache (or discover them & populate the cache)",888],["public override void Write(TLBinaryWriter to, bool cache = false)",877],["public override void Read(TLBinaryReader from, bool cache = false)",877]]},{"word":"call","context":[["/// <exception cref=\"ININ.PureCloudApi.Client.ApiException\">Thrown when fails to make API call</exception>",4568],["/// The NextLink from the previous successful call to List operation.",2416],["/// <exception cref=\"Infoplus.Client.ApiException\">Thrown when fails to make API call</exception>",1984],["// CODEGEN: This call is required by the ASP.NET Web Form Designer.",1801],["LuaDLL.luaL_error(l,\"No matched override function to call\");",1690],["call       void [mscorlib]System.Console::WriteLine(int32)",1550],["/// <exception cref=\"HostMe.Sdk.Client.ApiException\">Thrown when fails to make API call</exception>",1528],["//No need to check RemotingRole; no call to db.",1506],["/// <returns>The task to await for async call.</returns>",1289],["// This call is required by the Windows.Forms Form Designer.",1143]]},{"word":"callback","context":[["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],["if (callback != null)",3102],["/// <param name=\"state\">A user-defined object that will be passed to the callback delegate.</param>",3070],["callback, state);",2474],["/// <param name=\"callback\"></param>",1762],["callback,",1498],["profile_names}, callback, asyncState);",1188],["this.callback = callback;",1140],["this.callback = callback;",1140],["callback.called();",1123]]},{"word":"called","context":[["// Update is called once per frame",30232],["//  This method will be called after migrating to the latest version.",1510],["// Unregister the event so it doesn't get called again",1423],["// This method gets called by the runtime. Use this method to add services to the container.",1337],["// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.",1210],["/// only be called from the constructor of a class.</para>",1200],["callback.called();",1123],["/// stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.",1033],["/// This is called when the game should draw itself.",1009],["/// LoadContent will be called once per game and is the place to load",931]]},{"word":"can","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["* You can contact Ascensio System SIA by email at sales@onlyoffice.com",7287],["// Disable the \"could hide other member\" warning, can happen on certain properties.",6739],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>",4536],["// you can specify it here.",2735]]},{"word":"cancellation","context":[["/// The cancellation token.",37778],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// <param name=\"cancellationToken\">The cancellation token.</param>",12706],["/// The operation was canceled via the cancellation token.",3176],["/// <param name=\"cancellationToken\">The token to monitor for cancellation requests.</param>",611],["/// <param name=\"cancellationToken\">The cancellation token</param>",245],["/// <param name=\"cancellationToken\">A cancellation token.</param>",218],["/// <param name=\"cancellationToken\">An optional cancellation token.</param>",198],["/// <param name=\"ct\">The cancellation token</param>",175]]},{"word":"cancellationToken","context":[["cancellationToken.ThrowIfCancellationRequested();",87212],["/// <param name='cancellationToken'>",57619],["/// <param name=\"cancellationToken\">",13402],["tracingParameters.Add(\"cancellationToken\", cancellationToken);",13079],["tracingParameters.Add(\"cancellationToken\", cancellationToken);",13079],["/// <param name=\"cancellationToken\">The cancellation token.</param>",12706],["CancellationToken cancellationToken)",12525],["await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);",9370],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["_httpResponse = await this.Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);",7056]]},{"word":"cannot","context":[["Assert.Inconclusive(\"Test cannot be executed on this platform\");",1105],["/// cannot be compared using '==' or '!=' operators and <c>Equals()</c>",868],["Assert.Inconclusive(\"A method that does not return a value cannot be verified.\");",792],["/// <exception cref=\"ArgumentNullException\">The value of 'str' cannot be null. </exception>",615],["/// handlers that cannot cancel the navigation request.</param>",373],["* @exception ArgumentException if the object cannot be converted.",372],["if (String.IsNullOrEmpty(userName)) throw new ArgumentException(\"Value cannot be null or empty.\", \"userName\");",349],["above cannot be given local legal effect according to their terms,",319],["// test cannot pass with NULL implementation",312],["patents cannot be used to render the program non-free.",302]]},{"word":"case","context":[["case 1:",64584],["case 2:",49428],["case 0:",41927],["case 3:",35903],["case 4:",26038],["case 5:",18765],["case 6:",14896],["case 7:",11863],["case 8:",11622],["case 9:",8184]]},{"word":"catch","context":[["catch (Exception ex)",274414],["catch",180838],["catch (Exception e)",138655],["catch (Exception)",68347],["catch { }",43442],["catch(Exception e) {",27833],["catch (UnauthorizedException)",26298],["catch (MixERPException ex)",22447],["catch (Exception exception)",21637],["catch (Exception exc)",17319]]},{"word":"ch","context":[["switch (ch)",2371],["char ch;",2065],["sb.Append(ch);",1578],["return ch;",1157],["int ch;",971],["ch -= 0x0060;",712],["switch (ch) {",705],["builder.Append(ch);",515],["ch = this.m_current.SkipWhitespace();",495],["if (ch == '=')",456]]},{"word":"char","context":[["char c;",2644],["char ch;",2065],["char.MinValue,",1140],["return default(char);",964],["char a = 'a';",638],["case \"char\":",562],["char IConvertible.ToChar(IFormatProvider provider)",533],["foreach (char c in s)",516],["public override void Write(char value)",514],["char c = s[i];",511]]},{"word":"check","context":[["cb.check();",2628],["#region Security check",1565],["#endregion Security check",1540],["//No need to check RemotingRole; no call to db.",1506],["// If the app has received a 'reset' navigation, then we need to check",1426],["#endregion Security and validation check",930],["#region Security and validation check",930],["return \"The password retrieval question provided is invalid. Please check the value and try again.\";",814],["return \"The password retrieval answer provided is invalid. Please check the value and try again.\";",813],["return \"The e-mail address provided is invalid. Please check the value and try again.\";",812]]},{"word":"child","context":[["/// <param name=\"childElements\">Specifies the child elements.</param>",4206],["// Container child table1.Gtk.Table+TableChild",2293],["/// The following table lists the possible child types:",2099],["return child;",1893],["if (child != null)",1854],["// Container child vbox1.Gtk.Box+BoxChild",1295],["if (child == null)",1270],["// Container child vbox2.Gtk.Box+BoxChild",1175],["// Container child hbox1.Gtk.Box+BoxChild",1168],["foreach (var child in children)",1164]]},{"word":"class","context":[["class Program",80067],["class C",71132],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["// class via a tool like ResGen or Visual Studio.",38476],["///   resource lookups using this strongly typed resource class.",38276],["///   Returns the cached ResourceManager instance used by this class.",38276],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["internal class Resources {",20953],["static class Program",18304],["public class Test",17910]]},{"word":"client","context":[["/// Optional. The delegating handlers to add to the http client pipeline.",3324],["using (var client = new HttpClient())",3006],["/// <param name='client'>",2964],["_httpRequest.Headers.TryAddWithoutValidation(\"x-ms-client-request-id\", Guid.NewGuid().ToString());",2962],["if (client == null)",2912],["return client;",2763],["/// Reference to the service client.",2674],["using com.espertech.esper.client;",2592],["client.WithContext(_apiContext);",2573],["/// <param name=\"client\"></param>",2092]]},{"word":"cmd","context":[["cmd.ExecuteNonQuery();",14768],["cmd.CommandType = CommandType.StoredProcedure;",4933],["cmd.Parameters.Clear();",3914],["return cmd;",2539],["cmd.CommandType = CommandType.Text;",2479],["SqlCommand cmd = new SqlCommand();",2089],["cmd.Dispose();",1943],["using (MySqlDataReader reader = cmd.ExecuteReader())",1665],["cmd.Connection = conn;",1448],["cmd.CommandText = sql;",1368]]},{"word":"code","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["//     the code is regenerated.",128874],["//     This code was generated by a tool.",125487],["/// the contents of this method with the code editor.",72166],["[System.ComponentModel.DesignerCategoryAttribute(\"code\")]",71235],["#region Windows Form Designer generated code",54340],["/// </code>",45525],["/// <code>",34745],["#region Component Designer generated code",15792],["/// Thrown when the operation returned an invalid status code",11459]]},{"word":"collection","context":[["return collection;",3333],["/// <returns>Returns the requested page from the collection using the supplied filters.</returns>",3255],["/// Returns an enumerator that iterates through the collection.",2755],["if (collection == null)",2701],["/// <returns>Returns the first page from the collection.</returns>",1788],["/// <returns>Returns the requested page from the collection.</returns>",1788],["/// Returns an enumerator that iterates through a collection.",1780],["if (collection != null)",1426],["foreach (var item in collection)",1305],["/// <param name=\"customFields\">The custom field collection.</param>",1273]]},{"word":"color","context":[["GUI.color = Color.white;",2208],["return color;",1832],["Color = color;",1364],["/// <param name=\"color\"></param>",1185],["/// <param name=\"color\">The color.</param>",1095],["/// <param name=\"color\">The color.</param>",1095],["Console.ForegroundColor = color;",1062],["/// <param name=\"color\">",1056],["this.color = color;",957],["this.color = color;",957]]},{"word":"column","context":[["/// <param name=\"column\"></param>",1558],["column: x => x.UserId,",1032],["return column;",1017],["column: \"UserId\",",914],["/// Constructs this matrix from a series of column vectors. Non-overwritten fields are from an Identity matrix.",684],["column: x => x.RoleId,",640],["/// Returns a specific element in the column, at the given row index.",635],["/// <returns>Raw data array of the column content.</returns>",635],["/// This method is provided for full-coverage, however, if you find yourself iterating through the column",633],["/// A text field displayed in a column and row.",632]]},{"word":"com","context":[["*  http://aws.amazon.com/apache2.0",21715],["// DotNetNuke® - http://www.dotnetnuke.com",7713],["* You can contact Ascensio System SIA by email at sales@onlyoffice.com",7287],["// cesarsouza at gmail.com",6577],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["// credit: http://stackoverflow.com/a/10454552/677735",4058],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["// http://numerics.mathdotnet.com",3510],["// http://github.com/mathnet/mathnet-numerics",3510]]},{"word":"command","context":[["Db.NonQ(command);",13249],["command.ExecuteNonQuery();",5852],["if(command!=\"\"){ command+=\",\";}",4795],["if(command!=\"\"){ command+=\",\";}",4795],["Db.NonQ32(command);",4134],["return command;",3418],["using (var command = connection.CreateCommand())",2458],["using (NpgsqlCommand command = new NpgsqlCommand(sql))",2008],["/// <param name=\"command\"></param>",1810],["/// <param name=\"args\">The command line arguments.</param>",1807]]},{"word":"comp","context":[["comp.VerifyDiagnostics(",12455],["comp.VerifyDiagnostics();",5882],["var comp = DiagnosticsUtils.VerifyErrorsAndGetCompilationWithMscorlib(text,",4835],["var comp = CreateCompilationWithMscorlib(text);",4264],["var model = comp.GetSemanticModel(tree);",3096],["var comp = CreateCompilationWithMscorlib(source);",3011],["var comp = CreateCompilationWithMscorlib(tree);",2334],["var ns = comp.SourceModule.GlobalNamespace.GetMembers(\"NS\").Single() as NamespaceSymbol;",1852],["var comp = CompileAndVerify(source,",1783],["var global = comp.GlobalNamespace;",1782]]},{"word":"compilation","context":[["compilation.VerifyDiagnostics(",7628],["var model = compilation.GetSemanticModel(tree);",7055],["var tree = compilation.SyntaxTrees.Single();",4834],["compilation.VerifyDiagnostics();",2552],["var compilation = CreateCompilationWithMscorlib(source);",2280],["var tree = compilation.SyntaxTrees[0];",2258],["var compilation = CreateCompilationWithMscorlib(@\"",1656],["var compilation = CreateCompilationWithMscorlib45(source, options: TestOptions.DebugExe);",1470],["var compilation = CreateCompilationWithMscorlib(text);",1119],["var compilation = CreateCompilationWithMscorlibAndDocumentationComments(source);",1064]]},{"word":"components","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["components.Dispose();",78885],["private System.ComponentModel.IContainer components = null;",72616],["if (disposing && (components != null))",64767],["this.components = new System.ComponentModel.Container();",18892],["private System.ComponentModel.Container components = null;",3768],["if (disposing && (components != null)) {",3481],["if(components != null)",3004],["if (components != null)",2621],["components = new System.ComponentModel.Container();",2395]]},{"word":"conditions","context":[["// the following conditions:",43623],["// furnished to do so, subject to the following conditions:",40388],["furnished to do so, subject to the following conditions:",18922],["// conditions:",17132],["* furnished to do so, subject to the following conditions:",8249],["/// <param name=\"filters\">The list of filter conditions.</param>",7884],["* that the following conditions are met:",4276],["subject to the following conditions:",3451],["// subject to the following conditions:",2922],["conditions:",2817]]},{"word":"config","context":[["/// <param name=\"config\">The <see cref=\"HttpConfiguration\"/>.</param>",21088],["public static void Register(HttpConfiguration config)",7568],["config.Routes.MapHttpRoute(",7277],["config.MapHttpAttributeRoutes();",5456],["return config;",4100],["if (config == null)",3568],["_config = config;",2694],["HelpPageSampleGenerator sampleGenerator = config.GetHelpPageSampleGenerator();",2500],["throw new ArgumentNullException(\"config\");",2119],["/// <param name=\"config\">The configuration.</param>",1729]]},{"word":"configuration","context":[["// Web API configuration and services",3058],["<configuration>",1987],["/// <param name=\"config\">The configuration.</param>",1729],["return configuration;",1568],["_configuration = configuration;",1465],["if (configuration == null)",1284],["/// inheritance value depeneding on the property configuration and value availability.</para>",1236],["//       %Project Directory%\\obj\\<configuration>. For example, if your KeyFile is",1211],["/// <param name=\"configuration\">The configuration.</param>",842],["/// <param name=\"configuration\">The configuration.</param>",842]]},{"word":"connection","context":[["connection.Open();",14735],["connection.Close();",6704],["var connection = Substitute.For<IApiConnection>();",4085],["using (var command = connection.CreateCommand())",2458],["base(connection, mappingSource)",2170],["return connection;",1893],["using (var connection = Helper.GetConnection())",1875],["if (connection == null)",1802],["if (connection != null)",1799],["connection.Dispose();",1608]]},{"word":"consists","context":[["// Version information for an assembly consists of the following four values:",249312],["// consists of those rightmost characters of the path that constitute the",63],["/// A string that consists of the elements in <paramref name=\"source\"/>",60],["// A member-access consists of a primary-expression, a predefined-type, or a",46],["/// filter or predictor.  By this definition, filtered data consists mostly of small",41],["// the exponent with an 'E' or an 'e'. The exponent is always consists of a",34],["/// The cleanup being performed consists of removing the m_myActivityDelegate from",34],["// SPEC: argument-list, consists of the following steps:",32],["Log.Comment(\"Each accessor declaration consists of an\");",32],["// SPEC: rules of 7.5.3. The set of candidate instance constructors consists of all",32]]},{"word":"const","context":[["private const string XsrfKey = \"XsrfId\";",3870],["const string source = @\"",3870],["const string inputCode =",2635],["public const string spacingRuleId = \"\"IfSpacing\"\";",2192],["private const string ApiModelPrefix = \"MS_HelpPageApiModel_\";",1444],["private const string MethodExpression = \"/doc/members/member[@name='M:{0}']\";",1435],["private const string ParameterExpression = \"param[@name='{0}']\";",1435],["const string code = @\"",1260],["private const string TypeExpression = \"/doc/members/member[@name='T:{0}']\";",1224],["public const int Icon = 2130837504;",1173]]},{"word":"constructor","context":[["/// Default constructor.",5332],["/// Default constructor",4110],["/// constructor",1888],["static public int constructor(IntPtr l) {",1838],["// TODO: Add constructor logic here",1819],["#region constructor",1796],["// Cannot instantiate the type because it doesn't have a default constructor",1434],["/// <param name=\"parameters\">User specified constructor parameters</param>",1328],["// constructor",1214],["/// only be called from the constructor of a class.</para>",1200]]},{"word":"container","context":[["var container = ContainerFactory.New();",3076],["return container;",3064],["var container = new Container();",3061],["CloudBlobContainer container = GetRandomContainerReference();",2478],["_container = container;",2308],["if (container == null)",1987],["var container = builder.Build();",1978],["if (container != null)",1383],["this.container = container;",1366],["this.container = container;",1366]]},{"word":"containing","context":[["/// A response object containing the response body and response headers.",9294],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["/// <param name=\"message\">A <see langword=\"string\" /> containing one format item.</param>",2854],["/// <param name=\"e\">The <see cref=\"EventArgs\"/> instance containing the event data.</param>",2236],["/// <param name=\"format\">A String containing zero or more format items</param>",912],["// BIM IFC library: this library works with Autodesk(R) Revit(R) to export IFC files containing model geometry.",857],["/// <param name=\"e\">The <see cref=\"EventArgs\" /> instance containing the event data.</param>",822],["/// <param name=\"s\">A string containing a number to convert.</param>",754],["/// <param name=\"e\">The EventArgs object containing the packet data</param>",744],["/// <param name=\"map\">An <see cref=\"OSDMap\"/> containing the data</param>",673]]},{"word":"contains","context":[["/// The response body contains the status of the specified asynchronous",3544],["/// <param name=\"e\">An EventArgs that contains the event data.</param>",1627],["//       Provider (CSP) on your machine. KeyFile refers to a file which contains",1226],["/// with an entity that contains ProvisioningState=’Creating’. Poll the",1112],["/// Parameter, which contains format string, should be given in constructor. The format string",879],["// TODO: If your application contains multiple pages, ensure that you are",872],["/// contains",655],["bool contains = false;",616],["/// <paramref name=\"tasks\"/> array contains a null value.</exception>",560],["return contains;",512]]},{"word":"content","context":[["// Do not repeat app initialization when the Window already has content,",5315],["return content;",3798],["if (content != null)",2909],["if (content == null)",2245],["/// <param name=\"content\">The content.</param>",1790],["/// <param name=\"content\">The content.</param>",1790],["content.Dispose();",1544],["HttpContent content = null;",1499],["content = new ObjectContent(type, value, formatter, mediaType);",1432],["formatter.WriteToStreamAsync(type, value, ms, content, null).Wait();",1431]]},{"word":"contents","context":[["/// the contents of this method with the code editor.",72166],["/// without knowing whether the application will be terminated or resumed with the contents",5228],["// otherwise, verify the contents array",2248],["/// Do not change the method contents inside the source code editor. The Forms designer might",1190],["return contents;",1053],["/// Do not modify the contents of this method with the code editor.",480],["//This file and its contents are protected by United States and         *",429],["var contents = repository.GetByQuery(query);",348],["string contents = ObjectModelHelpers.CleanupFileContents(@\"",337],["propagate the contents of its contributor version.",319]]},{"word":"context","context":[["/// <param name=\"context\">The parse tree.</param>",20795],["var context = NewSerializationContext( PackerCompatibilityOptions.None );",18314],["/// <param name=\"context\"></param>",14187],["context.SaveChanges();",10335],["if (context == null)",9405],[": base(info, context)",8264],["/// <param name=\"context\">The context.</param>",7792],["/// <param name=\"context\">The context.</param>",7792],["using (var db = GetDataContext(context))",5988],["_context = context;",5486]]},{"word":"continue","context":[["continue;",383725],["// Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run",1675],["else continue;",1206],["//    continue;",770],["continue $loop1;",589],["//            continue;",555],["//        continue;",484],["// NOTE: This will allow the application to continue running after an exception has been thrown",454],["//continue;",432],["Console.WriteLine(\"Press any key to continue...\");",400]]},{"word":"control","context":[["/// form1 control.",3597],["if (control != null)",1940],["return control;",1795],["// Use the attributes below to control which key is used for signing.",1302],["/// ErrorMessage control.",1234],["if (control == null)",1138],["/// MainContent control.",1010],["/// <param name=\"c\">Reference to the source control instance.</param>",802],["/// Handles the Load event of the Page control.",776],["/// <param name=\"control\"></param>",737]]},{"word":"controlled","context":[["// General Information about an assembly is controlled through the following",263447],["// General Information about an assembly is controlled through the following set of attributes.",402],["owned or controlled by the contributor, whether already acquired or",319],["// General information about an assembly is controlled through the following",106],["/// - Scene-owned game objects are controlled by the Master Client.",92],["/// - Instantiated objects of players who left the room are controlled by the Master Client.",80],["///<summary> Airship, controlled | </summary>",73],["/// tools, you can push or pull version controlled changes to your",72],["/// <summary> The system to be controlled. </summary>",69],["if (controlled != null)",47]]},{"word":"controller","context":[["/// <param name=\"controllerName\">Name of the controller.</param>",17416],["url: \"{controller}/{action}/{id}\",",8438],["defaults: new { controller = \"Home\", action = \"Index\", id = UrlParameter.Optional }",7060],["routeTemplate: \"api/{controller}/{id}\",",5520],["return controller;",1743],["HomeController controller = new HomeController();",1662],["pb::IRpcController controller,",1475],["//// The sample will be generated as if the controller named \"Values\" and action named \"Post\" were returning a string.",1439],["//// on the controller named \"Values\" and action named \"Get\" with parameter \"id\".",1438],["/// The name of the controller.",1428]]},{"word":"copy","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["* in every copy of the program you distribute.",7255],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["return copy;",3111],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["// modules, and to copy and distribute the resulting executable under",2109]]},{"word":"count","context":[["count++;",26482],["int count = 0;",25276],["for (int i = 0; i < count; i++)",14084],["return count;",13830],["if (count == 0)",7338],["Assert.Equal(1, count);",6703],["count = 0;",6650],["if (count > 0)",5398],["int count;",4855],["var count = 0;",4810]]},{"word":"create","context":[["/// <param name=\"value\">The value to create a <see cref=\"JValue\"/> from.</param>",2642],["throw new Exception(\"Failed to create initial page\");",2157],["// If the user does not have an account, then prompt the user to create an account",2088],["// create path and map variables",1943],["// Failed to create key and values",1434],["/// This class will create an object of a given type and populate it with sample data.",1417],["//   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.",1227],["// Try to create a default sample object",1075],["/// First, it will look at the <see cref=\"SampleObjects\"/>. If no sample object is found, it will try to create",1062],["/// <summary>Helper: create a new instance to deserializing into</summary>",942]]},{"word":"created","context":[["///<param name=\"parentObject\">object there has created the proxy</param>",15036],["* Portions created by or assigned to Cursive Systems, Inc. are",1546],["// The object has been created already, just return it. This will handle the circular reference case.",1433],["\"A model description could not be created. Duplicate model name '{0}' was found for types '{1}' and '{2}'. \" +",1066],["*          null if no parse tree should be created</returns>",828],["// ISSUE: object of a compiler-generated type is created",816],["/// <returns>The created kernel.</returns>",777],["This file was created/modified by Hervé PHILIPPE alchiweb[at]gmail.com",758],["/// <returns>The created object.</returns>",713],["// This file is part of the game Voxalia, created by FreneticXYZ.",560]]},{"word":"cref","context":[["/// <param name=\"config\">The <see cref=\"HttpConfiguration\"/>.</param>",21088],["/// <exception cref=\"ArgumentNullException\">",17722],["/// <exception cref=\"System.ArgumentNullException\">",10972],["/// <exception cref=\"InvalidOperationException\">",8510],["/// <exception cref=\"ArgumentException\">",8050],["/// <param name=\"api\">The <see cref=\"ApiDescription\"/>.</param>",6719],["/// <exception cref=\"T:System.ArgumentNullException\">",6222],["/// <exception cref=\"ErrorException\">",5506],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["/// <exception cref=\"ArgumentOutOfRangeException\">",4785]]},{"word":"cs","context":[["<?cs /if ?>",1517],["- All classes marked as \"partial\". Use the custom.cs in the root folder, to extend the classes.",1194],["Assert.NotNull(cs.Keyword);",1167],["Assert.NotNull(cs.Identifier);",1141],["Assert.Null(cs.BaseList);",1102],["Assert.Equal(0, cs.AttributeLists.Count);",1102],["Assert.NotNull(cs.OpenBraceToken);",1076],["Assert.NotNull(cs.CloseBraceToken);",1076],["var cs = (TypeDeclarationSyntax)file.Members[0];",1038],["Assert.Equal(0, cs.ConstraintClauses.Count);",1011]]},{"word":"current","context":[["///   Overrides the current thread's CurrentUICulture property for all",38271],["///<param name=\"factory\">current used factory core</param>",7658],["// Ensure the current window is active",5272],["// Place the frame in the current Window",5205],["///information about and functionality for the current test run.",3535],["return current;",3296],["// Request a redirect to the external login provider to link a login for the current user",2402],["/// <summary>OAuth 2.0 token for the current user.</summary>",1996],["while (current != null)",1828],["// Display the current frame rate counters.",1784]]},{"word":"d","context":[["dynamic d = a;",9016],["return d;",5591],["case 'd':",1786],["// l'ensemble d'attributs suivant. Changez les valeurs de ces attributs pour modifier les informations",1495],["if (d != null)",1463],["dynamic d = null;",1411],["double d;",1307],["/// <param name=\"d\">",1178],["d.Dispose();",1029],["if (d == null)",931]]},{"word":"data","context":[["return data;",20380],["[global::System.ComponentModel.Design.HelpKeywordAttribute(\"vs.data.TableAdapter\")]",14149],["if (data == null)",7945],["/// <param name=\"data\"></param>",7121],["return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();",6302],["return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();",6302],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["if (data != null)",3934],["/// <param name=\"data\">",3091],["Data = data;",2675]]},{"word":"database","context":[["/// The name of the database on which queries are being executed to.",3508],["/* This file is part of the db4o object database http://www.db4o.com",3254],["/// The name of the database where queries are being executed on.",1317],["SqlDatabase database = new SqlDatabase(this._connectionString);",1035],["reader = Utility.ExecuteReader(database, commandWrapper);",728],["//line if you rather not modify your database",707],["does not allow any form (even if partial, or modified) database storage,",524],["_database = database;",500],["this.database = database;",493],["this.database = database;",493]]},{"word":"date","context":[["* @date      : 2012-03-07",2052],["* @date      : 2011-09-12",1804],["return date;",1250],["DateTime date;",1126],["{ typeof(DateTimeOffset), \"date\" },",1058],["{ typeof(DateTime), \"date\" },",1058],["/// <param name=\"date\"></param>",659],["made and the date of the alterations, identifies Contributor as originator of the alterations, and",631],["case \"date\":",599],["Date = date;",452]]},{"word":"db","context":[["db.SaveChanges();",14282],["using (var db = GetDataContext(context))",5988],["db.Dispose();",3800],["db.SubmitChanges();",3064],["await db.SaveChangesAsync();",2834],["}); cnn.db.RunInTransaction(() =>",2139],["// Configure the db context, user manager and signin manager to use a single instance per request",1724],["db.Close();",1687],["//No need to check RemotingRole; no call to db.",1506],["_db = db;",1155]]},{"word":"de","context":[["/// Para modificarlo, mueva la declaración del campo del archivo del diseñador al archivo de código subyacente.",5582],["///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.",2683],["// Les informations générales relatives à un assembly dépendent de",1559],["//      Numéro de build",1523],["// Les informations de version pour un assembly se composent des quatre valeurs suivantes :",1517],["// l'ensemble d'attributs suivant. Changez les valeurs de ces attributs pour modifier les informations",1495],["//      Número de compilación",1460],["//     * Neither the name of Rodrigo B. de Oliveira nor the names of its",1413],["// L'affectation de la valeur false à ComVisible rend les types invisibles dans cet assembly",1366],["// La información de versión de un ensamblado consta de los cuatro valores siguientes:",1332]]},{"word":"decimal","context":[["any1.MinOccurs = new decimal(0);",2589],["any1.MaxOccurs = decimal.MaxValue;",2583],["any2.MinOccurs = new decimal(1);",2583],["public decimal Price { get; set; }",2011],["public decimal Amount { get; set; }",1149],["{ typeof(Double), \"decimal number\" },",1048],["{ typeof(Decimal), \"decimal number\" },",1048],["{ typeof(Single), \"decimal number\" },",1048],["public decimal UnitPrice { get; set; }",743],["case \"decimal\":",635]]},{"word":"declaration","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["switch (declaration.Kind())",1681],["return declaration;",1537],["/// <param name=\"position\">A character position used to identify a declaration scope and accessibility. This",430],["var declaration = state.AllUserDeclarations.Single(item =>",343],["/// <param name=\"position\">A character position used to identify a declaration scope and",262],["/// <param name=\"position\">The character position for determining the enclosing declaration scope and",245],["if (declaration == null)",232],["if (declaration != null)",220],["//Schema declaration",201]]},{"word":"default","context":[["default:",332900],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["#line default",118226],["return default(bool);",48702],["return default(int);",41421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["return default(string);",26070],["return default(T);",13338],["/// <para>The default implementation does nothing.</para>",6802],["get{ return default(int); }",6302]]},{"word":"delegate","context":[["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],["delegate",4598],["/// <param name=\"state\">A user-defined object that will be passed to the callback delegate.</param>",3070],["delegate {",1424],["RunExample(delegate() {",1321],["delegate void D();",1199],["/// <param name=\"aAsyncHandle\">Argument passed to the delegate set in the above Begin function</param>",889],["/// delegate.</param>",840],["delegate()",836],["delegate ()",725]]},{"word":"description","context":[["Description = description;",2741],["/// Returns a description about the code example.",2252],["ViewBag.Message = \"Your application description page.\";",2214],["/// <para type=\"description\">",1979],["/// <param name=\"description\">The description.</param>",1905],["/// <param name=\"description\">The description.</param>",1905],["public string description { get; set; }",1727],["string description,",1475],["return description;",1472],["description.HttpMethod.Method,",1433]]},{"word":"designer","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["/// Required designer variable.",68219],["// This file has been generated by the GUI designer. Do not modify.",1440],["/// Do not change the method contents inside the source code editor. The Forms designer might",1190],["/// This method is required for Windows Forms designer support.",1180],["// classes for your model, open the model in the designer, right-click on the designer surface, and",1065],["// classes for your model, open the model in the designer, right-click on the designer surface, and",1065],["// To enable legacy code generation, change the value of the 'Code Generation Strategy' designer",1065],["// is open in the designer.",1065],["// actions made in the UI designer. If it is removed, they will be lost.",909]]},{"word":"devdoc","context":[["/// <devdoc>",45583],["/// </devdoc>",45547],["scrollIntoView(\"devdoc-nav\");",152],["<div id=\"devdoc-nav\" class=\"scroll-pane\">",122],["///    </devdoc>",72],["/// <devdoc><para>[To be supplied.]</para></devdoc>",60],["/// <devdoc><para>[To be supplied.]</para></devdoc>",60],["//        /// <devdoc>",46],["//        /// </devdoc>",46],["///     </devdoc>",35]]},{"word":"diagnostics","context":[["DiagnosticBag diagnostics,",3339],["DiagnosticBag diagnostics)",2344],["diagnostics.Add(node, useSiteDiagnostics);",1418],["var diagnostics = DiagnosticBag.GetInstance();",1372],["diagnostics,",1368],["diagnostics.Free();",1298],["diagnostics: diagnostics,",561],["diagnostics: diagnostics,",561],["foreach (var diagnostic in diagnostics)",543],["diagnostics.Add(new RudeEditDiagnostic(",537]]},{"word":"dictionary","context":[["ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located",8623],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>",4536],["return dictionary;",2733],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth",2224],["if (dictionary == null)",1457],["/// a dictionary of state preserved by this page during an earlier",903],["if (dictionary != null)",773],["/// <param name=\"e\">Event data that provides an empty dictionary to be populated with",705],["var dictionary = new Dictionary<string, string>();",695],["/// <param name=\"dictionary\">The dictionary.</param>",675]]},{"word":"disable","context":[["#pragma warning disable 1591",13764],["// ReSharper disable All",11390],["#pragma warning disable 0169",9315],["#pragma warning disable 0649",7913],["#pragma warning disable 0414",7838],["// ReSharper disable InconsistentNaming",7806],["#pragma warning disable 0108",6852],["#pragma warning disable",6784],["#pragma warning disable 0067",6755],["#pragma warning disable 0626",6743]]},{"word":"disposed","context":[["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["disposed = true;",5056],["if (disposed)",3609],["private bool disposed;",2757],["if (disposed) throw new ObjectDisposedException(this.ToString());",1845],["if (!disposed)",1773],["this.disposed = true;",1738],["private bool disposed = false;",1578],["if (!this.disposed)",1413],["/// The <see cref=\"IMailStore\"/> has been disposed.",1335]]},{"word":"disposing","context":[["base.Dispose(disposing);",95836],["protected override void Dispose(bool disposing)",93650],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["if (disposing && (components != null))",64767],["if (disposing)",25792],["protected virtual void Dispose(bool disposing)",14193],["base.Dispose( disposing );",5784],["protected override void Dispose(bool disposing) {",5267],["protected override void Dispose( bool disposing )",4852],["if( disposing )",4005]]},{"word":"distribute","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["* in every copy of the program you distribute.",7255],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["// modules, and to copy and distribute the resulting executable under",2109],["publish, distribute, sublicense, and/or sell copies of the Data, and to",1940]]},{"word":"distribution","context":[["*       documentation and/or other materials provided with the distribution.",13352],["//   and/or other materials provided with the distribution.",8001],["*     materials provided with the distribution.",4163],["/// <returns>The marginal distribution</returns>",3959],["and/or other materials provided with the distribution.",3822],["//     and/or other materials provided with the distribution.",2766],["// ICE_LICENSE file included in this distribution.",2443],["// documentation and/or other materials provided with the distribution.",2325],["// distribution.",2086],["documentation and/or other materials provided with the distribution.",1717]]},{"word":"dll","context":[["[DllImport(\"user32.dll\")]",14517],["[DllImport(VERSION.dll)]",7795],["[DllImport(\"libgtk-3-0.dll\", CallingConvention = CallingConvention.Cdecl)]",6105],["[DllImport (VERSION.dll)]",4957],["[DllImport(\"kernel32.dll\")]",4319],["[DllImport(\"kernel32.dll\", SetLastError = true)]",3908],["[DllImport(\"user32.dll\", SetLastError = true)]",3427],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll",2483],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Web.dll",2167],["[DllImport(\"gdi32.dll\")]",2150]]},{"word":"do","context":[["/// Required method for Designer support - do not modify",72324],["do",67929],["// furnished to do so, subject to the following conditions:",40388],["furnished to do so, subject to the following conditions:",18922],["do {",15045],["* furnished to do so, subject to the following conditions:",8249],["[Compare(\"NewPassword\", ErrorMessage = \"The new password and confirmation password do not match.\")]",6121],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["// do nothing",3797],["//  furnished to do so, subject to the following conditions:",2496]]},{"word":"doc","context":[["XmlDocument doc = new XmlDocument();",7306],["Document doc = new Document();",3533],["return doc;",3196],["/// <param name=\"doc\"></param>",3075],["writer.AddDocument(doc);",2473],["var doc = new XmlDocument();",2250],["XDocument doc = new XDocument();",2240],["<doc>",1607],["XmlWriter w = CreateWriter(doc);",1462],["private const string MethodExpression = \"/doc/members/member[@name='M:{0}']\";",1435]]},{"word":"document","context":[["return document;",2444],["if (document == null)",2417],["Document document,",1983],["/// <param name=\"documentPath\">The physical path to XML document.</param>",1436],["if (document != null)",1372],["var element = document.CreateElement(\"input\") as HtmlInputElement;",1205],["var root = await document.GetSyntaxRootAsync(cancellationToken).ConfigureAwait(false);",992],["XmlDocument document = new XmlDocument();",984],["var document = Html(\"\");",975],["Assert.IsNotNull(document);",970]]},{"word":"documentation","context":[["*       documentation and/or other materials provided with the distribution.",13352],["/// No documentation.",8424],["// if desired. See the Mono documentation for more information about signing.",8404],["/// View the original documentation topic online:",3399],["/// The above documentation is © Microsoft Corporation. It is reproduced here",3118],["// documentation and/or other materials provided with the distribution.",2325],["return documentation;",2197],["form, as well as any drawings, specifications, and documentation",1940],["// in the documentation and/or other materials provided with the",1930],["/// See also the original CEF documentation in",1863]]},{"word":"does","context":[["/// <para>The default implementation does nothing.</para>",6802],["// If the user does not have an account, then prompt the user to create an account",2088],["// Don't reveal that the user does not exist",1934],["// Don't reveal that the user does not exist or is not confirmed",1928],["//       (2) If the KeyName does not exist and the KeyFile does exist, the key",1294],["//       (2) If the KeyName does not exist and the KeyFile does exist, the key",1294],["/// is needed. If the phrase does not start with the word <i>because</i>, it is prepended automatically.",1013],["/// Indicates that a method does not make any observable state changes.",986],["// NOTREACHED: above call does not return.",949],["/// The request was rejected because it referenced an entity that does not exist. The",872]]},{"word":"double","context":[["return default(double);",3107],["double sum = 0;",3079],["double Sum = 0.0;",2850],["double[] ab = new double[3];",2844],["double[] ab = new double[3];",2844],["double local_double = -5.2;",2844],["double result = 0;",2659],["return double.NaN;",2503],["// Avoid double-initialization",1849],["Assert.IsTrue(Math.Abs(1 - result/(double)expected) < Tolerance, $\"result = {result}\\texpected = {expected}\");",1680]]},{"word":"ds","context":[["DataSet ds = new DataSet();",4838],["global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();",3540],["return ds;",3314],["attribute1.FixedValue = ds.Namespace;",2583],["this.Prefix = ds.Prefix;",2166],["this.DataSetName = ds.DataSetName;",2166],["this.Namespace = ds.Namespace;",2166],["this.Locale = ds.Locale;",2166],["this.EnforceConstraints = ds.EnforceConstraints;",2166],["this.CaseSensitive = ds.CaseSensitive;",2166]]},{"word":"dynamic","context":[["dynamic d = a;",9016],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>",4536],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth",2224],["public IEnumerable<dynamic> Export()",1470],["dynamic d = null;",1411],["public dynamic M(dynamic d)",840],["public dynamic M(dynamic d)",840],["var instance = (dynamic) Activator.CreateInstance(type);",733],["dynamic p = new Parent();",681],["dynamic dy = mc;",656]]},{"word":"e","context":[["catch (Exception e)",138655],["/// <param name=\"e\"></param>",41186],["protected void Page_Load(object sender, EventArgs e)",31439],["catch(Exception e) {",27833],["e.Handled = true;",27092],["LuaDLL.luaL_error(l, e.ToString());",15598],["} catch (Exception e) {",15315],["throw e;",13949],["e.Cancel = true;",12324],["return error(l,e);",11686]]},{"word":"each","context":[["// terms of your choice, provided that you also meet, for each linked",2109],["//Use TestCleanup to run code after each test has run",2094],["//Use TestInitialize to run code before running each test",2070],["// Show the areas of the app that are being redrawn in each frame.",1814],["// Use TestCleanup to run code after each test has run",1673],["// Use TestInitialize to run code before running each test",1656],["/// Clean up after each test",1423],["/// Setup before each test",1423],["// ResourceLanguage resource string for each supported language.",1374],["// on the ResourceFlowDirection resource string for each",1372]]},{"word":"editor","context":[["/// the contents of this method with the code editor.",72166],["//  <last-editor>郭明锋</last-editor>",1555],["//  <last-editor>郭明锋</last-editor>",1555],["/// Do not change the method contents inside the source code editor. The Forms designer might",1190],["/// ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.",970],["/// el contenido del método con el editor de código.",639],["/// Do not modify the contents of this method with the code editor.",480],["return editor;",466],["//Do not modify it using the code editor.",445],["*  \"GEDKeeper\", the personal genealogical database editor.",441]]},{"word":"element","context":[["if (element == null)",4422],["return element;",3999],["/// <returns>Returns true if the element is defined in the specified version.</returns>",3931],["/// Whether this element is available in a specific version of Office Application.",3914],["/// Gets the local name of the element.",3912],["/// Gets the type ID of the element.",3908],["if (element != null)",2961],["areAllElementsNull &= element == null;",2868],["object element = objectGenerator.GenerateObject(type, createdObjectReferences);",2832],["Assert.IsNotNull(element);",2197]]},{"word":"elements","context":[["/// <param name=\"childElements\">Specifies the child elements.</param>",4206],["// Set the FlowDirection of all elements under the root frame based",1373],["/// <typeparam name=\"TSource\">The type of the elements of source.</typeparam>",762],["/// <typeparam name=\"TSource\">The type of elements of <paramref name=\"source\"/>.</typeparam>",743],["foreach (var element in elements)",740],["return elements;",687],["/// <typeparam name=\"TSource\">The type of the elements of <paramref name=\"source\"/>.</typeparam>",583],["/// <typeparam name=\"TSource\">The type of the elements in the source sequence.</typeparam>",565],["///   elements can be either of type double (for univariate data) or",544],["ReadOnlyCollection<ICodeElement> elements = parser.Parse(reader);",383]]},{"word":"else","context":[["else",2698089],["} else {",257031],["#else",185656],["else {",182324],["} else",19980],["}else{",18736],["//else",11616],["else{",10993],["//    else",4789],["else return visitor.VisitChildren(this);",3552]]},{"word":"empty","context":[["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["empty = false;",781],["// empty",739],["/// <param name=\"e\">Event data that provides an empty dictionary to be populated with",705],["// No ModelState errors are available to send, so just return an empty BadRequest.",648],["/// <param name=\"pageState\">An empty dictionary to be populated with serializable state.</param>",602],["bool empty = true;",560],["/// <paramref name=\"tasks\"/> array is empty.</exception>",560],["if (empty)",535],["return empty;",499]]},{"word":"en","context":[["//[assembly: NeutralResourcesLanguage(\"en-US\", UltimateResourceFallbackLocation.Satellite)]",10198],["//in your source files, set the <UICulture> to en-US.  Then uncomment",8482],["//the NeutralResourceLanguage attribute below.  Update the \"en-US\" in",8479],["[assembly: NeutralResourcesLanguage(\"en\")]",6745],["[assembly: NeutralResourcesLanguageAttribute(\"en-US\")]",3275],["[assembly: NeutralResourcesLanguage(\"en-US\")]",1841],["/// <en>",1774],["/// </en>",1772],["// en utilisant '*', comme indiqué ci-dessous :",1452],["//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si",1303]]},{"word":"end","context":[["// Trim '/' character from the end of baseUrl and beginning of url.",7722],["end",5639],["/// Invoked when the application is launched normally by the end user.  Other entry points",5237],["end -= start;",3186],["} // end catch",2196],["} // end namespace",1269],["/// A <see cref=\"System.String\"/> for the name of a function to launch at the end of the animation.",1200],["}//end if",1058],["} // end class",927],["/// <param name=\"end\"></param>",828]]},{"word":"endif","context":[["#endif",644328],["//#endif",6539],["#endif // !UNITY",5241],["#endif // FEATURE_CAS_POLICY",1499],["#endif // FEATURE_TAP",1300],["#endif // !FEATURE_CORECLR",1006],["#endif // DEBUG",878],["#endif //DEBUG",705],["#endif //!FEATURE_CORECLR",670],["#endif // !FEATURE_PAL",662]]},{"word":"endregion","context":[["#endregion",1964489],["#endregion Constructors",9132],["#endregion Properties",8776],["#endregion Methods",7946],["#endregion Fields",4501],["#endregion Public Methods",3733],["#endregion Public Properties",2590],["#endregion Initialisation",2486],["#endregion Handle transaction rollback and exception",2470],["#endregion Private Methods",2295]]},{"word":"entity","context":[["return entity;",6507],["if (entity == null)",3773],["/// <param name=\"entity\"></param>",3046],["if (entity != null)",2237],["/// <param name=\"entity\">The entity.</param>",1537],["/// <param name=\"entity\">The entity.</param>",1537],["/// entity.StringProperty = \"foo\";",1336],["/// with an entity that contains ProvisioningState=’Creating’. Poll the",1112],["/// <param name=\"source\">source entity set</param>",1092],["// have not yet chosen which version of Entity Framework to use. To generate a context class and entity",1065]]},{"word":"entry","context":[["/// The main entry point for the application.",15420],["/// Invoked when the application is launched normally by the end user.  Other entry points",5237],["return entry;",2919],["// This is the main entry point of the application.",2761],["if (entry != null)",2014],["if (entry == null)",1833],["Assert.IsNotNull (entry as ShortIFDEntry, \"Entry is not a short!\");",965],["///    </para></entry></row>",939],["var entry = ProcessText(text);",936],["/// <param name=\"b\">On entry the B matrix; on exit the X matrix.</param>",794]]},{"word":"enum","context":[["public enum ManageMessageId",3079],["public enum SampleDirection",1407],["public enum ImplicitUseKindFlags",1046],["public enum ImplicitUseTargetFlags",1046],["enum E",1021],["public enum LogLevel",791],["public enum Direction",725],["public enum AltEnum",642],["public enum State",619],["public enum Type",609]]},{"word":"error","context":[["return error(l,e);",11686],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["foreach (var error in result.Errors)",5449],["string error;",5438],["ModelState.AddModelError(\"\", error);",5035],[": message == ManageMessageId.Error ? \"An error has occurred.\"",4066],["/// An I/O error occurred.",3577],["if (error != null)",2997],["Assert.Null(error);",2677],["return error;",2656]]},{"word":"event","context":[["public event PropertyChangedEventHandler PropertyChanged;",20653],["public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;",13608],["/// <param name=\"sender\">The source of the event.</param>",12667],["// Disable the \"this event is never assigned to\".",6362],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["public event PropertyChangingEventHandler PropertyChanging;",5127],["///Row event argument class",2529],["public event EventHandler CanExecuteChanged;",2514],["//event notification",2378],["/// <param name=\"e\">The <see cref=\"EventArgs\"/> instance containing the event data.</param>",2236]]},{"word":"ex","context":[["catch (Exception ex)",274414],["throw ex;",49801],["Content = new StringContent(ex.Message),",24152],["catch (MixERPException ex)",22447],["} catch (Exception ex) {",17315],["catch(Exception ex)",14409],["ex.Body = _errorBody;",9567],["TracingAdapter.Error(invocationId, ex);",9174],["ServiceClientTracing.Error(_invocationId, ex);",8249],["ex.Request = new HttpRequestMessageWrapper(_httpRequest, _requestContent);",7416]]},{"word":"example","context":[["/// </example>",49568],["/// <example>",47728],["/// </code></example>",9244],["/// <example><code>",9118],["//inside a <PropertyGroup>.  For example, if you are using US english",8472],["* @example",2477],["/// Returns a description about the code example.",2252],["/// Main method, to run this code example as a standalone application.",2244],["/// Run the code example.",1605],["// file's culture. For example:",1361]]},{"word":"exception","context":[["/// </exception>",201277],["catch (Exception exception)",21637],["/// <exception cref=\"ArgumentNullException\">",17722],["base(exception, cancelled, userState) {",14244],["/// <exception cref=\"System.ArgumentNullException\">",10972],["// Ignore the exception",9582],["/// <exception cref=\"InvalidOperationException\">",8510],["/// <exception cref=\"ArgumentException\">",8050],["/// <exception cref=\"T:System.ArgumentNullException\">",6222],["/// <exception cref=\"ErrorException\">",5506]]},{"word":"expected","context":[["Assert.AreEqual(expected, actual);",17782],["Assert.Equal(expected, actual);",10179],["var expected = @\"",7164],["var expected =",4676],["var expected = @\"using System;",3335],["Assert.AreEqual(expected, result);",3096],["Assert.Equal(expected, result);",2751],["Assert.Equal(expected[i], result[i]);",2262],["Assert.Equal(expected.Length, result.Length);",2262],["// generate expected array",2248]]},{"word":"exposed","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// project is exposed to COM. On other platforms, it unique identifies the",1271],["/// This is the class that implements the package exposed by this assembly.",514],["/// Test methods exposed by the EntityHelper class.",160],["// ---- SECTION:  members supporting exposed properties -------------*",117],["/// This contract is exposed to clients so must only reference members at least as visible as the enclosing method.",116],["/// This class implements the tool window exposed by this package and hosts a user control.",110],["/// thatit could be directly be exposed to users",106],["#if !MANAGEDESENT_ON_WSA // Not exposed in MSDK",91],["//This is a custom property that is not exposed in IUmbracoEntity so add it to the additional data",87]]},{"word":"expression","context":[["return expression;",5213],["// generate the expression",3102],["if (expression == null)",2303],["var result = Generator.Generate(expression);",2244],["///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>",1365],["/// <param name=\"expression\"></param>",1242],["using com.espertech.esper.epl.expression.core;",1225],["// compute with expression tree",1220],["// compute the value with the expression tree",1199],["if (expression != null)",1194]]},{"word":"extern","context":[["// Disable the \"extern without DllImport\" warning.",6739],["internal static extern void ctor_0(global::System.IntPtr instance);",1729],["internal static extern void dtor_0(global::System.IntPtr instance);",1543],["internal static extern void cctor_2(global::System.IntPtr instance, global::System.IntPtr _0);",949],["internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);",939],["internal static extern global::System.IntPtr ctor_0(global::System.IntPtr instance);",709],["internal static extern",655],["internal static extern void dtor_0(global::System.IntPtr instance, int delete);",477],["internal static extern global::System.IntPtr cctor_2(global::System.IntPtr instance, global::System.IntPtr _0);",436],["[DllImport(\"Eztwain4.dll\", CharSet=CharSet.Ansi, ExactSpelling=true)] public static extern",322]]},{"word":"f","context":[["return f;",3924],["result = f();",3196],["etResult = f();",3119],["List<EntityParser.Filter> f = filters.ToObject<List<EntityParser.Filter>>(JsonHelper.GetJsonSerializer());",2774],["case 'f':",2492],["return (f == 100);",1740],["Assert.Equal(value, f());",1625],["Func<bool> f = e.Compile();",1518],["if (f != null)",1266],["Assert.Throws<OverflowException>(() => f());",1108]]},{"word":"factory","context":[["///<param name=\"factory\">current used factory core</param>",7658],["///<param name=\"factory\">current used factory core</param>",7658],["if (factory == null)",2340],["_factory = factory;",1222],["return factory;",1169],["sampleObject = factory(this, type);",1075],["// Default factory for sample objects",1075],["// Ignore any problems encountered in the factory; go on to the next one (if any).",1075],["/// Required. The resource group name of the data factory.",1070],["/// stopping when the factory successfully returns a non-<see langref=\"null\"/> object.",1062]]},{"word":"failed","context":[["// If we got this far, something failed, redisplay form",11850],["/// asynchronous operation failed, the response body includes the HTTP",3502],["/// has failed. Note that this status is distinct from the HTTP status",3499],["/// <param name=\"sender\">The Frame which failed navigation</param>",3297],["// either both should have failed the same way or they should both produce the same result",3123],["if (state.failed) return retval;",2902],["/// <param name=\"exception\">output Exception value if deserialize failed</param>",2580],["// if one failed, verify the other did, too",2248],["/// status code for the failed request, and also includes error",2063],["// A navigation has failed; break into the debugger",1857]]},{"word":"false","context":[["return false;",1020274],["[assembly: ComVisible(false)]",281805],["// Setting ComVisible to false makes the types in this assembly not visible",239962],["this.ResumeLayout(false);",75113],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]",35833],["get { return false; }",35768],["false,",33685],["[Browsable(false)]",32041],["retVal = false;",31425]]},{"word":"field","context":[["/// Auto-generated field.",154412],["/// To modify move field declaration from designer file to code-behind file.",154384],["TProtocolUtil.Skip(iprot, field.Type);",11364],["oprot.WriteFieldBegin(field);",8315],["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["TField field;",3256],["foreach (FieldInfo field in fields)",3237],["switch (field.ID)",3162],["field.Type = TType.String;",3048],["field = iprot.ReadFieldBegin();",3048]]},{"word":"fields","context":[["foreach (FieldInfo field in fields)",3237],["#region fields",2586],["/// <param name=\"responseFields\">Use this field to include those fields which are not included by default.</param>",1971],["#region Private fields",1908],["[Route(\"display-fields\")]",1589],["foreach (var field in fields)",1477],["/// <para>Encode fields of given value.</para>",1465],["FieldInfo[] fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance);",1447],["/// Constructor that accepts values for all mandatory fields",1325],["return fields;",1292]]},{"word":"file","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["/// To modify move field declaration from designer file to code-behind file.",154384],["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["//     Manual changes to this file will be overwritten if the code is regenerated.",10815],["//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file",8485],["//the line below to match the UICulture setting in the project file.",8484],["This file is part of dnSpy",6807],["// Automatically generated contract file.",6735],["Assert.NotNull(file);",6041]]},{"word":"fileName","context":[["/// <param name=\"fileName\"></param>",2144],["return fileName;",2040],["if (File.Exists(fileName))",1782],["File.Delete(fileName);",1431],["if (fileName == null)",1400],["/// <param name=\"fileName\">Name of the file.</param>",1391],["/// <param name=\"fileName\">string xml file to load and deserialize</param>",1292],["/// <param name=\"fileName\">full path of outupt xml file</param>",1291],["public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + \"/\" + fileName); }",1267],["public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + \"/\" + fileName); }",1267]]},{"word":"files","context":[["//in your source files, set the <UICulture> to en-US.  Then uncomment",8482],["foreach (var file in files)",2961],["foreach (string file in files)",1986],["return files;",1474],["using (FileSystemHelper files = new FileSystemHelper(this))",1353],["- or regenerate the project with the newest IDL files.",1196],["// BIM IFC library: this library works with Autodesk(R) Revit(R) to export IFC files containing model geometry.",857],["for (int i = 0; i < files.Length; i++)",763],["Project based on the files auto generated with the tool \"WebIDLParser\"",758],["* See source code files for contributors.",718]]},{"word":"filter","context":[["/// <param name=\"filters\">The list of filter conditions.</param>",7884],["/// <param name=\"filterName\">The named filter.</param>",7242],["if (filter != null)",1700],["/// <param name=\"filter\"></param>",1213],["return filter;",1168],["/// <param name=\"filter\">The filter.</param>",1005],["/// <param name=\"filter\">The filter.</param>",1005],["if (filter == null)",935],["//rsLang.filter = \"LanguageLayoutLnk_LanguageID=\" & 0000",672],["/// Process the filter on the specified image.",558]]},{"word":"finally","context":[["finally",245760],["finally {",31396],["} finally {",22633],["finally\t{EndCase(exp); exp = null;}",1171],["finally { Dispose(); }",685],["finally { }",683],["} finally { theLock.ExitWriteLock(); }",547],["finally{EndCase(exp); exp = null;}",456],["//finally",354],["//    finally",352]]},{"word":"first","context":[["first = false;",8416],["bool first = true;",6327],["// Create a Frame to act as the navigation context and navigate to the first page",5190],["/// Initializes the singleton application object.  This is the first line of authored code",5125],["// When the navigation stack isn't restored navigate to the first page,",4932],["* DAWN OF LIGHT - The first free open source DAoC server emulator",3973],["if (first)",3199],["if (!first)",2764],["//Use ClassInitialize to run code before running the first test in the class",2111],["// This code will not execute when the application is first launched",1831]]},{"word":"flags","context":[["return flags;",1582],["/// <param name=\"flags\"></param>",1059],["public virtual void WriteToParcel(global::Android.Os.Parcel dest, int flags) /* MethodBuilder.Create */",901],["public int flags;",843],["uint flags = 0;",820],["int flags,",732],["this.flags = flags;",727],["this.flags = flags;",727],["/// <param name=\"flags\">",683],["public virtual void WriteToParcel(global::Android.OS.Parcel dest, int flags) /* MethodBuilder.Create */",682]]},{"word":"float","context":[["return default(float);",3492],["float Sum = 0.0F;",2852],["float[] ab = new float[3];",2845],["float[] ab = new float[3];",2845],["float local_float = -5.2F;",2844],["float v;",2087],["public float Y;",1213],["public float X;",1204],["public float speed;",1149],["new float[] {0F,0F,0F,0F},",920]]},{"word":"following","context":[["// General Information about an assembly is controlled through the following",263447],["// Version information for an assembly consists of the following four values:",249312],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// the following conditions:",43623],["// furnished to do so, subject to the following conditions:",40388],["furnished to do so, subject to the following conditions:",18922],["// Information about this assembly is defined by the following attributes.",8530],["// The following attributes are used to specify the signing key for the assembly,",8391],["* furnished to do so, subject to the following conditions:",8249],["// The following CommonMark:",4867]]},{"word":"foo","context":[["void foo()",1806],["/// entity.StringProperty = \"foo\";",1336],["Identifier(\"foo\"),",785],["void foo() { }",712],["public void foo()",692],["foo= \"bar\"",566],["class foo",484],["foo",440],["Name = \"foo\",",435],[".AddProject(pid, \"foo\", \"foo.dll\", LanguageNames.CSharp)",405]]},{"word":"for","context":[["// Version information for an assembly consists of the following four values:",249312],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["/// Required method for Designer support - do not modify",72324],["///   Overrides the current thread's CurrentUICulture property for all",38271],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["// Use this for initialization",32451],["/// The operations group for this extension method.",24979],["/// The main entry point for the application.",15420],["for (int i = 0; i < count; i++)",14084],["for (int i = 0; i < n; i++)",9134]]},{"word":"foreach","context":[["foreach(var _header in customHeaders)",11075],["foreach (var error in result.Errors)",5449],["foreach (var item in items)",5364],["foreach (",3339],["foreach (FieldInfo field in fields)",3237],["foreach (PropertyInfo property in properties)",3051],["foreach (var file in files)",2961],["foreach (DataRow row in table.Rows)",2634],["foreach (var item in list)",2531],["foreach (string line in lines)",2232]]},{"word":"form","context":[["// If we got this far, something failed, redisplay form",11850],["// The form \"{Major}.{Minor}.*\" will automatically update the build and revision,",8385],["* form is not reasonably feasible for technical reasons, you must include the words \"Powered by ONLYOFFICE\"",7255],["* *   Redistributions in binary form must reproduce the above",4163],["//     * Redistributions in binary form must reproduce the above",1954],["form, as well as any drawings, specifications, and documentation",1940],["form.Show();",1774],["form.ShowDialog();",1475],["request.ContentType = \"application/x-www-form-urlencoded\";",1408],["// object code form for any purpose and without fee is hereby granted,",1131]]},{"word":"format","context":[["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["// set \"format\" to json by default",4270],["// e.g. /pet/{petId}.{format} becomes /pet/{petId}.json",4270],["/// <param name=\"version\">The Office file format version.</param>",3982],["/// <param name=\"format\"></param>",3176],["Format = format;",3097],["/// <param name=\"format\">The format.</param>",3038],["/// <param name=\"format\">The format.</param>",3038],["/// <param name=\"message\">A <see langword=\"string\" /> containing one format item.</param>",2854],["localVarPathParams.Add(\"format\", \"json\");",2484]]},{"word":"found","context":[["//(used if a resource is not found in the page,",17306],["found = true;",10089],["bool found = false;",7501],["if (!found)",4164],["/// <exception cref=\"ArgumentOutOfRangeException\">No match was found</exception>",3102],["return found;",2771],["if (found)",2694],["Graphics Engine OGRE, which can be found at http://ogre.sourceforge.net.",1486],["// If no sample found, try generate sample using formatter and sample object",1432],["found = false;",1417]]},{"word":"four","context":[["// Version information for an assembly consists of the following four values:",249312],["// like the four seasons.\"",438],["/// <returns>A packed integer containing all four color components.</returns>",107],["case 4: return \"four\";",97],["_manager.Create<GammaPart>(\"gamma\", init => { init.Record.Frap = \"four\"; });",96],["///    <paramref name=\"id\" /> isn't exactly four bytes long.",88],["Console.WriteLine(\"four\");",81],["string errorMsg = \"LeanTween - When passing values for a vector path, you must pass four or more values!\";",78],["// Calculate the contribution from the four corners",74],["///    <paramref name=\"ident\" /> is not exactly four bytes long.",73]]},{"word":"frame","context":[["// Update is called once per frame",30232],["// Place the frame in the current Window",5205],["public override int Run(InterpretedFrame frame)",2893],["// Create the frame but don't set it as RootVisual yet; this allows the splash",1859],["/// <returns>The root frame of the Phone Application.</returns>",1827],["// Show the areas of the app that are being redrawn in each frame.",1814],["/// Provides easy access to the root frame of the Phone Application.",1804],["// Display the current frame rate counters.",1784],["frame.Push(null);",1433],["// Set the FlowDirection of all elements under the root frame based",1373]]},{"word":"from","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["/// To modify move field declaration from designer file to code-behind file.",154384],["//     This code was generated from a template.",10945],["// Trim '/' character from the end of baseUrl and beginning of url.",7722],["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["//    This code was generated from a template.",5346],["/// Unmarshaller the response from the service to the response class.",4089],["//TODO: Load state from previously suspended application",3637],["/// has failed. Note that this status is distinct from the HTTP status",3499],["/// <returns>Returns the requested page from the collection using the supplied filters.</returns>",3255]]},{"word":"function","context":[["LuaDLL.luaL_error(l,\"No matched override function to call\");",1690],["/// The schema unqualified name of this PostgreSQL function.",1585],["/// Login id of application user accessing this PostgreSQL function.",1585],["/// The schema of this PostgreSQL function.",1585],["/// Serves as a hash function for a particular type.",1286],["/// with the default value defined by the class developer. This function can",1200],["/// A <see cref=\"System.String\"/> for the name of a function to launch at the beginning of the animation.",1200],["/// A <see cref=\"System.String\"/> for the name of a function to launch on every step of the animation.",1200],["/// A <see cref=\"System.String\"/> for the name of a function to launch at the end of the animation.",1200],["///<param name=\"options\">The function to set optional url parameters.</param>",1198]]},{"word":"g","context":[["// e.g. /pet/{petId}.{format} becomes /pet/{petId}.json",4270],["/// e.g.:",2780],["g.Dispose();",2598],["/// <param name=\"g\"></param>",2225],["for (int g = 0; g < Count; g++)",1896],["for (int g = 0; g < Count; g++)",1896],["for (int g = 0; g < Count; g++)",1896],["Graphics g = e.Graphics;",1527],["return g;",1526],["//  to avoid creating duplicate seed data. E.g.",1451]]},{"word":"generated","context":[["// </auto-generated>",169020],["// <auto-generated>",169005],["/// Auto-generated field.",154412],["//     This code was generated by a tool.",125487],["#region Windows Form Designer generated code",54340],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["[System.Security.SecurityCritical]  // auto-generated",18500],["[System.Security.SecuritySafeCritical]  // auto-generated",17743],["#region Component Designer generated code",15792],["//     This code was generated from a template.",10945]]},{"word":"get","context":[["get",1822052],["get {",1452292],["get;",225230],["public string Name { get; set; }",82260],["get { return false; }",35768],["public int Id { get; set; }",32950],["get { throw new NotImplementedException(); }",27582],["get { return true; }",24544],["public string Email { get; set; }",24278],["public string Description { get; set; }",22765]]},{"word":"given","context":[["// given",2073],["/// <para>Encode fields of given value.</para>",1465],["/// <returns>An object of the given type.</returns>",1439],["/// This class will create an object of a given type and populate it with sample data.",1417],["/// Gets the request body samples for a given <see cref=\"ApiDescription\"/>.",1416],["/// Gets the response body samples for a given <see cref=\"ApiDescription\"/>.",1416],["// Project-level suppressions either have no target or are given",1255],["/// <param name=\"_vm\">The opaque_ref of the given vm</param>",1234],["/// Generates model descriptions for given types.",1063],["//given",1013]]},{"word":"global","context":[["[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]",280885],["[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Data.Design.TypedDataSetGenerator\", \"4.0.0.0\")]",172570],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]",90997],["[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]",80047],["private static global::System.Resources.ResourceManager resourceMan;",45167],["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["[global::System.Configuration.UserScopedSettingAttribute()]",30085],["[global::System.Diagnostics.DebuggerNonUserCodeAttribute]",28404],["internal static global::System.Globalization.CultureInfo Culture {",26565]]},{"word":"go","context":[["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["// more details see http://go.microsoft.com/fwlink/?LinkId=317598.",3185],["// For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864",2916],["// visit http://go.microsoft.com/?LinkId=9394801",2678],["// The Blank Application template is documented at http://go.microsoft.com/fwlink/?LinkId=234227",1721],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409",1709],["// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236",1544],["// For more info on localizing Windows Phone apps see http://go.microsoft.com/fwlink/?LinkId=262072.",1362],["// For more information on Bundling, visit http://go.microsoft.com/fwlink/?LinkId=254725",1361]]},{"word":"goto","context":[["goto ERROR1;",10855],["goto default;",6194],["goto is_not_a_corner;",3124],["goto case 0;",1830],["goto case 1;",1468],["goto case 2;",1450],["goto success;",1297],["goto label1;",1253],["goto label2;",1193],["goto label5;",1096]]},{"word":"group","context":[["/// The operations group for this extension method.",24979],["/// The name of the resource group.",4048],["/// Required. The name of the resource group.",2821],["if (group != null)",1589],["return group;",1462],["if (group == null)",1459],["/// The operations group for this extension method",1442],["/// Name of resource group",1356],["/// Required. The resource group name of the data factory.",1070],["/// property provides the group to be displayed.</param>",846]]},{"word":"groupBox1","context":[["// groupBox1",8190],["this.groupBox1.Name = \"groupBox1\";",8102],["this.groupBox1.Name = \"groupBox1\";",8102],["this.groupBox1.TabStop = false;",8095],["this.groupBox1 = new System.Windows.Forms.GroupBox();",7955],["this.groupBox1.SuspendLayout();",7823],["this.groupBox1.ResumeLayout(false);",7800],["private System.Windows.Forms.GroupBox groupBox1;",7663],["this.Controls.Add(this.groupBox1);",5756],["this.groupBox1.PerformLayout();",5587]]},{"word":"h","context":[["h => (s, e) => h(e),",2999],["h => (s, e) => h(e),",2999],["return h;",1719],["if (h != null)",984],["case 'h':",884],["//#include \"sqliteInt.h\"",762],["return new X9ECParameters(curve, G, n, h, S);",499],["if ((h != null))",476],["int h = 0;",442],["protected override void WriteArgs(StreamHandler h) {",410]]},{"word":"handle","context":[["Init(@__env, handle);",3939],["return handle;",2248],["/// Optional. The http client handler used to handle http transport.",1694],["handle.Free();",1554],["// The object has been created already, just return it. This will handle the circular reference case.",1433],["/// The controller that will handle requests for the help page.",1413],["/// <returns>The handle.</returns>",1410],["if (handle == IntPtr.Zero)",1052],["this.handle = handle;",811],["this.handle = handle;",811]]},{"word":"handler","context":[["if (handler != null)",18540],["handler(this, e);",5894],["if (handler == null)",2205],["handler(this, EventArgs.Empty);",2124],["PropertyChangedEventHandler handler = PropertyChanged;",2049],["if (handler != null) {",2017],["// Global handler for uncaught exceptions.",1861],["// Remove this handler since it is no longer needed",1854],["var handler = PropertyChanged;",1715],["/// Optional. The http client handler used to handle http transport.",1694]]},{"word":"has","context":[["///<param name=\"parentObject\">object there has created the proxy</param>",15036],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["// Do not repeat app initialization when the Window already has content,",5315],[": message == ManageMessageId.Error ? \"An error has occurred.\"",4066],["/// has failed. Note that this status is distinct from the HTTP status",3499],["/// operation, indicating whether it has succeeded, is inprogress, or",3073],["message == ManageMessageId.ChangePasswordSuccess ? \"Your password has been changed.\"",2721],[": message == ManageMessageId.SetPasswordSuccess ? \"Your password has been set.\"",2685],["// Sign in the user with this external login provider if the user already has a login",2112],["//Use TestCleanup to run code after each test has run",2094]]},{"word":"hash","context":[["return hash;",11954],["int hash = 1;",3195],["/// Returns a hash code for this instance.",2559],["/// Gets the hash code",2029],["int hash = 41;",2017],["/// A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.",1694],["/// A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.",1694],["/// Returns the hash code for this instance.",1322],["/// Serves as a hash function for a particular type.",1286],["int hash = 17;",1078]]},{"word":"have","context":[["// either both should have failed the same way or they should both produce the same result",3123],["//Use ClassCleanup to run code after all tests in a class have run",2109],["// If the user does not have an account, then prompt the user to create an account",2088],["// Use ClassCleanup to run code after all tests in a class have run",1478],["// You have 17 seconds to return from this method, or iOS will terminate your application.",1454],["//// and have IEnumerable<string> as the body parameter or return type.",1438],["// Cannot instantiate the type because it doesn't have a default constructor",1434],["// Project-level suppressions either have no target or are given",1255],["title: \"\"If statement must have a space between 'if' and the boolean expression\"\", // allow any title",1182],["// have not yet chosen which version of Entity Framework to use. To generate a context class and entity",1065]]},{"word":"header","context":[["// to determine the Accept header",4305],["// to determine the Content-Type header",2701],["/// Optional. Request header parameters.",2116],["foreach(var header in customHeaders)",1974],["/// <param name=\"options\">The query and header options for the request.</param>",1702],["httpRequest.Headers.TryAddWithoutValidation(header.Key, header.Value);",1339],["httpRequest.Headers.TryAddWithoutValidation(header.Key, header.Value);",1339],["httpRequest.Headers.Remove(header.Key);",1335],["if (httpRequest.Headers.Contains(header.Key))",1335],["return header;",1297]]},{"word":"height","context":[["/// <param name=\"height\"></param>",2480],["Height = height;",2039],["for (int y = 0; y < height; y++)",1868],["this.height = height;",1463],["this.height = height;",1463],["/// <param name=\"height\">The height.</param>",1458],["/// <param name=\"height\">The height.</param>",1458],["this.Height = height;",1274],["return height;",1253],["/// <param name=\"height\">",962]]},{"word":"here","context":[["// Contributor(s): (Open source contributors should list themselves and their modifications here).",3814],["/// The above documentation is © Microsoft Corporation. It is reproduced here",3118],["// you can specify it here.",2735],["// Add custom user claims here",2543],["// Plug in your email service here to send an email.",2220],["// Plug in your SMS service here to send a text message.",2050],["// TODO: Add constructor logic here",1819],["// You can write your own provider and plug it in here.",1732],["// If an exception is caught here it is most likely due to either",1373],["// Custom error handling for test cases can be placed here",1365]]},{"word":"hidden","context":[["#line hidden",130912],["/// <param name=\"showHidden\">A value indicating whether to show hidden records</param>",546],["<entry offset=\"\"0x0\"\" hidden=\"\"true\"\" document=\"\"0\"\" />",300],["<entry offset=\"\"0x0\"\" hidden=\"\"true\"\" />",263],["// TEST: Verify that /warn:0 has no impact on custom hidden diagnostic Hidden01.",156],["/// Run command, console window is hidden, wait for exit, redirect output",115],["WriteLiteral(\" type=\\\"hidden\\\"\");",115],["///   Computes Forward probabilities for a given hidden Markov model and a set of observations.",112],["@\"#line hidden",108],["<entry offset=\"\"0x7\"\" hidden=\"\"true\"\" document=\"\"0\"\" />",107]]},{"word":"http","context":[["*  http://aws.amazon.com/apache2.0",21715],["// http://www.clearcanvas.ca",10457],["// DotNetNuke® - http://www.dotnetnuke.com",7713],["// http://accord-framework.net",6699],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// http://esper.codehaus.org                                                          /",5269],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["// http://www.ClearCanvas.ca",4598],["// credit: http://stackoverflow.com/a/10454552/677735",4058],["* @author    : Ext.NET, Inc. http://www.ext.net/",3882]]},{"word":"httpRequest","context":[["httpRequest.RequestUri = new Uri(url);",11205],["await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);",9370],["if (httpRequest != null)",9015],["httpRequest.Dispose();",8939],["HttpRequestMessage httpRequest = null;",8917],["httpRequest = new HttpRequestMessage();",8914],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["TracingAdapter.SendRequest(invocationId, httpRequest);",7320],["httpRequest.Method = HttpMethod.Get;",4639],["httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);",3354]]},{"word":"httpResponse","context":[["HttpStatusCode statusCode = httpResponse.StatusCode;",11154],["string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);",9421],["if (httpResponse != null)",9083],["HttpResponseMessage httpResponse = null;",8929],["httpResponse.Dispose();",8927],["httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);",8699],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["TracingAdapter.ReceiveResponse(invocationId, httpResponse);",7320],["ServiceClientTracing.ReceiveResponse(invocationId, httpResponse);",2316]]},{"word":"i","context":[["i++;",47166],["int i = 0;",41633],["int i;",21240],["return i;",19759],["for (int i = 0; i < count; i++)",14084],["for (int i = 0; i < count; i++)",14084],["for (int i = 0; i < count; i++)",14084],["for (int i = 0; i < n; i++)",9134],["for (int i = 0; i < n; i++)",9134],["for (int i = 0; i < n; i++)",9134]]},{"word":"i4","context":[["IL_0007:  ldc.i4.0",1985],["IL_0000:  ldc.i4.1",1619],["ldc.i4.0",1531],["IL_0000:  ldc.i4.0",1302],["IL_001b:  ldc.i4.0",952],["IL_0001:  ldc.i4.1",862],["IL_001c:  ldc.i4.0",777],["IL_0023:  ldc.i4.0",654],["IL_0008:  ldc.i4.0",647],["IL_0025:  ldc.i4.1",613]]},{"word":"id","context":[["if (id == null)",9895],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["url: \"{controller}/{action}/{id}\",",8438],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["/// <param name=\"id\"></param>",8073],["Id = id;",7254],["defaults: new { controller = \"Home\", action = \"Index\", id = UrlParameter.Optional }",7060],["return id;",6667],["defaults: new { id = RouteParameter.Optional }",5725]]},{"word":"if","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["if (disposing && (components != null))",64767],["#if DEBUG",64430],["if (shouldTrace)",62322],["if (_shouldTrace)",55473],["if (value == null)",44825],["if (object.ReferenceEquals(resourceMan, null)) {",31017],["if (ModelState.IsValid)",26985],["if (disposing)",25792]]},{"word":"image","context":[["[TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]",6881],["[TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")] get",4991],["return image;",2950],["if (image != null)",1706],["[TargetedPatchingOptOut(\"Performance critical to inline across NGen image boundaries\")]",1661],["if (image == null)",1595],["[TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")] set",1558],["/// <param name=\"dest\">Destination image</param>",1435],["/// <param name=\"src\">The URL of an image.</param>",1407],["image.Dispose();",913]]},{"word":"in","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// to COM components.  If you need to access a type in this assembly from",239070],["//(used if a resource is not found in the page,",17306],["* Redistribution and use in source and binary forms, with or without",16512],["// Redistribution and use in source and binary forms, with or without",12613],["foreach(var _header in customHeaders)",11075],["//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file",8485],["//the line below to match the UICulture setting in the project file.",8484],["//in your source files, set the <UICulture> to en-US.  Then uncomment",8482],["//the NeutralResourceLanguage attribute below.  Update the \"en-US\" in",8479]]},{"word":"index","context":[["index++;",22227],["int index = 0;",19005],["int index = 1;",9635],["return index;",8544],["if (index < 0)",8282],["/// <param name=\"index\"></param>",6682],["int index;",5988],["index = 0;",5263],["var index = 0;",5085],["if (index == -1)",4148]]},{"word":"info","context":[["if (info == null)",8266],[": base(info, context)",8264],["return info;",7016],["base.GetObjectData(info, context);",3303],["if (info != null)",3118],["/// <param name=\"info\"></param>",2684],["this.info = info;",2632],["this.info = info;",2632],["base(info, context) {",2539],["result = await UserManager.AddLoginAsync(user.Id, info.Login);",2497]]},{"word":"information","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Version information for an assembly consists of the following four values:",249312],["// Add the debug information",11209],["// if desired. See the Mono documentation for more information about signing.",8404],["* distributed with this work for additional information",7049],["/// for more information)",6920],["// distributed with this work for additional information",5129],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["// configuring the new page by passing required information as a navigation",4927],["///information about and functionality for the current test run.",3535]]},{"word":"init","context":[["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 1)]",16039],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 0)]",6632],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["init();",2769],["[Dot42.DexImport(\"<init>\", \"(I)V\", AccessFlags = 1)]",1575],[".locals init (int V_0,",1558],["/// <para>The computed value falls back to the next available value e.g. appearance, init or",1236],["[Dot42.DexImport(\"<init>\", \"()V\", AccessFlags = 4)]",1235],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/Throwable;)V\", AccessFlags = 1)]",1075],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/Throwable;)V\", AccessFlags = 1)]",975]]},{"word":"input","context":[["return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();",6302],["return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();",6302],["ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);",5772],["/// <param name=\"input\"></param>",5290],["return input;",4930],["if (input == null)",3517],["input.SkipLastField();",3484],["return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();",3213],["return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();",3213],["return MergeFrom(input, pb::ExtensionRegistry.Empty);",3170]]},{"word":"instance","context":[["///   Returns the cached ResourceManager instance used by this class.",38276],["return instance;",15058],["if (instance == null)",8272],["/// <returns>this instance</returns>",7276],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["/// Initializes a new instance of the",3848],["/// Returns a <see cref=\"System.String\"/> that represents this instance.",3191],["/// A <see cref=\"System.String\"/> that represents this instance.",3026],["/// Returns a hash code for this instance.",2559],["instance = this;",2303]]},{"word":"int","context":[["public override int GetHashCode()",63011],["int i = 0;",41633],["return default(int);",41421],["public int Id { get; set; }",32950],["int version = reader.ReadInt();",30524],["int count = 0;",25276],["int i;",21240],["int index = 0;",19005],["public int Count",18574],["for (int i = 0; i < count; i++)",14084]]},{"word":"interface","context":[["/// See interface docs.",3243],["interface I",2350],["* the SWIG interface file instead.",2088],["public interface ILogger",1300],["// the SWIG interface file instead.",1188],["/// [Component] // ComponentAttribute requires implementing IComponent interface",1140],["public interface IModelDocumentationProvider",1068],["public interface IFoo",895],["public interface I",864],["@\"interface I",815]]},{"word":"internal","context":[["internal static global::System.Globalization.CultureInfo Culture {",26565],["internal static global::System.Resources.ResourceManager ResourceManager {",26564],["internal Resources() {",22374],["internal class Resources {",20953],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {",16102],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase",13281],["internal class Resources",12414],["internal Resources()",12313],["internal static global::System.Resources.ResourceManager ResourceManager",12312],["internal static global::System.Globalization.CultureInfo Culture",12307]]},{"word":"into","context":[["// An unhandled exception has occurred; break into the debugger",1925],["// A navigation has failed; break into the debugger",1857],["// method you should instantiate the window, load the UI into it and then make the window",1457],["/// <returns>true if can serialize and save into file; otherwise, false</returns>",1291],["//           in the KeyFile is installed into the CSP and used.",1234],["/// Write text directly into the generated output",954],["/// Write formatted text directly into the generated output",954],["/// <summary>Helper: create a new instance to deserializing into</summary>",942],["// Log error message into log file.",802],["// Now, pass feed resolved primary references into ResolveAssemblyReference.",762]]},{"word":"is","context":[["// General Information about an assembly is controlled through the following",263447],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["//     the code is regenerated.",128874],["// Update is called once per frame",30232],["throw new UnauthorizedException(\"Access is denied.\");",25663],["//(used if a resource is not found in the page,",17306],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["if((null != returnItem) && (returnItem is MarshalByRefObject))",11606],["//     Manual changes to this file will be overwritten if the code is regenerated.",10815]]},{"word":"it","context":[["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["// Generate the token and send it",3744],["/// operation, indicating whether it has succeeded, is inprogress, or",3073],["// you can specify it here.",2735],["// Create the frame but don't set it as RootVisual yet; this allows the splash",1859],["// Remove this handler since it is no longer needed",1854],["// You can write your own provider and plug it in here.",1732],["including commercial applications, and to alter it and redistribute it",1721],["including commercial applications, and to alter it and redistribute it",1721],["// and you are welcome to redistribute it under certain conditions; See",1604]]},{"word":"item","context":[["return item;",13751],["if (item == null)",11785],["/// <summary>The ETag of the item.</summary>",11746],["/// </item>",10663],["/// <item>",10609],["if (item != null)",9608],["/// <param name=\"item\"></param>",6479],["///     <item>",6010],["///     </item>",5951],["foreach (var item in items)",5364]]},{"word":"items","context":[["foreach (var item in items)",5364],["return items;",5055],["if (items == null)",2172],["items.Add(item);",1993],["if (items != null)",1477],["[Newtonsoft.Json.JsonPropertyAttribute(\"items\")]",1441],["/// <param name=\"items\"></param>",1346],["/// The items per page.",1269],["/// <param name=\"items\">The items.</param>",1160],["/// <param name=\"items\">The items.</param>",1160]]},{"word":"its","context":[["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["// * Neither the name of Jaroslaw Kowalski nor the names of its",3096],["// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its",2508],["// Neither the name of the Event Store LLP nor the names of its",2209],["//     * Neither the name of Google Inc. nor the names of its",1953],["//     * Neither the name of Rodrigo B. de Oliveira nor the names of its",1413],["// Initialize the app's font and flow direction as defined in its localized resource strings.",1362],["// To ensure that the font of your application is aligned with its supported languages and that the",1361],["// FlowDirection for each of those languages follows its traditional direction, ResourceLanguage",1361],["* Neither the name of JustLogic nor the names of its",1352]]},{"word":"j","context":[["j++;",5953],["int j = 0;",5606],["int j;",2492],["for (int j = 0; j < array.Length; j++)",2353],["for (int j = 0; j < array.Length; j++)",2353],["for (int j = 0; j < array.Length; j++)",2353],["for (int j = 0; j < values.Length; j++)",1980],["for (int j = 0; j < values.Length; j++)",1980],["for (int j = 0; j < values.Length; j++)",1980],["int i, j;",1949]]},{"word":"java","context":[["/// <java-name>",664406],["/// </java-name>",664406],["_r0_o = global::java.util.regex.HashDecompositions._ftable;",2035],["((global::java.util.regex.IntArrHash) _r0_o).put((int) _r1.i, (global::org.xmlvm._nArrayAdapter<int>) _r2_o);",2032],["_r1_o = new global::java.lang.String();",1814],["if (_java_exception is global::java.lang.Object) {",1543],["_r0_o = new global::java.lang.String();",1525],["_r2_o = new global::java.lang.String();",1071],["((global::java.util.regex.IntHash) _r0_o).put((int) _r1.i, (int) _r2.i);",1016],["return (global::java.lang.String) _r0_o;",966]]},{"word":"json","context":[["}\", json);",6031],["\"application/json\"",5347],["string json = @\"{",4438],["// set \"format\" to json by default",4270],["// e.g. /pet/{petId}.{format} becomes /pet/{petId}.json",4270],["localVarPathParams.Add(\"format\", \"json\");",2484],["return json;",2143],["JsonTextReader reader = new JsonTextReader(new StringReader(json));",1964],["_httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse(\"application/json; charset=utf-8\");",1909],["NextToken(json, ref index);",1866]]},{"word":"k","context":[["int k = 0;",2757],["k++;",2175],["k => sampleGenerator,",1444],["(k, o) => sampleGenerator);",1444],["k => new HelpPageSampleGenerator());",1441],["int k;",1128],["k => InitializeModelDescriptionGenerator(config));",1089],["for (int i = 0; i < k; i++)",951],["bitb = b; bitk = k;",827],["int k = int.Parse(Console.ReadLine());",761]]},{"word":"key","context":[["// The following attributes are used to specify the signing key for the assembly,",8391],["return key;",7912],["/// <param name=\"key\"></param>",7462],["/// <param name=\"key\">The key.</param>",6816],["/// <param name=\"key\">The key.</param>",6816],["if (key == null)",6481],["throw new ArgumentNullException(\"key\");",3340],["/// <param name=\"key\">",3259],["Key = key;",2901],["if (key != null)",2749]]},{"word":"l","context":[["LuaDLL.luaL_error(l, e.ToString());",15598],["pushValue(l,true);",13881],["return error(l,e);",11686],["pushValue(l,ret);",8241],["checkType(l,2,out v);",7787],["checkType(l,2,out a1);",6366],["checkType(l,1,out a1);",6170],["checkType(l,2,out a2);",4470],["checkType(l,3,out a2);",2894],["int argc = LuaDLL.lua_gettop(l);",2623]]},{"word":"label1","context":[["this.label1.Name = \"label1\";",27591],["this.label1.Name = \"label1\";",27591],["// label1",27373],["this.label1 = new System.Windows.Forms.Label();",26604],["private System.Windows.Forms.Label label1;",25419],["this.label1.AutoSize = true;",21016],["this.Controls.Add(this.label1);",16297],["this.label1.TabIndex = 0;",7889],["this.label1.TabIndex = 1;",3667],["this.label1.TabIndex = 2;",2571]]},{"word":"label2","context":[["this.label2.Name = \"label2\";",20432],["this.label2.Name = \"label2\";",20432],["// label2",20179],["this.label2 = new System.Windows.Forms.Label();",19658],["private System.Windows.Forms.Label label2;",18818],["this.label2.AutoSize = true;",15696],["this.Controls.Add(this.label2);",10670],["this.label2.TabIndex = 2;",2815],["this.label2.TabIndex = 1;",2524],["this.label2.TabIndex = 3;",2161]]},{"word":"label3","context":[["this.label3.Name = \"label3\";",15378],["this.label3.Name = \"label3\";",15378],["// label3",15177],["this.label3 = new System.Windows.Forms.Label();",14775],["private System.Windows.Forms.Label label3;",14122],["this.label3.AutoSize = true;",11782],["this.Controls.Add(this.label3);",7223],["this.groupBox1.Controls.Add(this.label3);",1697],["this.label3.TabIndex = 2;",1642],["this.label3.TabIndex = 4;",1442]]},{"word":"label4","context":[["this.label4.Name = \"label4\";",11970],["this.label4.Name = \"label4\";",11970],["// label4",11782],["this.label4 = new System.Windows.Forms.Label();",11471],["private System.Windows.Forms.Label label4;",10928],["this.label4.AutoSize = true;",9096],["this.Controls.Add(this.label4);",5095],["this.groupBox1.Controls.Add(this.label4);",1312],["goto label4;",1073],["this.label4.TabIndex = 3;",921]]},{"word":"lang","context":[["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;)V\", AccessFlags = 1)]",5500],["[Dot42.DexImport(\"toString\", \"()Ljava/lang/String;\", AccessFlags = 1)]",4946],["/// <para xml:lang=\"es\">",2835],["[Dot42.DexImport(\"equals\", \"(Ljava/lang/Object;)Z\", AccessFlags = 1)]",2439],["_r1_o = new global::java.lang.String();",1814],["/// <code lang=\"C#\">",1753],["if (_java_exception is global::java.lang.Object) {",1543],["_r0_o = new global::java.lang.String();",1525],["/// <code lang=\"VB\">",1144],["[Dot42.DexImport(\"<init>\", \"(Ljava/lang/String;Ljava/lang/Throwable;)V\", AccessFlags = 1)]",1075]]},{"word":"last","context":[["//  <last-editor>郭明锋</last-editor>",1555],["//  <last-editor>郭明锋</last-editor>",1555],["Name = \"last-name\",",1177],["LocalName = \"last-name\",",1176],["// TEST: Verify that last one wins between /warnaserror[+/-]: and /warnaserror[+/-].",624],["// TEST: Verify that last one wins between /warnaserror[+/-] and /warnaserror[+/-]:.",624],["// last saved (in emacs):",610],["last++;",601],["/// this value until the last poll returns a ‘200’ with",576],["if (last != null)",568]]},{"word":"ldc","context":[["IL_0007:  ldc.i4.0",1985],["IL_0000:  ldc.i4.1",1619],["ldc.i4.0",1531],["IL_0000:  ldc.i4.0",1302],["IL_001b:  ldc.i4.0",952],["IL_0001:  ldc.i4.1",862],["IL_001c:  ldc.i4.0",777],["IL_0023:  ldc.i4.0",654],["IL_0008:  ldc.i4.0",647],["IL_0025:  ldc.i4.1",613]]},{"word":"left","context":[["return left.Equals(right);",3591],["return left;",2940],["return !left.Equals(right);",2547],["return Equals(left, right);",2490],["return !Equals(left, right);",2434],["return !(left == right);",2236],["/// <param name=\"left\"></param>",1743],["/// <param name=\"left\">The left.</param>",1483],["/// <param name=\"left\">The left.</param>",1483],["/// <param name=\"left\">The first value to compare.</param>",973]]},{"word":"length","context":[["for (int i = 0; i < length; i++)",5755],["return length;",3405],["if (length == 0)",3095],["if (length < 0)",3078],["int length;",2188],["int length = 0;",2112],["/// <param name=\"length\"></param>",1981],["if (length > 0)",1779],["/// <param name=\"length\">",1417],["for (int i = 0; i < length; i++) {",1390]]},{"word":"level","context":[["(source, target, level) =>",11973],["/// <param name=\"level\"></param>",2642],["switch (level)",1263],["// Project-level suppressions either have no target or are given",1255],["// class-level declarations",1191],["level++;",903],["/// <param name=\"level\">",891],["Level = level;",795],["/// <param name=\"level\">The log level.</param>",774],["/// <param name=\"level\">The log level.</param>",774]]},{"word":"line","context":[["#line hidden",130912],["#line default",118226],["//the line below to match the UICulture setting in the project file.",8484],["string line;",6409],["/// Initializes the singleton application object.  This is the first line of authored code",5125],["return line;",2253],["foreach (string line in lines)",2232],["/// <summary>Returns response with indentations and line breaks.</summary>",1999],["#line 6",1999],["if (line == null)",1830]]},{"word":"list","context":[["return list;",31092],["/// </list>",19032],["/// <list type=\"bullet\">",8824],["/// <param name=\"filters\">The list of filter conditions.</param>",7884],["if (list == null)",5538],["if (list != null)",4615],["// Contributor(s): (Open source contributors should list themselves and their modifications here).",3814],["/// <list type=\"table\">",3805],["/// <list>",3748],["return list.ToArray();",2904]]},{"word":"local","context":[["/// Gets the local name of the element.",3912],["///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>",1154],["return local;",857],["Self,            //CGPlayerData::local.skill,448",448],["if (local != null)",445],["foreach (var local in locals)",415],["// User does not have a local password so remove any validation errors caused by a missing",402],["if (local == null)",330],["above cannot be given local legal effect according to their terms,",319],["if (invURL == null) // not there, forward to local inventory connector to resolve",241]]},{"word":"localized","context":[["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["/// Look up a localized string similar to",4348],["///   Looks up a localized resource of type System.Byte[].",3534],["///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).",3469],["///   Looks up a localized string similar to .",1543],["///   Looks up a localized string similar to LeftToRight.",1364],["// Initialize the app's font and flow direction as defined in its localized resource strings.",1362],["///   Looks up a localized string similar to MY APPLICATION.",1238],["[SuppressMessage(\"Microsoft.Globalization\", \"CA1303:Do not pass literals as localized parameters\",",1120]]},{"word":"location","context":[["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscorlib.dll",2483],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Web.dll",2167],["/// <param name=\"location\"></param>",2071],["// Assembly location: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.dll",1682],["Location = location;",1682],["return location;",1325],["//       When specifying the KeyFile, the location of the KeyFile should be",1211],["Location = location,",1171],["if (location != null)",1047],["if (location == null)",961]]},{"word":"lock","context":[["lock (this)",21055],["lock (_lock)",5852],["lock(this)",5217],["lock (this) {",3789],["lock (SyncRoot)",3519],["lock(this) {",2896],["lock (syncRoot)",2662],["lock (_syncRoot)",2394],["lock (lockObject)",2288],["lock (_gate)",2190]]},{"word":"log","context":[["if (log.IsDebugEnabled)",2324],["private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);",2003],["if (log.IsWarnEnabled)",1996],["log.Error(ex);",1780],["// This is similar to the RememberMe option when you log in.",1774],["_log = log;",1390],["if (log.IsErrorEnabled)",1330],["// log message.",1321],["if (log.IsInfoEnabled)",1035],["return log;",861]]},{"word":"logger","context":[["_logger = logger;",6249],["this.logger = logger;",1966],["this.logger = logger;",1966],["GuardAgainstNullLogger(logger);",1909],["MockLogger logger = new MockLogger();",1635],["if (logger == null)",1369],["if (logger!=null)",1096],["Logger = logger;",1068],["ILogger logger,",970],["/// <param name=\"logger\">The logger.</param>",942]]},{"word":"long","context":[["[StringLength(100, ErrorMessage = \"The {0} must be at least {2} characters long.\", MinimumLength = 6)]",11525],["return default(long);",5364],["return Factory.Scalar<long>(this._Catalog, sql);",4806],["long offset = (pageNumber - 1) * 10;",4806],["public override long Position",4653],["public long Count()",4369],["public override long Length",4298],["public override void SetLength(long value)",4231],["public long _LoginId { get; set; }",4199],["public override long Seek(long offset, SeekOrigin origin)",4109]]},{"word":"m","context":[["return m;",7283],["base.WndProc(ref m);",3831],["if (m.Success)",2846],["protected override void WndProc(ref Message m)",2298],["if (m != null)",1917],["if (m == null)",1773],["this.m00 = m.m00;",1541],["this.m10 = m.m10;",1541],["this.m11 = m.m11;",1541],["this.m01 = m.m01;",1541]]},{"word":"makes","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["that makes a Modification.",631],["shall be used for statistical purposes only. Once a Recipient makes a Modification available, it is",631],["makes it unnecessary.",319],["// Uncomment the following line to add Web API services which makes it easier to port Web API 2 controllers.",299],["// Setting ComVisible to false makes the types in this assembly not visible to COM components. If",283],["Justification = \"Method makes a network request\")]",247],["// Swashbuckle makes a best attempt at generating Swagger compliant JSON schemas for the various types",243],["// This makes sure those code still works.",227],["///    makes changes since that savepoint permanent if the savepoint began the transaction,",117]]},{"word":"managed","context":[["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["instance void  .ctor() cil managed",2166],["/// Releases unmanaged and - optionally - managed resources",968],["/// Releases unmanaged and - optionally - managed resources.",879],["// Dispose managed resources.",634],["// If disposing equals true, dispose all managed",621],["// navigation state should be managed",439],["/// <param name=\"frame\">An instance whose navigation history should be managed by",437],["/// managed.</param>",432],["// free managed resources",366]]},{"word":"manager","context":[["return manager;",3352],["var manager = Context.GetOwinContext().GetUserManager<ApplicationUserManager>();",3102],["manager.PasswordValidator = new PasswordValidator",2684],["manager.UserValidator = new UserValidator<ApplicationUser>(manager)",2153],["manager.UserValidator = new UserValidator<ApplicationUser>(manager)",2153],["manager.EmailService = new EmailService();",2039],["manager.SmsService = new SmsService();",2009],["regenerateIdentity: (manager, user) => user.GenerateUserIdentityAsync(manager))",1992],["regenerateIdentity: (manager, user) => user.GenerateUserIdentityAsync(manager))",1992],["var userIdentity = await manager.CreateIdentityAsync(this, DefaultAuthenticationTypes.ApplicationCookie);",1937]]},{"word":"map","context":[["return map;",4147],["// create path and map variables",1943],["if (map == null)",1800],["if (map != null)",1088],["/// <param name=\"map\"></param>",1011],["foreach (var map in maps)",894],["m_Map = map;",715],["Map map = from.Map;",700],["/// <param name=\"map\">An <see cref=\"OSDMap\"/> containing the data</param>",673],["public void Deserialize(OSDMap map)",668]]},{"word":"match","context":[["//the line below to match the UICulture setting in the project file.",8484],["[Compare(\"NewPassword\", ErrorMessage = \"The new password and confirmation password do not match.\")]",6121],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["if (match.Success)",4677],["/// <exception cref=\"ArgumentOutOfRangeException\">No match was found</exception>",3102],["// Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType",2551],["return match;",1832],["if (!match.Success)",1795],["// Set the font to match the display language defined by the",1374],["// and ResourceFlowDirection should be initialized in each resx file to match these values with that",1361]]},{"word":"matrix","context":[["return matrix;",1991],["/// A new memory block will be allocated for storing the matrix.",1273],["if (matrix == null)",1201],["throw new ArgumentNullException(\"matrix\");",1020],["/// <param name=\"value\">A matrix.</param>",917],["/// <param name=\"order\">The order of the square matrix <paramref name=\"a\"/>.</param>",868],["/// <param name=\"b\">On entry the B matrix; on exit the X matrix.</param>",794],["/// <param name=\"b\">On entry the B matrix; on exit the X matrix.</param>",794],["/// <param name=\"rowsA\">The number of rows in the A matrix.</param>",714],["/// <param name=\"columnsA\">The number of columns in the A matrix.</param>",714]]},{"word":"max","context":[["return max;",2754],["element.RemoveAttribute(\"max\");",1289],["int max = 0;",961],["/// <param name=\"max\"></param>",705],["this.max = max;",670],["this.max = max;",670],["for (int i = 0; i < max; i++)",614],["throw new global::SilentOrbit.ProtocolBuffers.ProtocolBufferException(\"Read past max limit\");",610],["Max = max;",491],["if (min > max)",427]]},{"word":"member","context":[["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// Disable the \"could hide other member\" warning, can happen on certain properties.",6739],["</member>",2388],["if (member == null)",1942],["private const string MethodExpression = \"/doc/members/member[@name='M:{0}']\";",1435],["return member;",1374],["if (member != null)",1272],["// a specific target and scoped to a namespace, type, member, etc.",1256],["private const string TypeExpression = \"/doc/members/member[@name='T:{0}']\";",1224],["return member.Name;",1196]]},{"word":"merge","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1913],["//     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1721],["//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1562]]},{"word":"message","context":[[": base(message)",12826],["/// <param name=\"message\"></param>",10545],["/// <param name=\"message\">The message.</param>",8558],["/// <param name=\"message\">The message.</param>",8558],[": base(message, innerException)",7093],["return message;",5847],["/// <param name=\"message\">",5104],["public Task SendAsync(IdentityMessage message)",4160],[": message == ManageMessageId.Error ? \"An error has occurred.\"",4066],["/// message passing algorithm.",3959]]},{"word":"method","context":[["/// Required method for Designer support - do not modify",72324],["/// the contents of this method with the code editor.",72166],["/// The operations group for this extension method.",24979],["///<summary>Gets the HTTP method.</summary>",10082],["///<summary>Gets the method name.</summary>",10082],["[TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]",6881],["</method>",6698],["[TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")] get",4991],["throw new Exception(\"The method or operation is not implemented.\");",4244],["if (method == null)",4137]]},{"word":"methods","context":[["#region Public methods",5462],["#region Private methods",4544],["<methods>",4032],["</methods>",4032],["#region methods",2486],["#region private methods",2089],["#region public methods",1830],["#region Helper methods",1581],["#region Static methods",1462],["foreach (var method in methods)",1213]]},{"word":"microsoft","context":[["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["// more details see http://go.microsoft.com/fwlink/?LinkId=317598.",3185],["* vspython@microsoft.com. By using this source code in any fashion, you are agreeing to be bound",2989],["// For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864",2916],["// visit http://go.microsoft.com/?LinkId=9394801",2678],["any2.Namespace = \"urn:schemas-microsoft-com:xml-diffgram-v1\";",2589],["// The Blank Application template is documented at http://go.microsoft.com/fwlink/?LinkId=234227",1721],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409",1709],["// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236",1544]]},{"word":"mode","context":[["// Note: For instructions on enabling IIS6 or IIS7 classic mode,",2678],["switch (mode)",2650],["/// <param name=\"mode\"></param>",1841],["// Enable non-production analysis visualization mode,",1821],["// Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run",1675],["return mode;",890],["/// <param name=\"mode\">",790],["this.mode = mode;",593],["this.mode = mode;",593],["///<summary>Verbose mode. Display column headers</summary>",581]]},{"word":"model","context":[["return View(model);",48374],["return model;",8915],["var model = compilation.GetSemanticModel(tree);",7055],["var user = await UserManager.FindByNameAsync(model.Email);",3405],["if (model == null)",3403],["var model = comp.GetSemanticModel(tree);",3096],["var user = new ApplicationUser { UserName = model.Email, Email = model.Email };",3041],["var user = new ApplicationUser { UserName = model.Email, Email = model.Email };",3041],["return this.View(model);",3011],["public async Task<ActionResult> Login(LoginViewModel model, string returnUrl)",2272]]},{"word":"modify","context":[["// set of attributes. Change these attribute values to modify the information",263545],["/// To modify move field declaration from designer file to code-behind file.",154384],["/// Required method for Designer support - do not modify",72324],["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470]]},{"word":"module","context":[["// module.  An independent module is a module which is not derived from",2107],["// module.  An independent module is a module which is not derived from",2107],["// module.  An independent module is a module which is not derived from",2107],["this.module = module;",1729],["this.module = module;",1729],["if (module == null)",1528],["if (module != null)",1318],["return module;",1289],["Assert.AreEqual(expectedCode, module.Lines());",908],["var module = project.VBComponents.Item(0).CodeModule;",822]]},{"word":"more","context":[["// if desired. See the Mono documentation for more information about signing.",8404],["/// for more information)",6920],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["for more details.",3376],["// for more details.",3335],["// more details see http://go.microsoft.com/fwlink/?LinkId=317598.",3185],["For more features, controls, and fast professional support,",2979],["// For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864",2916],["/// The help page will use this information to produce more accurate request samples.",2860],["/// The help page will use this information to produce more accurate response samples.",2860]]},{"word":"move","context":[["/// To modify move field declaration from designer file to code-behind file.",154384],["// Invoked when the application is about to move from active to inactive state.",346],["//Let the user move freely inside the skillshot.",286],["return move;",279],["if (move != null)",249],["// This method is invoked when the application is about to move from active to inactive state.",245],["var move = 0U;",216],["* @param {GameObject} gameObject:GameObject Gameobject that you wish to move",202],["/// <para>whether the move succeeded. </para>",188],["/// A <see cref=\"Vector3\"/> for the amount of change in position to move the GameObject.",160]]},{"word":"ms","context":[["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["MemoryStream ms = new MemoryStream();",5883],["ms.Position = 0;",5515],["_result.RequestId = _httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",4960],["using (MemoryStream ms = new MemoryStream())",4109],["using (var ms = new MemoryStream())",4000],["return ms.ToArray();",3481],["ex.RequestId = _httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",3375]]},{"word":"msg","context":[["return msg;",2863],["/// <param name=\"msg\"></param>",1575],["string msg;",1405],["_logger.Error (msg);",1242],["protected override bool ProcessCmdKey(ref Message msg, Keys keyData)",1230],["return base.ProcessCmdKey(ref msg, keyData);",1167],["Console.WriteLine(msg);",1155],["if (msg != null) {",1150],["TMessage msg = iprot_.ReadMessageBegin();",1094],["if (msg.Type == TMessageType.Exception) {",1083]]},{"word":"must","context":[["[StringLength(100, ErrorMessage = \"The {0} must be at least {2} characters long.\", MinimumLength = 6)]",11525],["* The interactive user interfaces in modified source and object code versions of ONLYOFFICE must display",7255],["* form is not reasonably feasible for technical reasons, you must include the words \"Powered by ONLYOFFICE\"",7255],["* *   Redistributions of source code must retain the above",4163],["* *   Redistributions in binary form must reproduce the above",4163],["// Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType",2551],["//     * Redistributions in binary form must reproduce the above",1954],["2. Altered source versions must be plainly marked as such, and must not be",1712],["2. Altered source versions must be plainly marked as such, and must not be",1712],["// In order to sign your assembly you must specify a key to use. Refer to the",1296]]},{"word":"n","context":[["for (int i = 0; i < n; i++)",9134],["return n;",5360],["int n = int.Parse(Console.ReadLine());",4982],["int n = 0;",3779],["case '\\n':",3677],["n++;",3089],["int n;",3046],["return Ensure(n.HasValue && n.Value == t);",3000],["return Ensure(n.HasValue && n.Value == t);",3000],["sb.Append(\"}\\n\");",2895]]},{"word":"name","context":[["/// </java-name>",664406],["/// <java-name>",664406],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["/// <param name='cancellationToken'>",57619],["/// <param name=\"e\"></param>",41186],["/// <param name='operations'>",39131],["/// <param name=\"sender\"></param>",36667],["/// <param name='customHeaders'>",26769],["Name = name;",25832],["/// <typeparam name=\"T\"></typeparam>",25253]]},{"word":"nameof","context":[["throw new ArgumentNullException(nameof(value));",1921],["[MemberData(nameof(ValidCollectionSizes))]",1812],["throw new ArgumentNullException(nameof(name));",1232],["throw new ArgumentNullException(nameof(source));",1127],["if (source == null) throw new ArgumentNullException(nameof(source));",1090],["throw new ArgumentNullException(nameof(context));",1074],["throw new ArgumentNullException(nameof(user));",975],["return RedirectToAction(nameof(Index), new { Message = ManageMessageId.Error });",947],["return RedirectToAction(nameof(HomeController.Index), \"Home\");",893],["throw new ArgumentNullException(nameof(path));",879]]},{"word":"names","context":[["/// <param name=\"parameterNames\">The parameter names.</param>",11513],["// * Neither the name of Jaroslaw Kowalski nor the names of its",3096],["// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its",2508],["// Neither the name of the Event Store LLP nor the names of its",2209],["//     * Neither the name of Google Inc. nor the names of its",1953],["/// Gets the parameter names.",1417],["//     * Neither the name of Rodrigo B. de Oliveira nor the names of its",1413],["* Neither the name of JustLogic nor the names of its",1352],["return names;",1194],["//     * Neither the name of Ayende Rahien nor the names of its",1042]]},{"word":"namespace","context":[["namespace Server.Items",17842],["namespace Server.Mobiles",8502],["namespace System",7878],["namespace ConsoleApplication1",6441],["namespace Nest",4849],["namespace Microsoft.Graph",4162],["namespace Ext.Net",3830],["namespace NS",3289],["namespace Microsoft.CodeAnalysis.CSharp",3058],["namespace N",2890]]},{"word":"need","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["//No need to check RemotingRole; no call to db.",1506],["// If the app has received a 'reset' navigation, then we need to check",1426],["// If you need to expose a type to COM, use [ComVisible(true)] on that type.",1325],["PLEASE DO *NOT* MODIFY THIS FILE! This file will be overridden next generation. If you need changes:",1196],["// TODO we need to implement our property change notification mechanism.",879],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as above, no need to verify",772],["// to COM componenets.  If you need to access a type in this assembly from",709]]},{"word":"new","context":[["throw new NotImplementedException();",202994],["this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);",46260],["throw new NotSupportedException();",35762],["StringBuilder sb = new StringBuilder();",33434],["get { throw new NotImplementedException(); }",27582],["this.label1 = new System.Windows.Forms.Label();",26604],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError));",26327],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError));",26327],["throw new UnauthorizedException(\"Access is denied.\");",25663],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.Forbidden));",25647]]},{"word":"next","context":[["// on the next navigation to see if the page stack should be reset",1425],["/// <para>The computed value falls back to the next available value e.g. appearance, init or",1236],["PLEASE DO *NOT* MODIFY THIS FILE! This file will be overridden next generation. If you need changes:",1196],["if (next != null)",1153],["// Ignore any problems encountered in the factory; go on to the next one (if any).",1075],["return next;",1042],["_next = next;",898],["if (next == null)",853],["/// Advances the enumerator to the next element of the collection.",650],["this.next = next;",585]]},{"word":"no","context":[["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536],["///<para> - Stream, no deserialization, response stream is your responsibility </para>",4536],["///<para> - VoidResponse, no deserialization, response stream never read and closed </para>",4536],["///<para> - byte[], no deserialization, but the response stream will be closed</para>",2224],["///<para> - Stream, no deserialization, response stream is your responsibility</para>",2224],["///<para> - VoidResponse, no deserialization, response stream never read and closed</para>",2224],["// Remove this handler since it is no longer needed",1854],["//No need to check RemotingRole; no call to db.",1506],["// If no sample found, try generate sample using formatter and sample object",1432]]},{"word":"node","context":[["return node;",15597],["if (node == null)",10759],["if (node != null)",7683],["/// Creates a duplicate of this node.",3922],["/// <returns>Returns the cloned node. </returns>",3908],["/// <param name=\"node\"></param>",3261],["* <exception cref='ParseException'>if the node analysis",2122],["var node = Parse(text);",2086],["node,",1844],["while (node != null)",1789]]},{"word":"not","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["/// Required method for Designer support - do not modify",72324],["//(used if a resource is not found in the page,",17306],["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["* form is not reasonably feasible for technical reasons, you must include the words \"Powered by ONLYOFFICE\"",7255],["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["// Disable the \"new keyword not required\" warning.",6739],["[Compare(\"NewPassword\", ErrorMessage = \"The new password and confirmation password do not match.\")]",6121],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["// Do not repeat app initialization when the Window already has content,",5315]]},{"word":"null","context":[["return null;",701948],["private System.ComponentModel.IContainer components = null;",72616],["if (disposing && (components != null))",64767],["object[] paramsArray = null;",55440],["null,",54732],["if (value == null)",44825],["if (object.ReferenceEquals(resourceMan, null)) {",31017],["Pattern = null,",28611],["DefaultValue = null,",28376],["if (user != null)",23695]]},{"word":"number","context":[["/// <param name=\"pageNumber\">Enter the page number to produce the resultset.</param>",3551],["/// <param name=\"start\">Row number at which to start reading.</param>",3017],["/// <param name=\"pageNumber\">Enter the page number to produce the paginated result.</param>",1810],[": message == ManageMessageId.RemovePhoneSuccess ? \"Your phone number was removed.\"",1760],[": message == ManageMessageId.AddPhoneSuccess ? \"Your phone number was added.\"",1736],["/// <param name=\"pageNumber\">Enter the page number to produce the paged result.</param>",1674],["int number = int.Parse(Console.ReadLine());",1577],["return number;",1487],["// Send an SMS through the SMS provider to verify the phone number",1456],["/// <param name=\"start\">Row number at which to start reading, the first row is 0.</param>",1404]]},{"word":"o","context":[["return o;",5309],["if (o == null)",4444],["object o = null;",3657],["object o = LuaScriptMgr.GetLuaObject(L, 1);",3139],["o = ToLua.ToObject(L, 1);",2288],["//  {o)xxx|===============-   #   -===============|xxx(o}",2090],["//  {o)xxx|===============-   #   -===============|xxx(o}",2090],["public override bool Equals(object o)",1854],["if (o != null)",1824],["object o;",1811]]},{"word":"obj","context":[["return ((System.Drawing.Bitmap)(obj));",113934],["public override bool Equals(object obj)",51268],["if (obj == null)",16084],["return obj;",11656],["return ((byte[])(obj));",7000],["public virtual bool Equals(object obj) {}",6505],["if (ReferenceEquals(null, obj)) return false;",6165],["if (obj != null)",5283],["/// <param name=\"obj\"></param>",5273],["if (ReferenceEquals(this, obj)) return true;",5205]]},{"word":"object","context":[["object[] paramsArray = null;",55440],["public override bool Equals(object obj)",51268],["protected void Page_Load(object sender, EventArgs e)",31439],["if (object.ReferenceEquals(resourceMan, null)) {",31017],["object[] paramsArray = Invoker.ValidateParamsArray(value);",27376],["Dictionary<string, object> tracingParameters = new Dictionary<string, object>();",21309],["Dictionary<string, object> tracingParameters = new Dictionary<string, object>();",21309],["private object[] results;",16051],["///<param name=\"parentObject\">object there has created the proxy</param>",15036],["/// <returns>The task object representing the asynchronous operation.</returns>",11150]]},{"word":"objects","context":[["// Create HTTP transport objects",22333],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// Returns true if objects are equal",2008],["/// <param name=\"sampleObjects\">The sample objects.</param>",1445],["/// Sets the objects that will be used by the formatters to produce sample requests/responses.",1432],["/// Gets the objects that are serialized as samples by the supported formatters.",1416],["/// Gets the objects that are used directly as samples for certain actions.",1416],["// Default factory for sample objects",1075],["/// Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,",1062],["[System.Xml.Serialization.XmlTypeAttribute(Namespace=\"urn:objects.ws.rightnow.com/v1_2\")]",986]]},{"word":"of","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Version information for an assembly consists of the following four values:",249312],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["/// the contents of this method with the code editor.",72166],["/// <param name=\"actionName\">Name of the action.</param>",17490],["/// <param name=\"controllerName\">Name of the controller.</param>",17416],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// <param name=\"sender\">The source of the event.</param>",12667]]},{"word":"offset","context":[["int offset = 0;",5198],["long offset = (pageNumber - 1) * 10;",4806],["public override int Read(byte[] buffer, int offset, int count)",4612],["public override void Write(byte[] buffer, int offset, int count)",4563],["public override long Seek(long offset, SeekOrigin origin)",4109],["sql.Append(\"OFFSET @0\", offset);",3527],["/// <param name=\"offset\"></param>",2941],["if (offset < 0)",2719],["return offset;",2708],["offset++;",2082]]},{"word":"on","context":[["// COM, set the ComVisible attribute to true on that type.",238633],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["// Disable the \"could hide other member\" warning, can happen on certain properties.",6739],["// For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862",4981],["/// The name of the database on which queries are being executed to.",3508],["/// on <paramref name=\"context\"/>.",3396],["///<para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:",3380],["///<para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:",3380],["// For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864",2916],["// Note: For instructions on enabling IIS6 or IIS7 classic mode,",2678]]},{"word":"one","context":[["/// <param name=\"message\">A <see langword=\"string\" /> containing one format item.</param>",2854],["// Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType",2551],["// if one failed, verify the other did, too",2248],["// Ignore any problems encountered in the factory; go on to the next one (if any).",1075],["\"Use the [ModelName] attribute to change the model name for at least one of the types so that it has a unique name.\",",1065],["/// one using <see cref=\"DefaultSampleObjectFactory\"/> (which wraps an <see cref=\"ObjectGenerator\"/>) and other",1062],["/// The method should be non-static and conform to one of the supported signatures:",980],["/// Indicates that the function argument should be string literal and match one",873],["///   Converts values from one scale to another scale.",784],["/// auto incremented primary key if it has one.",707]]},{"word":"only","context":[["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run",1675],["// Do the sample generation based on formatters only if an action doesn't return an HttpResponseMessage.",1431],["/// only be called from the constructor of a class.</para>",1200],["// If parameterDescriptor is null, this is an undeclared route parameter which only occurs",1089],["// since automatic handling will fail and GeneratePageResult handles only a single type.",1084],["// Display member only if all the followings are true:",1074],["throw new ArgumentException(\"Can only copy to an object of the same type\", \"other\");",1032],["* of those above. If you wish to allow use of your version of this file only",926],["/// <summary>For internal use only.</summary>",888]]},{"word":"open","context":[["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["* DAWN OF LIGHT - The first free open source DAoC server emulator",3973],["/// will be used such as when the application is launched to open a specific file.",3257],["// Better CMS is a publishing focused and developer friendly .NET open source CMS.",1997],["/// will be used when the application is launched to open a specific file, to display",1996],["contained within this library is a derivative of the open source Object Oriented",1487],["///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>",1365],["// classes for your model, open the model in the designer, right-click on the designer surface, and",1065],["// is open in the designer.",1065]]},{"word":"operation","context":[["/// Thrown when the operation returned an invalid status code",11459],["/// <returns>The task object representing the asynchronous operation.</returns>",11150],["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],["///         operation.</returns>",5426],["throw new Exception(\"The method or operation is not implemented.\");",4244],["/// asynchronous operation failed, the response body includes the HTTP",3502],["/// the asynchronous operation succeeded, the response body includes",3496],["/// The operation was canceled via the cancellation token.",3176],["/// operation, indicating whether it has succeeded, is inprogress, or",3073],["/// <returns>An <see cref=\"ICancellableAsyncResult\"/> that references the asynchronous operation.</returns>",2993]]},{"word":"operations","context":[["/// <param name='operations'>",39131],["/// The operations group for this extension method.",24979],["/// A standard service response for long running operations.",2410],["/// The operations group for this extension method",1442],["/// Releases unmanaged resources and performs other cleanup operations before the",582],["/// operations.",456],["/// The Azure Data Lake Store account to execute filesystem operations on.",350],["return operations;",277],["operations",273],["/// Represents all the operations for operating on Azure SQL Database",249]]},{"word":"operator","context":[["/// The result of the operator.",2020],["/// <returns>The result of the operator.</returns>",1949],["/// Implements the operator ==.",935],["/// Implements the operator !=.",926],["/// Implements the operator *.",355],["/// Implements the operator /.",307],["public static implicit operator int (Conv C)",261],["/// Implements the operator &lt;.",253],["///<summary>The default operator for query string query (AND or OR)</summary>",247],["/// Implements the operator &gt;.",246]]},{"word":"option","context":[["// with the /str option, or rebuild your VS project.",38199],["// This is similar to the RememberMe option when you log in.",1774],["//   (*) Delay Signing is an advanced option - see the Microsoft .NET Framework",1298],["CreateCompilationWithMscorlib(text, options: option).VerifyDiagnostics();",756],["if (option == null)",660],["CreateCompilationWithMscorlib(text, options: option).VerifyDiagnostics(",658],["// avec l'option /str ou régénérez votre projet VS.",623],["switch (option)",604],["if (option != null)",377],["CSharpCompilationOptions option = commonoption.WithSpecificDiagnosticOptions(warnings);",359]]},{"word":"options","context":[["if (options == null)",2973],["CreateCompilationWithMscorlib(text, options: TestOptions.UnsafeReleaseDll).VerifyDiagnostics(",2702],["var dataProtectionProvider = options.DataProtectionProvider;",2680],["if (options != null)",2464],["return options;",2426],["/// <param name=\"options\">The options.</param>",2293],["/// <param name=\"options\">The options.</param>",2293],["_options = options;",2147],["options: TestOptions.DebugDll,",2107],["/// <param name=\"options\">Options for changing the API response</param>",2016]]},{"word":"or","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// class via a tool like ResGen or Visual Studio.",38476],["// with the /str option, or rebuild your VS project.",38199],["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* Redistribution and use in source and binary forms, with or without",16512],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792]]},{"word":"order","context":[["//In order to begin building localizable applications, set",8486],["if (order == null)",1943],["// In order to sign your assembly you must specify a key to use. Refer to the",1296],["//   (*) In order to create a KeyFile, you can use the sn.exe (Strong Name) utility.",1227],["for (var i = 0; i < order; i++)",1176],["// Sort the rest based on alphabetic order of the documentation",1075],["/// Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,",1062],["/// stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.",1033],["/// <param name=\"order\">Matrix order.</param>",1017],["/// <param name=\"order\">Matrix order.</param>",1017]]},{"word":"org","context":[["// http://esper.codehaus.org                                                          /",5269],["global::org.xmlvm._nElement _r0;",5117],["// This file is part of OpenPetra.org.",4020],["global::org.xmlvm._nElement _r1;",3548],["global::org.xmlvm._nElement _r2;",2862],["any1.Namespace = \"http://www.w3.org/2001/XMLSchema\";",2589],["global::org.xmlvm._nElement _r3;",2114],["* This file was automatically generated by SWIG (http://www.swig.org).",2088],["((global::java.util.regex.IntArrHash) _r0_o).put((int) _r1.i, (global::org.xmlvm._nArrayAdapter<int>) _r2_o);",2032],["//      This code was generated by SpecFlow (http://www.specflow.org/).",1762]]},{"word":"other","context":[["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["*       documentation and/or other materials provided with the distribution.",13352],["if (other == null)",10822],["//   and/or other materials provided with the distribution.",8001],["// Disable the \"could hide other member\" warning, can happen on certain properties.",6739],["and/or other materials provided with the distribution.",3822],["if (other == null) {",3445],["public override bool Equals(object other) {",3297],["base.MergeFrom(other);",3244],["this.MergeUnknownFields(other.UnknownFields);",3056]]},{"word":"otherwise","context":[["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["// otherwise, verify the contents array",2248],["/// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>",1464],["/// <returns>true if can serialize and save into file; otherwise, false</returns>",1291],["/// An exception is thrown otherwise.",1280],["/// <returns>True if resolved sucessfully, false otherwise</returns>",1268],["/// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>",1116],["/// <c>false</c> otherwise.</returns>",969],["/// true if the current object is equal to the <paramref name=\"other\"/> parameter; otherwise, false.",887],["/// True if the cursor was positioned successfully, false otherwise.",856]]},{"word":"out","context":[["out strError);",12082],["checkType(l,2,out v);",7787],["checkType(l,2,out a1);",6366],["checkType(l,1,out a1);",6170],["out string strError)",5106],["checkType(l,2,out a2);",4470],["checkType(l,3,out a2);",2894],["while (input.ReadTag(out tag, out field_name)) {",2854],["while (input.ReadTag(out tag, out field_name)) {",2854],["checkType(l,3,out a3);",2582]]},{"word":"output","context":[["return output;",11210],["Assert.Contains(\"warning CS8032\", output, StringComparison.Ordinal);",3087],["UnknownFields.WriteTo(output);",3049],["public void WriteTo(pb::CodedOutputStream output) {",2931],["public override void WriteTo(pb::ICodedOutputStream output) {",2854],["/// <param name=\"exception\">output Exception value if deserialize failed</param>",2580],["return output.ToString();",2492],["output.WriteLine();",1912],["output.WriteSpace();",1844],["StringBuilder output = new StringBuilder();",1789]]},{"word":"override","context":[["public override string ToString()",127251],["protected override void Dispose(bool disposing)",93650],["public override int GetHashCode()",63011],["public override bool Equals(object obj)",51268],["public override void Serialize( GenericWriter writer )",25467],["public override void Deserialize( GenericReader reader )",23836],["public override void Deserialize(GenericReader reader)",20942],["public override void Serialize(GenericWriter writer)",19558],["public override string ToString() {",17000],["public override string Name",14228]]},{"word":"owner","context":[["/// <param name=\"owner\">The owner of the repository</param>",6710],["/// <param name=\"owner\">The owner of the repository</param>",6710],["Ensure.ArgumentNotNullOrEmptyString(owner, \"owner\");",3177],["Ensure.ArgumentNotNullOrEmptyString(owner, \"owner\");",3177],["this.owner = owner;",1873],["this.owner = owner;",1873],["_owner = owner;",1847],["m_Owner = owner;",1457],["// <owner current=\"true\" primary=\"true\">[....]</owner>",1311],["// <owner current=\"true\" primary=\"true\">[....]</owner>",1311]]},{"word":"p","context":[["return p;",9103],["/// <p>",7990],["/// </p>",7857],["* <p>",4190],["if (p != null)",3982],["/// <p/>",3451],["if (p == null)",2944],["IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);",2474],["IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);",2474],["select p;",2321]]},{"word":"packet","context":[["creature.Client.Send(packet);",1522],["return packet;",1507],["/// <param name=\"packet\"></param>",1169],["packet.WriteGuid(\"Guid\", guid);",950],["packet.ResetBitReader();",919],["var creature = client.GetCreatureSafe(packet.Id);",901],["packet.PutByte(0);",801],["/// <param name=\"e\">The EventArgs object containing the packet data</param>",744],["client.Send(packet);",721],["/// <summary>Process an incoming packet and raise the appropriate events</summary>",653]]},{"word":"page","context":[["//(used if a resource is not found in the page,",17306],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["// Create a Frame to act as the navigation context and navigate to the first page",5190],["// When the navigation stack isn't restored navigate to the first page,",4932],["// configuring the new page by passing required information as a navigation",4927],["/// <param name=\"pageNumber\">Enter the page number to produce the resultset.</param>",3551],["/// <returns>Returns the requested page from the collection using the supplied filters.</returns>",3255],["/// Invoked when Navigation to a certain page fails",3247],["/// The help page will use this information to produce more accurate response samples.",2860],["/// The help page will use this information to produce more accurate request samples.",2860]]},{"word":"para","context":[["/// </para>",166711],["/// <para>",164058],["/// <para/>",16335],["///    <para>[To be supplied.]</para>",11568],["///    <para>[To be supplied.]</para>",11568],["///    <para>",11491],["///    </para>",11459],["///   <para>",9763],["///     <para>",9724],["///     </para>",9690]]},{"word":"param","context":[["/// </param>",788655],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["/// <param name='cancellationToken'>",57619],["/// <param name=\"e\"></param>",41186],["/// <param name=\"e\"></param>",41186],["/// <param name='operations'>",39131],["/// <param name=\"sender\"></param>",36667],["/// <param name=\"sender\"></param>",36667],["/// <param name='customHeaders'>",26769]]},{"word":"parameter","context":[["/// <param name=\"parameterNames\">The parameter names.</param>",11513],["/// Thrown when a required parameter is null",7948],["public object Convert(object value, Type targetType, object parameter, CultureInfo culture)",5679],["public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)",5592],["// parameter",4965],["public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038],["public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)",3038],["public object Convert(object value, Type targetType, object parameter, string language)",3032],["public bool CanExecute(object parameter)",3010],["public object ConvertBack(object value, Type targetType, object parameter, string language)",2978]]},{"word":"parameters","context":[["/// <param name='parameters'>",10488],["if (parameters == null)",5114],["tracingParameters.Add(\"parameters\", parameters);",3832],["tracingParameters.Add(\"parameters\", parameters);",3832],["throw new ArgumentNullException(\"parameters\");",3218],["return parameters;",3107],["// parameters:",3093],["SqlParameter[] parameters = {",2428],["if (parameters != null)",2271],["/// <param name=\"parameters\"></param>",2188]]},{"word":"paramref","context":[["/// on <paramref name=\"context\"/>.",3396],["/// <returns>The specified <paramref name=\"validator\"/> instance.</returns>",2060],["/// true if the current object is equal to the <paramref name=\"other\"/> parameter; otherwise, false.",887],["/// <param name=\"order\">The order of the square matrix <paramref name=\"a\"/>.</param>",868],["///   vector as <paramref name=\"value\"/> to perform the operation in place.</param>",864],["/// <param name=\"amount\">Value between 0 and 1 indicating the weight of <paramref name=\"end\"/>.</param>",757],["/// <typeparam name=\"TSource\">The type of elements of <paramref name=\"source\"/>.</typeparam>",743],["/// <paramref name=\"source\"/> is a null reference (Nothing in Visual Basic).",702],["/// <exception cref=\"ArgumentNullException\">The <paramref name=\"method\"/> is null.</exception>",683],["/// <exception cref=\"System.Data.DataException\">The <paramref name=\"transactionManager\"/> is not open.</exception>",648]]},{"word":"params","context":[["/// <param name=\"params\"></param>",2353],["// query params",1944],["// verify required params are set",1861],["throw new ApiException(400, \"missing required params\");",1856],["/// <item><c>NotifyChanged(params string[])</c></item>",974],["public bool Log(LogLevel logLevel, Func<string> messageFunc, Exception exception, params object[] formatParameters)",960],["bool Dummy(params object[] x) {return true;}",832],["/// public void ShowError(string message, params object[] args) { /* do something */ }",774],["public void WriteLine(string format, params object[] args)",668],["params object[] args)",640]]},{"word":"paramsArray","context":[["object[] paramsArray = null;",55440],["object[] paramsArray = Invoker.ValidateParamsArray(value);",27376],["object returnItem = Invoker.PropertyGet(this, \"Parent\", paramsArray);",1904],["object[] paramsArray = new object[0];",1828],["object returnItem = Invoker.PropertyGet(this, \"Application\", paramsArray);",1806],["object[] paramsArray = Invoker.ValidateParamsArray(pEvtObj);",1406],["object[] paramsArray = Invoker.ValidateParamsArray(index);",1328],["object returnItem = Invoker.MethodReturn(this, \"Add\", paramsArray);",1133],["object returnItem = Invoker.PropertyGet(this, \"Creator\", paramsArray);",1115],["object[] paramsArray = new object[1];",912]]},{"word":"parent","context":[["if (parent != null)",4253],["this.parent = parent;",3847],["this.parent = parent;",3847],["if (parent == null)",3211],[": base(parent, invokingState)",3147],["_parent = parent;",2945],["return parent;",2175],["Parent = parent;",2100],[": base(parent)",1943],["parent = parent.Parent;",1762]]},{"word":"part","context":[["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["This file is part of dnSpy",6807],["This file is part of MixERP.",5354],["// This file is part of OpenPetra.org.",4020],["* This file is part of Ext.NET.",3847],["// Math.NET Numerics, part of the Math.NET Project",3558],["/* This file is part of the db4o object database http://www.db4o.com",3254],["This file is part of de4dot.",2803],["// This file is part of the Kaltura Collaborative Media Suite which allows users",2459],["if (part != null)",1828]]},{"word":"partial","context":[["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {",16102],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase",13281],["public partial class App : Application",11069],["public partial class Startup",7216],["partial void OnCreated();",7034],["public partial class MainWindow : Window",6811],["partial class Form1",5822],["public partial class Form1 : Form",5795],["partial void OnLoaded();",5214],["partial void OnValidate(System.Data.Linq.ChangeAction action);",4617]]},{"word":"password","context":[["[Display(Name = \"New password\")]",6254],["[Display(Name = \"Confirm new password\")]",6254],["[Compare(\"NewPassword\", ErrorMessage = \"The new password and confirmation password do not match.\")]",6121],["[Compare(\"NewPassword\", ErrorMessage = \"The new password and confirmation password do not match.\")]",6121],["[Display(Name = \"Confirm password\")]",5974],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["[Compare(\"Password\", ErrorMessage = \"The password and confirmation password do not match.\")]",5843],["[Display(Name = \"Current password\")]",3779],["message == ManageMessageId.ChangePasswordSuccess ? \"Your password has been changed.\"",2721],[": message == ManageMessageId.SetPasswordSuccess ? \"Your password has been set.\"",2685]]},{"word":"path","context":[["ParameterType = \"path\",",13892],["return path;",10751],["///<summary>Gets the REST path.</summary>",10082],["if (path == null)",5809],["/// <param name=\"path\"></param>",4751],["/// <param name=\"path\">",4629],["/// <param name=\"path\">The path.</param>",3774],["/// <param name=\"path\">The path.</param>",3774],["if (File.Exists(path))",3573],["// The path to the documents directory.",3288]]},{"word":"point","context":[["/// The main entry point for the application.",15420],["// This is the main entry point of the application.",2761],["return point;",1122],["/// <param name=\"point\"></param>",997],["///   this distribution evaluated at point <c>x</c>.",983],["/// <param name=\"x\">A single point in the distribution range.</param>",799],["/// <param name=\"point\">The point.</param>",778],["/// <param name=\"point\">The point.</param>",778],["// Entry point for the application.",611],["/// <param name=\"scalar\">Floating-point scalar</param>",498]]},{"word":"pos","context":[["pos++;",6938],["int pos = 0;",4007],["return pos;",2429],["pos += 4;",1742],["pos += 2;",1404],["/// <param name=\"pos\"></param>",1345],["pos = 0;",1232],["int pos;",1159],["if (pos < 0)",815],["++pos;",759]]},{"word":"position","context":[["return position;",2713],["Position = position;",2416],["position++;",2254],["/// <param name=\"position\"></param>",1652],["int position,",1609],["int position = 0;",1342],["this.position = position;",1321],["this.position = position;",1321],["/// <param name=\"position\">",1225],["/// <param name=\"position\">The position.</param>",1151]]},{"word":"pragma","context":[["#pragma warning disable 1591",13764],["#pragma warning restore 1591",10111],["#pragma warning disable 0169",9315],["#pragma warning disable 0649",7913],["#pragma warning disable 0414",7838],["#pragma warning restore",7534],["#pragma warning disable 0108",6852],["#pragma warning disable",6784],["#pragma warning disable 0067",6755],["#pragma warning disable 0626",6743]]},{"word":"private","context":[["private void InitializeComponent()",79069],["private System.ComponentModel.IContainer components = null;",72616],["private static global::System.Resources.ResourceManager resourceMan;",45167],["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["private set;",37428],["private System.Windows.Forms.Label label1;",25419],["private set",24212],["private System.Windows.Forms.Label label2;",18818],["private object[] results;",16051],["private System.Windows.Forms.Label label3;",14122]]},{"word":"process","context":[["/// <param name=\"e\">Details about the launch request and process.</param>",4776],["process.Start();",2720],["process.WaitForExit();",2552],["process.Kill();",1025],["process.StartInfo.UseShellExecute = false;",722],["Process process = new Process();",678],["// Changes to this file must follow the http://aka.ms/api-review process.",677],["process.BeginOutputReadLine();",653],["/// navigation and process lifetime management logic should be placed.",632],["return process;",626]]},{"word":"project","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// with the /str option, or rebuild your VS project.",38199],["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["// Change them to the values specific to your project.",8525],["//the line below to match the UICulture setting in the project file.",8484],["if (project == null)",2032],["Many thanks to the OGRE team for maintaining such a high quality project.",1486],["Project = project;",1441],["This file is part of the fyiReporting RDL project.",1422]]},{"word":"properties","context":[["// Disable the \"could hide other member\" warning, can happen on certain properties.",6739],["#region properties",4195],["// To protect from overposting attacks, please enable the specific properties you want to bind to, for",3131],["foreach (PropertyInfo property in properties)",3051],["#region Public properties",2940],["context.HttpContext.GetOwinContext().Authentication.Challenge(properties, LoginProvider);",2146],["properties.Dictionary[XsrfKey] = UserId;",2115],["return properties;",1986],["foreach (var property in properties)",1783],["var properties = new AuthenticationProperties { RedirectUri = RedirectUri };",1571]]},{"word":"property","context":[["///   Overrides the current thread's CurrentUICulture property for all",38271],["///          procedure using the AsyncState property.</param>",6544],["if (property != null)",3094],["foreach (PropertyInfo property in properties)",3051],["if (property == null)",3008],["return property;",2682],["/// <param name=\"propertyName\">Name of the property.</param>",2451],["foreach (var property in properties)",1783],["if (property.CanWrite)",1635],["/// <param name=\"property\">The property.</param>",1577]]},{"word":"propertyName","context":[["propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));",12472],["protected void RaisePropertyChanged(string propertyName) {",12155],["this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));",5327],["protected virtual void SendPropertyChanged(String propertyName)",4234],["PropertyChanged(this, new PropertyChangedEventArgs(propertyName));",2989],["/// <param name=\"propertyName\">Name of the property.</param>",2451],["handler(this, new PropertyChangedEventArgs(propertyName));",1680],["protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)",1536],["PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));",1474],["protected virtual void OnPropertyChanged(string propertyName)",1399]]},{"word":"protected","context":[["protected override void Dispose(bool disposing)",93650],["protected void Page_Load(object sender, EventArgs e)",31439],["protected virtual void Dispose(bool disposing)",14193],["protected void RaisePropertyChanged(string propertyName) {",12155],["protected void Application_Start()",11046],["protected override void InitParameters()",10678],["protected override void OnNavigatedTo(NavigationEventArgs e)",6346],["protected override void ProcessRecord()",5792],["protected global::System.Web.UI.HtmlControls.HtmlForm form1;",5563],["protected override void Dispose(bool disposing) {",5267]]},{"word":"provided","context":[["*       documentation and/or other materials provided with the distribution.",13352],["//   and/or other materials provided with the distribution.",8001],["*     materials provided with the distribution.",4163],["and/or other materials provided with the distribution.",3822],["//     and/or other materials provided with the distribution.",2766],["This program is provided to you under the terms of the Microsoft Public",2503],["// documentation and/or other materials provided with the distribution.",2325],["// terms of your choice, provided that you also meet, for each linked",2109],["// in the documentation and/or other materials provided with the",1930],["documentation and/or other materials provided with the distribution.",1717]]},{"word":"provider","context":[["if (provider == null)",2667],["public ActionResult ExternalLogin(string provider, string returnUrl)",2658],["// and to use a cookie to temporarily store information about a user logging in with a third party login provider",2558],["// Get the information about the user from the external login provider",2462],["var unitOfWork = provider.GetUnitOfWork();",2421],["// Request a redirect to the external login provider to link a login for the current user",2402],["// Request a redirect to the external login provider",2360],["LoginProvider = provider;",2208],["public ChallengeResult(string provider, string redirectUri, string userId)",2186],["public ActionResult LinkLogin(string provider)",2137]]},{"word":"public","context":[["public override string ToString()",127251],["public void Dispose()",82640],["public string Name { get; set; }",82260],["public override int GetHashCode()",63011],["public override bool Equals(object obj)",51268],["public string Name",41989],["public static void Main()",39282],["public int Id { get; set; }",32950],["public override void Serialize( GenericWriter writer )",25467],["public string Email { get; set; }",24278]]},{"word":"publish","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["publish, distribute, sublicense, and/or sell copies of the Data, and to",1940],["//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1913],["//     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1721]]},{"word":"q","context":[["return q;",2796],["var q =",1148],["throw new ArgumentNullException(\"q\");",983],["if (q == null)",749],["writeAt = q;",693],["var list = q.ToList();",688],["case 'q':",628],["inputName1: \"p.cs\", inputName2: \"q.cs\",",583],["write = q;",504],[".Query(q => q",460]]},{"word":"query","context":[["ParameterType = \"query\",",17272],["return query;",4934],["// query params",1944],["ParallelQuery<int> query = labeled.Item;",1921],["/// <param name=\"query\">The query.</param>",1707],["/// <param name=\"query\">The query.</param>",1707],["/// <param name=\"options\">The query and header options for the request.</param>",1702],["/// <param name=\"query\">",1619],["if (query == null)",1461],["string query = urlParts[1];",1414]]},{"word":"r","context":[["return r;",14184],["case '\\r':",3405],["WriteLiteral(\"\\r\\n\");",2583],["case 'r':",2127],["Random r = new Random();",1901],["WriteLiteral(\">\\r\\n\");",1838],["if (r == null)",1585],["\"\\r\\n\" +",1467],["/// <param name=\"r\"></param>",1390],["r.Close();",1202]]},{"word":"range","context":[["RangeAttribute range = (RangeAttribute)a;",1051],["return String.Format(CultureInfo.CurrentCulture, \"Range: inclusive between {0} and {1}\", range.Minimum, range.Maximum);",1050],["return String.Format(CultureInfo.CurrentCulture, \"Range: inclusive between {0} and {1}\", range.Minimum, range.Maximum);",1050],["/// <param name=\"x\">A single point in the distribution range.</param>",799],["return range;",615],["/// <param name=\"range\"></param>",500],["/// <param name=\"nearestStart\">an out parameter receiving the start index of the range that was found.",440],["float range,",412],["throw new IndexOutOfRangeException(\"index out of range: index=\" + index);",398],["new attr_Obj(\"range\", 0, 0, \"0\", \"0\", \"0\", \"positive\"),",385]]},{"word":"re","context":[["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["_localctx.exception = re;",3147],["catch (RecognitionException re) {",3134],["ReportError(re);",2517],["catch (RecognitionException re)",2453],["Recover(input,re);",2394],["_errHandler.Recover(this, re);",2259],["_errHandler.ReportError(this, re);",2259],["self shouldnt: [re compile] raise: Error.",1694],["| re re2 |",1606]]},{"word":"read","context":[["///<para> - VoidResponse, no deserialization, response stream never read and closed </para>",4536],["/// read",2582],["///<para> - VoidResponse, no deserialization, response stream never read and closed</para>",2224],["int read;",1544],["return read;",894],["/// <param name=\"existingValue\">The existing value of object being read.</param>",872],["/// <param name=\"reader\">The <see cref=\"JsonReader\"/> to read from.</param>",802],["int read = 0;",783],["ever read sources, credits must appear in the documentation.",783],["explicit claim or by omission.  Since few users ever read sources,",781]]},{"word":"reader","context":[["int version = reader.ReadInt();",30524],["base.Deserialize( reader );",25470],["public override void Deserialize( GenericReader reader )",23836],["public override void Deserialize(GenericReader reader)",20942],["base.Deserialize(reader);",20611],["reader.Read();",18616],["Assert.IsTrue(reader.Read());",17165],["while (reader.Read())",15292],["reader.Close();",13595],["reader.ReadInt();",5320]]},{"word":"readonly","context":[["private readonly ILogger _logger;",5137],["private readonly string _name;",3718],["private static readonly ILog m_log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);",3604],["private readonly Google.Apis.Services.IClientService service;",3132],["private readonly IFileSystem _fileSystem;",2090],["public readonly string Name;",2079],["private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);",2003],["private readonly string name;",1927],["private readonly IContentManager _contentManager;",1679],["private static readonly Dictionary<Type, Func<long, object>> DefaultGenerators = InitializeGenerators();",1432]]},{"word":"ref","context":[["{ return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }",7756],["base.WndProc(ref m);",3831],["protected override void WndProc(ref Message m)",2298],["inc(ref ValuesA[reg_direct]);",2016],["inc(ref ValuesB[reg_direct]);",2016],["NextToken(json, ref index);",1866],["protected override bool ProcessCmdKey(ref Message msg, Keys keyData)",1230],["this.Reset(ref resetPoint);",1225],["return base.ProcessCmdKey(ref msg, keyData);",1167],["/// <item><c>SetProperty(ref myField, value, \"Property\")</c></item>",973]]},{"word":"reference","context":[["// ISSUE: reference to a compiler-generated field",1846],["// ISSUE: explicit reference operation",1737],["return reference;",1469],["// The object has been created already, just return it. This will handle the circular reference case.",1433],["/// Gets a reference to the",1418],["/// <returns>A reference to the current <see cref=\"ConfigurableBootstrapperConfigurator\"/>.</returns>",1238],["/// A <see cref=\"GameObject\"/> for a reference to the GameObject that holds the \"oncomplete\" method.",1200],["/// A <see cref=\"GameObject\"/> for a reference to the GameObject that holds the \"onupdate\" method.",1200],["/// A <see cref=\"GameObject\"/> for a reference to the GameObject that holds the \"onstart\" method.",1200],["if (reference != null)",817]]},{"word":"regenerated","context":[["//     the code is regenerated.",128874],["//     Manual changes to this file will be overwritten if the code is regenerated.",10815],["// code is regenerated.",10220],["// regenerated.",9888],["//    Manual changes to this file will be overwritten if the code is regenerated.",5316],["//      the code is regenerated.",4164],["// Any changes made will be lost if regenerated.",2360],["//     Changes to this file will be lost if the code is regenerated.",688],["// the code is regenerated.",575],["//\t\t\tcause incorrect behavior and will be lost if the code is regenerated.",152]]},{"word":"region","context":[["#region Properties",77633],["#region Constructors",56608],["#region Windows Form Designer generated code",54340],["#region Methods",50383],["#region Fields",38348],["#region Public Methods",21051],["#region Constructor",20776],["#region Public Properties",17205],["#region Component Designer generated code",15792],["#region Private Methods",14229]]},{"word":"remarks","context":[["/// <remarks>",598431],["/// </remarks>",592851],["/// <remarks/>",506444],["/// <remarks></remarks>",12544],["/// <remarks></remarks>",12544],["/// <remarks />",11985],["///</remarks>",4840],["///<remarks>",3218],["/// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>",2584],["/// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>",2584]]},{"word":"remove","context":[["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["remove",18826],["remove { }",13714],["remove {",4675],["/// remove",1382],["remove { CommandManager.RequerySuggested -= value; }",792],["// User does not have a password so remove any validation errors caused by a missing OldPassword field",545],["/// <param name=\"key\">The key of the element to remove.</param>",466],["if (remove)",460],["// Remove session state and remove the frame from the list of frames whose navigation",439]]},{"word":"repository","context":[["/// <param name=\"owner\">The owner of the repository</param>",6710],["/// <param name=\"name\">The name of the repository</param>",6266],["var repository = new InMemoryRepository();",2870],["/// <param name=\"repositoryId\">The Id of the repository</param>",2557],["repository.Add(user);",2406],["repository,",2321],["_repository = repository;",1915],["repository.Add(room);",1304],["* gitter - VCS repository management tool",1275],["this.repository = repository;",1221]]},{"word":"request","context":[["/// Headers that will be added to request.",13974],["/// The headers that will be added to request.",12749],["return request;",9416],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["/// request ID.",6069],["/// <returns>The request object to send.</returns>",5484],["/// <param name=\"sender\">The source of the suspend request.</param>",5254],["/// <param name=\"e\">Details about the suspend request.</param>",5254]]},{"word":"required","context":[["/// Thrown when a required parameter is null",7948],["// Disable the \"new keyword not required\" warning.",6739],["// configuring the new page by passing required information as a navigation",4927],["// oauth required",2716],["// authentication (PureCloud Auth) required",2148],["// verify required params are set",1861],["throw new ApiException(400, \"missing required params\");",1856],["// CODEGEN: This call is required by the ASP.NET Web Form Designer.",1801],["appreciated but is not required.",1707],["element.RemoveAttribute(\"required\");",1289]]},{"word":"res","context":[["return res;",29149],["Ensure.ZeroResult(res);",3019],["if (res != CUResult.Success) throw new CudaException(res);",2003],["if (res != CUResult.Success) throw new CudaException(res);",2003],["res.Messages.AssertEqual(",1799],["var res = scheduler.Start(() =>",1648],["int res;",1103],["if (res != null)",1029],["int res = 0;",985],["if (res == null)",925]]},{"word":"resource","context":[["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["///   resource lookups using this strongly typed resource class.",38276],["///   resource lookups using this strongly typed resource class.",38276],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["// aapt resource value: 0",37285],["// aapt resource value: 1",32367],["// aapt resource value: 2",25848],["// aapt resource value: 3",19849],["// aapt resource value: 4",18508],["//(used if a resource is not found in the page,",17306]]},{"word":"resourceCulture","context":[["return resourceCulture;",45540],["resourceCulture = value;",45538],["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["return ResourceManager.GetString(\"ApplicationTitle\", resourceCulture);",1483],["return ResourceManager.GetString(\"ResourceLanguage\", resourceCulture);",1468],["return ResourceManager.GetString(\"ResourceFlowDirection\", resourceCulture);",1463],["return ResourceManager.GetString(\"AppBarButtonText\", resourceCulture);",1337],["return ResourceManager.GetString(\"AppBarMenuItemText\", resourceCulture);",1336],["return ResourceManager.GetString(\"Cancel\", resourceCulture);",417],["return ResourceManager.GetString(\"Title\", resourceCulture);",300]]},{"word":"resourceMan","context":[["return resourceMan;",45550],["resourceMan = temp;",45479],["private static global::System.Resources.ResourceManager resourceMan;",45167],["if (object.ReferenceEquals(resourceMan, null)) {",31017],["if ((resourceMan == null))",11826],["if (object.ReferenceEquals(resourceMan, null))",1436],["if ((resourceMan == null)) {",721],["private static ResourceManager resourceMan;",214],["private static System.Resources.ResourceManager resourceMan;",185],["if (ReferenceEquals(resourceMan, null)) {",140]]},{"word":"resources","context":[["/// Clean up any resources being used.",69697],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));",14622],["resources.ApplyResources(this, \"$this\");",5239],["/// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.",4114],["resources.ApplyResources(this.label1, \"label1\");",1678],["/// Provides access to string resources.",1350],["resources.ApplyResources(this.label2, \"label2\");",1259],["this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject(\"pictureBox1.Image\")));",1015],["resources.ApplyResources(this.label3, \"label3\");",982]]},{"word":"response","context":[["return response;",24026],["/// A response object containing the response body and response headers.",9294],["/// A response object containing the response body and response headers.",9294],["/// A response object containing the response body and response headers.",9294],["/// Thrown when unable to deserialize the response",6367],["/// A standard service response including an HTTP status code and",5861],["throw new SerializationException(\"Unable to deserialize the response.\", _responseContent, ex);",4756],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["///<para> - VoidResponse, no deserialization, response stream never read and closed </para>",4536],["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536]]},{"word":"result","context":[["return result;",331675],["if (result.Succeeded)",24438],["var result = serializer.Unpack( buffer );",16785],["Assert.That( result, Is.Not.Null );",16519],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["AddErrors(result);",13025],["if (result == null)",10883],["Assert.IsNotNull(result);",10504],["result = false;",10098],["bool result = false;",10039]]},{"word":"results","context":[["this.results = results;",16175],["this.results = results;",16175],["private object[] results;",16051],["return results;",10123],["object [] results = this.EndInvoke(asyncResult);",9210],["object[] results = this.EndInvoke(asyncResult);",5502],["return ((string)(results[0]));",3211],["return ((string)(this.results[0]));",2196],["/// search results, and so forth.",1998],["return ((string [])(results[0]));",1672]]},{"word":"ret","context":[["return ret;",86624],["pushValue(l,ret);",8241],["ret",6131],["ret = ret + 1;",3403],["ret = ret + 1;",3403],["IL_0006:  ret",3183],["bool ret = false;",2488],["ret = true;",2414],["bool ret = raw_ret;",2401],["int ret;",2118]]},{"word":"retVal","context":[["return retVal;",31785],["retVal = false;",31425],["bool retVal = true;",18272],["retVal = PosTest1() && retVal;",4162],["retVal = PosTest1() && retVal;",4162],["retVal = PosTest2() && retVal;",2401],["retVal = PosTest2() && retVal;",2401],["retVal};",2294],["retVal = PosTest3() && retVal;",1658],["retVal = PosTest3() && retVal;",1658]]},{"word":"return","context":[["return;",1310010],["return false;",1020274],["return true;",844737],["return null;",701948],["return result;",331675],["return this;",223951],["return 0;",208085],["return ((System.Drawing.Bitmap)(obj));",113934],["return 1;",110802],["return ret;",86624]]},{"word":"returnItem","context":[["if((null != returnItem) && (returnItem is MarshalByRefObject))",11606],["if((null != returnItem) && (returnItem is MarshalByRefObject))",11606],["return  returnItem;",11602],["ICOMObject newObject = Factory.CreateObjectFromComProxy(this, returnItem);",11468],["return NetRuntimeSystem.Convert.ToString(returnItem);",10344],["return NetRuntimeSystem.Convert.ToInt32(returnItem);",7601],["return NetRuntimeSystem.Convert.ToBoolean(returnItem);",7462],["int intReturnItem = NetRuntimeSystem.Convert.ToInt32(returnItem);",3778],["ICOMObject newObject = Factory.CreateObjectFromComProxy(this,returnItem);",3045],["object returnItem = Invoker.PropertyGet(this, \"Parent\", paramsArray);",1904]]},{"word":"returned","context":[["/// Thrown when the operation returned an invalid status code",11459],["var ex = new ErrorException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",5667],["///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>",2790],["var ex = new CloudException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",2575],["/// code returned for the Get Operation Status operation itself. If",2531],["var ex = new HttpOperationException(string.Format(\"Operation returned an invalid status code '{0}'\", statusCode));",1619],["/// code returned for the Get Operation Status operation itself.  If",965],["var ex = new HttpOperationException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",808],["/// Required. Location value returned by the Begin operation.",782],["/// returned.",682]]},{"word":"returns","context":[["/// <returns></returns>",530012],["/// <returns></returns>",530012],["/// </returns>",516185],["/// <returns>",502678],["/// <returns>The task object representing the asynchronous operation.</returns>",11150],["/// <returns>The task object representing the asynchronous operation.</returns>",11150],["/// <returns>this instance</returns>",7276],["/// <returns>this instance</returns>",7276],["/// <returns>The request object to send.</returns>",5484],["/// <returns>The request object to send.</returns>",5484]]},{"word":"right","context":[["return left.Equals(right);",3591],["return !left.Equals(right);",2547],["return Equals(left, right);",2490],["return !Equals(left, right);",2434],["return !(left == right);",2236],["/// <param name=\"right\"></param>",1682],["/// <param name=\"right\">The right.</param>",1462],["/// <param name=\"right\">The right.</param>",1462],["// classes for your model, open the model in the designer, right-click on the designer surface, and",1065],["return right;",1034]]},{"word":"root","context":[["return root;",3301],["if (root == null)",2464],["// Set the root visual to allow the application to render",1856],["/// <returns>The root frame of the Phone Application.</returns>",1827],["/// Provides easy access to the root frame of the Phone Application.",1804],["/// <param name=\"web\">Site to be processed - can be root web or sub site</param>",1420],["// Set the FlowDirection of all elements under the root frame based",1373],["if (root != null)",1330],["var root = tree.GetCompilationUnitRoot();",1209],["- All classes marked as \"partial\". Use the custom.cs in the root folder, to extend the classes.",1194]]},{"word":"row","context":[["if (row != null)",2973],["this.eventRow = row;",2699],["this.Rows.Add(row);",2696],["this.Rows.Remove(row);",2648],["foreach (DataRow row in table.Rows)",2634],["row.AcceptChanges();",2011],["return row;",1937],["Value = row[\"value\"].ToString()",1716],["Key = row[\"key\"].ToString(),",1716],["global::System.Data.DataRow row = rows[i];",1680]]},{"word":"rows","context":[["/// <param name=\"pageLength\">Number of rows to return.</param>",3568],["for (int i = 0; i < rows; i++)",2521],["return rows;",1852],["global::System.Data.DataRow row = rows[i];",1680],["for (int i = 0; (i < rows.Length); i = (i + 1)) {",1677],["if (rows > 0)",1349],["/// <returns>The number of rows affected.</returns>",1240],["allAddedRows.CopyTo(rows);",1124],["global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];",1120],["/// or use single attribute with rows separated by semicolon.<br/>",876]]},{"word":"run","context":[["///information about and functionality for the current test run.",3535],["/// Main method, to run this code example as a standalone application.",2244],["//Use ClassInitialize to run code before running the first test in the class",2111],["//Use ClassCleanup to run code after all tests in a class have run",2109],["//Use ClassCleanup to run code after all tests in a class have run",2109],["//Use TestCleanup to run code after each test has run",2094],["//Use TestCleanup to run code after each test has run",2094],["//Use TestInitialize to run code before running each test",2070],["// Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run",1675],["// Use TestCleanup to run code after each test has run",1673]]},{"word":"s","context":[["///   Overrides the current thread's CurrentUICulture property for all",38271],["return s;",16268],["return Task.Factory.StartNew((object s) =>",5576],["if (s == null)",4993],["// Contributor(s): (Open source contributors should list themselves and their modifications here).",3814],["if (s != null)",3533],["string s;",3165],["h => (s, e) => h(e),",2999],["/// <param name=\"s\"></param>",2921],["string s = \"\";",2237]]},{"word":"same","context":[["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as others, no need to verify",5990],["// either both should have failed the same way or they should both produce the same result",3123],["// either both should have failed the same way or they should both produce the same result",3123],["/// Indicates whether the current object is equal to another object of the same type.",1553],["throw new ArgumentException(\"Can only copy to an object of the same type\", \"other\");",1032],["/// Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)",881],["/// <param name=\"result\">The vector where the result should be stored. Pass the same",864],["catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException) // same error as above, no need to verify",772],["/// <returns>true if the value has been updated; false if aValue was the same as the previous value</returns>",644],["Such sublicense must be under the same terms and conditions of this Agreement.",631]]},{"word":"sample","context":[["return sample;",4471],["/// <param name=\"sample\">The sample request.</param>",2890],["/// <param name=\"sample\">The sample response.</param>",2890],["/// <param name=\"sample\">The sample request.</param>",2890],["/// <param name=\"sample\">The sample response.</param>",2890],["/// <param name=\"sampleDirection\">The value indicating whether the sample is for a request or for a response.</param>",2856],["sample = new InvalidSample(String.Format(",2816],["/// <param name=\"sample\">The sample.</param>",2544],["/// <param name=\"sample\">The sample.</param>",2544],["yield return sample;",1478]]},{"word":"sb","context":[["return sb.ToString();",43889],["StringBuilder sb = new StringBuilder();",33434],["var sb = new StringBuilder();",23824],["sb.AppendLine();",18638],["sb.Append(\")\");",4950],["sb.Append(\", \");",3976],["sb.Length = 0;",3129],["sb.Append(c);",3017],["sb.AppendLine(\"\t\t}\");",2972],["sb.AppendLine(\"\t\t{\");",2955]]},{"word":"schema","context":[["schema.Write(s2);",3541],["global::System.Xml.Schema.XmlSchema schema = null;",3540],["schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));",3516],["[System.Xml.Serialization.XmlTypeAttribute(Namespace=\"http://datex2.eu/schema/2/2_0\")]",1613],["/// The schema unqualified name of this PostgreSQL function.",1585],["/// The schema of this PostgreSQL function.",1585],["NamespaceURI = \"urn:http//www.placeholder-name-here.com/schema/\",",1200],["return schema;",1100],["if (schema == null)",1097],["/// There are no comments for Property Id in the schema.",765]]},{"word":"scope","context":[["/* scope: __dot42__ */",50878],["</scope>",5013],["scope.Complete();",1849],["<scope startOffset=\"\"0x0\"\" endOffset=\"\"0x2\"\">",891],["if (scope == null)",829],["return scope;",698],["scope,",513],["[SuppressMessage(\"Microsoft.Reliability\", \"CA2000:Dispose objects before losing scope\")]",466],["using (var scope = new TransactionScope())",442],["_scope = scope;",435]]},{"word":"sealed","context":[["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {",16102],["internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase",13281],["sealed partial class App : Application",4147],["public sealed partial class MainPage : Page",4034],["public sealed partial class App : Application",1574],["public sealed class ModelNameAttribute : Attribute",1071],["public sealed class StringFormatMethodAttribute : Attribute",1041],["public sealed class UsedImplicitlyAttribute : Attribute",1039],["public sealed class BaseTypeRequiredAttribute : Attribute",1035],["public sealed class LocalizationRequiredAttribute : Attribute",1032]]},{"word":"second","context":[["// Enables the application to remember the second login verification factor such as phone or email.",1776],["/// <param name=\"right\">The second value to compare.</param>",973],["/// <typeparam name=\"T2\">The second POCO type</typeparam>",936],["/// <param name=\"right\">The second instance.</param>",853],["/// <typeparam name=\"TArgument2\">The type of the second argument.</typeparam>",792],["/// <param name=\"argument2\">The second argument to format.</param>",780],["/// <typeparam name=\"T2\">The type of the second argument.</typeparam>",722],["// from executing a second time.",667],["/// <typeparam name=\"T2\">The type of the second parameter.</typeparam>",599],["/// <param name=\"arg2\">The second value, expected to be greater</param>",544]]},{"word":"see","context":[["/// <param name=\"config\">The <see cref=\"HttpConfiguration\"/>.</param>",21088],["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["* see COPYING.",10306],["/// <param name=\"api\">The <see cref=\"ApiDescription\"/>.</param>",6719],["/// <param name=\"e\">The <see cref=\"System.EventArgs\"/> instance containing the event data.</param>",5198],["* along with this program; see the file COPYING.  If not, write to",5076],["/// Returns a <see cref=\"System.String\"/> that represents this instance.",3191],["// more details see http://go.microsoft.com/fwlink/?LinkId=317598.",3185],["/// A <see cref=\"System.String\"/> that represents this instance.",3026],["/// <returns>An <see cref=\"ICancellableAsyncResult\"/> that references the asynchronous operation.</returns>",2993]]},{"word":"select","context":[["select new",6826],["select c;",2694],["select p;",2321],["/// Adds the specified select value to the request.",2016],["select",1848],["/// <param name=\"value\">The select value.</param>",1709],["select t;",1418],["select x;",1247],["// select 'Update Model from Database...', 'Generate Database from Model...', or 'Add Code Generation",1065],["select p);",1062]]},{"word":"self","context":[["return self;",2133],["self",1960],["checkValueType(l,1,out self);",1908],["checkType(l,1,out self);",1783],["self shouldnt: [re compile] raise: Error.",1694],["setBack(l,self);",1645],["var self = this;",1419],["public void Tick(Actor self)",1180],["self.CancelActivity();",1027],["UnityEngine.Animator self=(UnityEngine.Animator)checkSelf(l);",1019]]},{"word":"sell","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["publish, distribute, sublicense, and/or sell copies of the Data, and to",1940],["//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1913],["//     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1721]]},{"word":"sender","context":[["/// <param name=\"sender\"></param>",36667],["protected void Page_Load(object sender, EventArgs e)",31439],["/// <param name=\"sender\">The source of the event.</param>",12667],["/// <param name=\"sender\">",7153],["private void button1_Click(object sender, EventArgs e)",6705],["private void OnSuspending(object sender, SuspendingEventArgs e)",5404],["/// <param name=\"sender\">The source of the suspend request.</param>",5254],["/// <param name=\"sender\">The sender.</param>",5072],["/// <param name=\"sender\">The sender.</param>",5072],["/// The sender.",4053]]},{"word":"serializer","context":[["serializer.Pack( buffer, target );",16912],["var result = serializer.Unpack( buffer );",16785],["public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)",4655],["public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)",4195],["JsonSerializer serializer = new JsonSerializer();",2144],["/// <param name=\"serializer\">The calling serializer.</param>",1962],["/// <param name=\"serializer\">The calling serializer.</param>",1962],["var result = serializer.Unpack( stream );",1930],["return serializer;",1833],["serializer.Pack( stream, value );",1006]]},{"word":"server","context":[["* DAWN OF LIGHT - The first free open source DAoC server emulator",3973],["/// The server's response contained unexpected tokens.",2091],["server.Start();",1242],["var client = server.CreateClient();",752],["/// <param name=\"message\">The message received from the server.</param>",752],["/// The server replied with a NO or BAD response.",729],["var server = TestHelper.CreateServer(_app, SiteName, _configureServices);",712],["/// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string",708],["if (server == null)",700],["* EPPlus provides server-side generation of Excel 2007/2010 spreadsheets.",699]]},{"word":"service","context":[[": base(service)",10968],["/// A standard service response including an HTTP status code and",5861],["this.service = service;",4466],["this.service = service;",4466],["/// Unmarshaller the response from the service to the response class.",4089],["private readonly Google.Apis.Services.IClientService service;",3132],["/// <summary>The service which this resource belongs to.</summary>",3130],["/// Reference to the service client.",2674],["service,",2505],["/// A standard service response for long running operations.",2410]]},{"word":"session","context":[["/// <param name=\"session\">The session</param>",5636],["/// <param name=\"session\">The session</param>",5636],["_session = session;",1637],["session.SaveChanges();",1503],["return session;",1391],["/// provided when recreating a page from a prior session.",1217],["if (session == null)",1144],["/// in addition to page state preserved during an earlier session.",965],["/// <param name=\"session\"></param>",935],["if (session != null)",917]]},{"word":"set","context":[["set",934210],["set {",466694],["// set of attributes. Change these attribute values to modify the information",263545],["// COM, set the ComVisible attribute to true on that type.",238633],["set;",128501],["public string Name { get; set; }",82260],["private set;",37428],["public int Id { get; set; }",32950],["public string Email { get; set; }",24278],["private set",24212]]},{"word":"sets","context":[["/// <summary>Gets or sets the body of this request.</summary>",3833],["///Gets or sets the test context which provides",3536],["/// Gets or sets the name.",2193],["/// Gets or sets the <see cref=\"ApiDescription\"/> that describes the API.",1415],["// This sets the default COM visibility of types in the assembly to invisible.",1334],["/// Gets or sets the id.",1259],["/// Gets or sets json deserialization settings.",1116],["/// Gets or sets json serialization settings.",1116],["/// Gets or sets the <see cref=\"ModelDescription\"/> that describes the resource.",1063],["/// Gets or sets the <see cref=\"ModelDescription\"/> that describes the request body.",1063]]},{"word":"settings","context":[["return settings;",3209],["if (settings == null)",3023],["_settings = settings;",2305],["/// <param name=\"settings\">The settings.</param>",2239],["/// <param name=\"settings\">The settings.</param>",2239],["// You can configure the account lockout settings in IdentityConfig",1519],["XmlWriterSettings settings = new XmlWriterSettings();",1470],["throw new ArgumentNullException(\"settings\");",1441],["settings.Indent = true;",1313],["this.settings = settings;",1193]]},{"word":"short","context":[["(short) 0,",1318],["((global::org.xmlvm._nArrayAdapter<short>) _r0_o)[_r1.i] = (short)_r2.i;",1199],["((global::org.xmlvm._nArrayAdapter<short>) _r0_o)[_r1.i] = (short)_r2.i;",1199],["Assert.IsNotNull (entry as ShortIFDEntry, \"Entry is not a short!\");",965],["return default(short);",885],["new short[]",876],["Assert.IsNotNull (entry as ShortArrayIFDEntry, \"Entry is not a short array!\");",747],["public override short Sid",639],["(short) -1,",607],["short a = 10;",540]]},{"word":"should","context":[["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["/// <param name=\"state\">Palette value should be applicable to this state.</param>",5167],["// Contributor(s): (Open source contributors should list themselves and their modifications here).",3814],["// either both should have failed the same way or they should both produce the same result",3123],["// either both should have failed the same way or they should both produce the same result",3123],["// method you should instantiate the window, load the UI into it and then make the window",1457],["// on the next navigation to see if the page stack should be reset",1425],["/// This is used to identify the place where the sample should be applied.",1414],["///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>",1365],["//     ResourceFlowDirection's value should be \"RightToLeft\"",1362]]},{"word":"shown","context":[["// by using the '*' as shown below:",242545],["// Build Numbers by using the '*' as shown below:",1088],["// as shown below: [assembly: AssemblyVersion(\"1.0.*\")]",308],["// \"Logical Name\" is passed to the method as shown above.",244],["// the method as shown below.",244],["// the Swagger 2.0 specification, you can enable UI support as shown below.",243],["// about them, you can use the \"Schemes\" option as shown below.",243],["// \"Logical Name\" is passed to the method as shown below.",243],["/// <param name=\"msg\">Message to be shown if the assertion fails.</param>",152],["/// To connect to the Photon Cloud, a valid AppId must be in the settings file (shown in the Photon Cloud Dashboard).",140]]},{"word":"similar","context":[["/// Use this attribute for custom wrappers similar to",7219],["/// Look up a localized string similar to",4348],["///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).",3469],["// This is similar to the RememberMe option when you log in.",1774],["///   Looks up a localized string similar to .",1543],["///   Looks up a localized string similar to LeftToRight.",1364],["/// from the context. Use this attribute for custom wrappers similar to",1262],["/// implicitly from the context. Use this attribute for custom wrappers similar to",1262],["///   Looks up a localized string similar to MY APPLICATION.",1238],["///   Looks up a localized string similar to us-EN.",1024]]},{"word":"size","context":[["return size;",11048],["for (int i = 0; i < size; i++)",8501],["int size = 0;",4923],["size = 0;",4169],["int size = memoizedSerializedSize;",3910],["if (size != -1) return size;",3864],["if (size != -1) return size;",3864],["memoizedSerializedSize = size;",3173],["size += UnknownFields.SerializedSize;",3049],["// Code size        7 (0x7)",2428]]},{"word":"so","context":[["// furnished to do so, subject to the following conditions:",40388],["furnished to do so, subject to the following conditions:",18922],["* furnished to do so, subject to the following conditions:",8249],["//  furnished to do so, subject to the following conditions:",2496],["// obligated to do so.  If you do not wish to do so, delete this",2107],["// obligated to do so.  If you do not wish to do so, delete this",2107],["/// search results, and so forth.",1998],["//   furnished to do so, subject to the following conditions:",1914],["//     furnished to do so, subject to the following conditions:",1744],["//furnished to do so, subject to the following conditions:",1560]]},{"word":"source","context":[["var source = @\"",38007],["string source = @\"",24197],["var source =",23825],["* Redistribution and use in source and binary forms, with or without",16512],["// the ClearCanvas RIS/PACS open source project.  If not, see",14486],["// This file is part of the ClearCanvas RIS/PACS open source project.",14486],["/// <param name=\"sender\">The source of the event.</param>",12667],["// Redistribution and use in source and binary forms, with or without",12613],["(source, target, level) =>",11973],["if (source == null)",11665]]},{"word":"specific","context":[["// app, or any theme specific resource dictionaries)",8770],["ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located",8570],["// Change them to the values specific to your project.",8525],["/// Provides application-specific behavior to supplement the default Application class.",5304],["/// Whether this element is available in a specific version of Office Application.",3914],["/// will be used such as when the application is launched to open a specific file.",3257],["// To protect from overposting attacks, please enable the specific properties you want to bind to, for",3131],["/// <param name=\"formatProvider\">An IFormatProvider that supplies culture-specific formatting information.</param>",2206],["/// will be used when the application is launched to open a specific file, to display",1996],["// Phone-specific initialization",1853]]},{"word":"specified","context":[["/// <returns>Returns true if the element is defined in the specified version.</returns>",3931],["/// The response body contains the status of the specified asynchronous",3544],["/// <returns>The <see cref=\"JValue\"/> initialized with the specified value.</returns>",2642],["/// <returns>The specified <paramref name=\"validator\"/> instance.</returns>",2060],["/// Adds the specified select value to the request.",2016],["/// Adds the specified expand value to the request.",2016],["// will be locked out for a specified amount of time.",1866],["// If a user enters incorrect codes for a specified amount of time then the user account",1864],["/// Sets the sample directly for all actions with the specified type and media type.",1432],["/// Sets the sample request directly for the specified media type and action.",1432]]},{"word":"specify","context":[["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["// The following attributes are used to specify the signing key for the assembly,",8391],["// you can specify it here.",2735],["// In order to sign your assembly you must specify a key to use. Refer to the",1296],["//       located in the project directory, you would specify the AssemblyKeyFile",1235],["// You can specify all the values or you can use the default the Revision and",1086],["/// other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,",336],["/// Use the <see cref=\"MacroAttribute\"/> attribute to specify macros for parameters.",332],["Foundation.  If the Program does not specify a version number of the",319]]},{"word":"sql","context":[["return Factory.Scalar<long>(this._Catalog, sql);",4806],["sql.Append(\"OFFSET @0\", offset);",3527],["sql.Append(\"LIMIT @0\", 10);",3204],["return sql;",2009],["using (NpgsqlCommand command = new NpgsqlCommand(sql))",2008],["string sql;",1596],["sql.OrderBy(\"1\");",1560],["return Factory.Get<EntityParser.Filter>(catalog, sql, filterName).ToList();",1552],["cmd.CommandText = sql;",1368],["/// <param name=\"sql\"></param>",1263]]},{"word":"start","context":[["end -= start;",3186],["/// <param name=\"start\">Row number at which to start reading.</param>",3017],["/// <param name=\"start\">Row number at which to start reading.</param>",3017],["DateTime start = DateTime.Now;",2892],["int start = 0;",2232],["start = DateTime.Now;",1830],["start++;",1802],["if (start < 0)",1463],["/// <param name=\"start\"></param>",1446],["/// <param name=\"start\">Row number at which to start reading, the first row is 0.</param>",1404]]},{"word":"state","context":[["state.type = _type;",7584],["state.channel = _channel;",7584],["/// Invoked when application execution is being suspended.  Application state is saved",5198],["/// <param name=\"state\">Palette value should be applicable to this state.</param>",5167],["/// <param name=\"state\">Palette value should be applicable to this state.</param>",5167],["switch (state)",3707],["return state;",3658],["//TODO: Load state from previously suspended application",3637],["//TODO: Save application state and stop any background activity",3617],["InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));",3144]]},{"word":"static","context":[["static void Main()",95606],["static void Main(string[] args)",75227],["private static global::System.Resources.ResourceManager resourceMan;",45167],["private static global::System.Globalization.CultureInfo resourceCulture;",45161],["public static void Main()",39282],["internal static global::System.Globalization.CultureInfo Culture {",26565],["internal static global::System.Resources.ResourceManager ResourceManager {",26564],["static class Program",18304],["public static Settings Default {",16558],["public static void Main(string[] args)",14997]]},{"word":"status","context":[["/// Thrown when the operation returned an invalid status code",11459],["/// A standard service response including an HTTP status code and",5861],["var ex = new ErrorException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",5667],["return status;",5426],["NPPException.CheckNppStatus(status, this);",5209],["/// The response body contains the status of the specified asynchronous",3544],["/// has failed. Note that this status is distinct from the HTTP status",3499],["/// has failed. Note that this status is distinct from the HTTP status",3499],["status.AppendLine();",2905],["var ex = new CloudException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));",2575]]},{"word":"str","context":[["// with the /str option, or rebuild your VS project.",38199],["return str;",12255],["using (var str = new StringWriter())",4830],["if (str == null)",3077],["string str;",2577],["string str = \"\";",2035],["// (以 /str 作为命令选项)，或重新生成 VS 项目。",2017],["/// <param name=\"str\"></param>",1908],["if (str != null)",1712],["private static string TryFormatJson(string str)",1432]]},{"word":"stream","context":[["stream.Position = 0;",11741],["stream.Close();",7575],["if (stream == null)",5012],["///<para> - VoidResponse, no deserialization, response stream never read and closed </para>",4536],["///<para> - Stream, no deserialization, response stream is your responsibility </para>",4536],["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536],["stream.Seek(0, SeekOrigin.Begin);",3712],["return stream;",3652],["if (stream != null)",3538],["using (var stream = new MemoryStream())",3516]]},{"word":"string","context":[["public override string ToString()",127251],["public string Name { get; set; }",82260],["static void Main(string[] args)",75227],["public string Name",41989],["return string.Empty;",40444],["return default(string);",26070],["public string Email { get; set; }",24278],["string source = @\"",24197],["public string Description { get; set; }",22765],["if (string.IsNullOrWhiteSpace(this._Catalog))",21882]]},{"word":"strongly","context":[["///   resource lookups using this strongly typed resource class.",38276],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["///Represents strongly named DataRow class.",2530],["///Represents the strongly named DataTable class.",2529],["///Represents a strongly typed in-memory cache of data.",1034],["// Simulate a strongly named assembly.",867],["/// This can be changed to a strongly typed view model.",714],["/// Gets a strongly-typed value of the property on specified element.",700],["/// records this way, you are likely better off grabbing the raw data and iterating on a strongly-typed array.",635],["/// Returns a strongly-typed raw data array for the column.",629]]},{"word":"struct","context":[["struct S",3155],["where T : struct",2941],["public struct Isset {",2603],["/// <returns>The struct instance.</returns>",1468],["public new partial struct Internal",1427],["public struct S",1099],["public partial struct __Internal",1078],["struct S { }",905],["public struct ValueTuple<T1, T2>",881],["unsafe struct S",844]]},{"word":"subject","context":[["// furnished to do so, subject to the following conditions:",40388],["furnished to do so, subject to the following conditions:",18922],["* furnished to do so, subject to the following conditions:",8249],["subject to the following conditions:",3451],["* This Source Code Form is subject to the terms of the Mozilla Public",2993],["// subject to the following conditions:",2922],["//  furnished to do so, subject to the following conditions:",2496],["//  Seaford, Vic 3198, Australia and are supplied subject to licence terms.",2331],["//   furnished to do so, subject to the following conditions:",1914],["//     furnished to do so, subject to the following conditions:",1744]]},{"word":"sublicense","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["// copy, modify, merge, publish, distribute, sublicense, and/or sell",17070],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of",3135],["copy, modify, merge, publish, distribute, sublicense, and/or sell",2818],["//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",2470],["publish, distribute, sublicense, and/or sell copies of the Data, and to",1940],["//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1913],["//     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",1721]]},{"word":"success","context":[["return success;",6843],["success = false;",6684],["if (!success)",6316],["success = true;",5650],["if (success)",5252],["bool success = false;",5015],["//<Expects Status=success></Expects>",4209],["bool success = true;",3547],["Assert.True(success);",2705],["// <Expects Status=success></Expects>",2032]]},{"word":"summary","context":[["/// <summary>",13002053],["/// </summary>",12968568],["///</summary>",111754],["///<summary>",67556],["// <summary>",25006],["// </summary>",24548],["/// <summary></summary>",23658],["/// <summary></summary>",23658],["///// <summary>",14266],["///// </summary>",13627]]},{"word":"support","context":[["/// Required method for Designer support - do not modify",72324],["/// with the sole purpose to increase usability and add IntelliSense support.",3120],["For more features, controls, and fast professional support,",2979],["// Required for Windows Form Designer support",2800],["* Contact: Learnlift USA, 12 Greenway Plaza, Suite 1510, Houston, Texas 77046, support@memorylifter.com\t\t\t\t\t*",1441],["// assemblies support COM.",1270],["/// This method is required for Windows Forms designer support.",1180],["// Extend the following to use a preset object directly as the sample for all actions that support a media",1085],["// Modify this to support more data annotation attributes.",1074],["/// Required for Windows.Forms Class Composition Designer support",1011]]},{"word":"sw","context":[["sw.Stop();",6770],["sw.Close();",5178],["sw.Start();",4656],["internal void Write(StreamWriter sw, string nodeName)",2458],["sw.Flush();",2365],["StringWriter sw = new StringWriter();",2317],["sw.Write(\">\");",2244],["sw.WriteLine();",1870],["var sw = Stopwatch.StartNew();",1867],["return sw.ToString();",1807]]},{"word":"switch","context":[["switch (type)",12598],["switch (result)",6808],["switch (connectionId)",5062],["switch (c)",4174],["switch (index)",4141],["switch (value)",3857],["switch (state)",3707],["switch (i)",3647],["switch (kind)",3509],["switch (tag) {",3177]]},{"word":"symbol","context":[["return symbol;",1470],["switch (symbol.Kind)",1098],["///     throw new ArgumentNullException(\"par\"); // Warning: Cannot resolve symbol",1085],["if (symbol == null)",1032],["Assert.NotNull(symbol);",931],["if (symbol != null)",777],["/// <returns>The symbol that was declared.</returns>",725],["// Description:  Contains the business logic for symbology layers and symbol categories.",556],["ISymbol symbol,",553],["/// (e.g. via reflection, in external library), so this symbol",542]]},{"word":"t","context":[["return t;",9832],["// When the navigation stack isn't restored navigate to the first page,",4932],["t.Start();",4334],[".PrimaryKey(t => t.Id)",3950],[".PrimaryKey(t => t.Id)",3950],["if (t != null)",3513],["if (t == null)",3023],["return Ensure(n.HasValue && n.Value == t);",3000],["ResolveAssemblyReference t = new ResolveAssemblyReference();",2650],["case '\\t':",2461]]},{"word":"table","context":[["return table;",4503],["constraints: table =>",4111],["columns: table => new",4107],["/// <list type=\"table\">",3805],["table.ForeignKey(",3273],["/// User id of application user accessing this table.",2882],["this.Namespace = table.Namespace;",2648],["this.CaseSensitive = table.CaseSensitive;",2646],["this.Prefix = table.Prefix;",2646],["this.Locale = table.Locale;",2646]]},{"word":"tag","context":[["uint tag;",6554],["ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);",5772],["switch (tag) {",3177],["if (pb::WireFormat.IsEndGroupTag(tag)) {",3029],["switch(tag) {",2945],["while ((tag = input.ReadTag()) != 0) {",2932],["if(tag == 0 && field_name != null) {",2854],["while (input.ReadTag(out tag, out field_name)) {",2854],["switch (tag)",1516],["/// <param name=\"tag\">The tag.</param>",1465]]},{"word":"target","context":[["serializer.Pack( buffer, target );",16912],["Assert.That( result, Is.Not.SameAs( target ) );",16430],["(source, target, level) =>",11973],["/// <param name=\"target\"></param>",7731],["if (target == null)",5961],["void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {",5815],["return target;",4373],["if (target != null)",4134],["/// <param name=\"target\">",4068],["/// <param name=\"target\">The target.</param>",2312]]},{"word":"task","context":[["/// <returns>The task object representing the asynchronous operation.</returns>",11150],["return task;",4316],["task.Wait();",3459],["///<para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:",3380],["if (task == null)",1710],["/// <returns>The task to await for async call.</returns>",1289],["return task.Result;",1138],["task.Start();",1021],["if (task.IsFaulted)",938],["await task;",931]]},{"word":"temp","context":[["resourceMan = temp;",45479],["return temp;",4876],["if (temp != null)",1798],["int temp;",953],["<slot kind=\"\"temp\"\" />",852],["int temp = 0;",680],["if (temp == null)",672],["string temp;",602],["string temp = \"\";",447],["stream.Write(temp, 0, temp.Length);",429]]},{"word":"template","context":[["//     This code was generated from a template.",10945],["//    This code was generated from a template.",5346],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238",3813],["* To change this template use Tools | Options | Coding | Edit Standard Headers.",3013],["// The Blank Application template is documented at http://go.microsoft.com/fwlink/?LinkId=234227",1721],["// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409",1709],["return template;",1634],["// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236",1544],["if (template == null)",1050],["/// ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.",970]]},{"word":"test","context":[["//---------------Set up test pack-------------------",7871],["test(false);",4285],["var test = @\"",3829],["///Gets or sets the test context which provides",3536],["///information about and functionality for the current test run.",3535],["#region Additional test attributes",3487],["Assert.Inconclusive(\"Verify the correctness of this test method.\");",2408],["test.RealRun();",2169],["if (test.RunTests())",2111],["//Use ClassInitialize to run code before running the first test in the class",2111]]},{"word":"text","context":[["var text = @\"",37703],["CreateCompilationWithMscorlib(text).VerifyDiagnostics(",13782],["var text =",10454],["return text;",8837],["var comp = DiagnosticsUtils.VerifyErrorsAndGetCompilationWithMscorlib(text,",4835],["if (text == null)",4728],["Assert.Equal(text, file.ToFullString());",4638],["var file = this.ParseTree(text);",4579],["Text = text;",4387],["var comp = CreateCompilationWithMscorlib(text);",4264]]},{"word":"than","context":[["/// <remarks>This uses the native .NET datatype, rather than the FHIR equivalent</remarks>",2584],["// code or ResourceFlowDirection is set to a value other than LeftToRight",1373],["// Make the access token get renewed a bit earlier than the time when it expires",506],["// Must not be run more than once.",446],["// ChangePassword will throw an exception rather than return false in certain failure scenarios.",421],["/// if this instance is less than value, zero if this instance is equal to value, or greater than zero",416],["/// if this instance is less than value, zero if this instance is equal to value, or greater than zero",416],["/// if this instance is greater than value.",416],["/// A signed number indicating the relative values of this instance and value. Returns less than zero",413],["/// - Add 1 cycle if low bye of Direct Page (zero page) register is other than zero (DL&lt;&gt;0).",405]]},{"word":"that","context":[["// COM, set the ComVisible attribute to true on that type.",238633],["/// Headers that will be added to request.",13974],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// The headers that will be added to request.",12749],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],["// just ensure that the window is active",5270],["///<para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>",4536],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["* that the following conditions are met:",4276]]},{"word":"the","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// General Information about an assembly is controlled through the following",263447],["// Version information for an assembly consists of the following four values:",249312],["// by using the '*' as shown below:",242545],["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// COM, set the ComVisible attribute to true on that type.",238633],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Build and Revision Numbers",211421]]},{"word":"then","context":[["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// then",2755],["// If the user does not have an account, then prompt the user to create an account",2088],["// If a user enters incorrect codes for a specified amount of time then the user account",1864],["// method you should instantiate the window, load the UI into it and then make the window",1457],["// If the app has received a 'reset' navigation, then we need to check",1426],["// If a compiler error is hit then ResourceLanguage is missing from",1371],["// If a compiler error is hit then ResourceFlowDirection is missing from",1370],["//then",1160],["/// Returns a function that Performs In, then Merge. Parameter lists are merged.",982]]},{"word":"there","context":[["///<param name=\"parentObject\">object there has created the proxy</param>",15036],["/// during unit testing. It is not intended for consumption by users of the library and there is no",776],["/// <exception cref=\"Dropbox.Api.ApiException{TError}\">Thrown if there is an error",739],["// The using block is used to call dispose automatically even if there are an exception.",621],["// Everywhere there is a newline in the text, add an indent after it",478],["/// <exception cref=\"TwitterApiException\">If there is an error while communicating with Twitter.</exception>",438],["/// <throws>  IOException if there is a low-level IO error </throws>",435],["dgv.Columns.Add (\"hi\", \"there\");",392],["| there=here}}\");",392],["// The using block is used to call dispose automatically even if there is a exception.",359]]},{"word":"these","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// and ResourceFlowDirection should be initialized in each resx file to match these values with that",1361],["subsequent Recipients to identify the originator of the Modification. In fulfillment of these",631],["Recipient fails to comply with these terms and conditions, and fails to cure such noncompliance within",631],["// Assign the provided values to these parameters based on parameter order",442],["// Change these attribute values to modify the information associated with an assembly.",407],["// Order is very important for these files to work, they have explicit dependencies",350],["/// Text inside these comments is added as source code when the template is applied. Template parameters",335],["available for as long as needed to satisfy these requirements.",319],["free programs, and that you know you can do these things.",319]]},{"word":"this","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// to COM components.  If you need to access a type in this assembly from",239070],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["return this;",223951],["this.SuspendLayout();",76395],["this.ResumeLayout(false);",75113],["/// the contents of this method with the code editor.",72166],["this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;",62910],["this.SendPropertyChanging();",49926],["this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);",46260]]},{"word":"thread","context":[["///   Overrides the current thread's CurrentUICulture property for all",38271],["thread.Start();",3938],["thread.Join();",1057],["thread.IsBackground = true;",761],["// call update worker thread;",657],["///   Remplace la propriété CurrentUICulture du thread actuel pour toutes",621],["thread.Abort();",578],["thread.SetApartmentState(ApartmentState.STA);",453],["return thread;",415],["private Thread thread;",402]]},{"word":"through","context":[["// General Information about an assembly is controlled through the following",263447],["/// Returns an enumerator that iterates through the collection.",2755],["/// Returns an enumerator that iterates through a collection.",1780],["// Send an SMS through the SMS provider to verify the phone number",1456],["/// Search for samples that are provided directly through <see cref=\"ActionSamples\"/>.",1416],["/// A <see cref=\"T:System.Collections.Generic.IEnumerator`1\"/> that can be used to iterate through the collection.",999],["/// An <see cref=\"T:System.Collections.IEnumerator\"/> object that can be used to iterate through the collection.",994],["/// related content.  Calling base.Initialize will enumerate through any components",929],["/// This method is provided for full-coverage, however, if you find yourself iterating through the column",633],["/// Returns an enumerator that iterates through all fields.",513]]},{"word":"throw","context":[["throw new NotImplementedException();",202994],["throw;",110230],["throw ex;",49801],["throw new NotSupportedException();",35762],["get { throw new NotImplementedException(); }",27582],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.InternalServerError));",26327],["throw new UnauthorizedException(\"Access is denied.\");",25663],["throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.Forbidden));",25647],["throw new InvalidOperationException();",25457],["throw new HttpResponseException(new HttpResponseMessage",24125]]},{"word":"time","context":[["/// <param name=\"time\">",3200],["// will be locked out for a specified amount of time.",1866],["// If a user enters incorrect codes for a specified amount of time then the user account",1864],["/// A <see cref=\"System.Single\"/> for the time in seconds the animation will take to complete.",1400],["{ typeof(TimeSpan), \"time interval\" },",1058],["return time;",1033],["/// stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.",1033],["which is provided at the time of installation or download, or which",779],["/// <param name=\"time\"></param>",741],["//it will be recreated each time it is not found, just comment the following",707]]},{"word":"title","context":[["Title = title;",2418],["/// <code language=\"cpp\" title=\"C/C++ Syntax\">",2031],["LocalName = \"title\",",1895],["public string title { get; set; }",1683],["Name = \"title\",",1553],["// title storage container when deploying this assembly to the device.",1272],["return title;",1252],["/// <param name=\"title\"></param>",1196],["this.Title = title;",1184],["title: \"\"If statement must have a space between 'if' and the boolean expression\"\", // allow any title",1182]]},{"word":"to","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// to COM components.  If you need to access a type in this assembly from",239070],["// to COM components.  If you need to access a type in this assembly from",239070],["// COM, set the ComVisible attribute to true on that type.",238633],["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["/// To modify move field declaration from designer file to code-behind file.",154384],["// furnished to do so, subject to the following conditions:",40388],["// furnished to do so, subject to the following conditions:",40388],["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051]]},{"word":"token","context":[["/// The cancellation token.",37778],["/// Cancellation token.",19789],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["/// <param name=\"cancellationToken\">The cancellation token.</param>",12706],["return token;",5324],["// Generate the token and send it",3744],["/// The operation was canceled via the cancellation token.",3176],["if (token == null)",2144],["/// <summary>OAuth 2.0 token for the current user.</summary>",1996],["Assert.NotNull(token);",1691]]},{"word":"tool","context":[["//     This code was generated by a tool.",125487],["// class via a tool like ResGen or Visual Studio.",38476],["// Warning: This code was generated by a tool.",10227],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// **NOTE** This file was generated by a tool and any changes will be overwritten.",4756],["//      This code was generated by a tool.",2342],["pageTool tool = new pageTool(this.Page);",1281],["* gitter - VCS repository management tool",1275],["- or modifiy the WebIDLParser tool itself.",1196],["This file was auto generated with the tool \"WebIDLParser\"",1194]]},{"word":"tree","context":[["/// <param name=\"context\">The parse tree.</param>",20795],["var model = compilation.GetSemanticModel(tree);",7055],["var tree = compilation.SyntaxTrees.Single();",4834],["var model = comp.GetSemanticModel(tree);",3096],["var tree = Parse(text);",3077],["var comp = CreateCompilationWithMscorlib(tree);",2334],["var tree = compilation.SyntaxTrees[0];",2258],["return tree;",1317],["Assert.NotNull(tree);",1282],["// compute with expression tree",1220]]},{"word":"true","context":[["return true;",844737],["// COM, set the ComVisible attribute to true on that type.",238633],["/// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>",65070],["while (true)",60921],["e.Handled = true;",27092],["get { return true; }",24544],["HasNameTable = true,",22835],["this.label1.AutoSize = true;",21016],["Dispose(true);",19645],["bool retVal = true;",18272]]},{"word":"try","context":[["try",1309876],["try {",242923],["try{",7656],["//    try",3602],["//try",3128],[".try",3102],["try {      // for error handling",2278],["try { }",1553],["// If no sample found, try generate sample using formatter and sample object",1432],["/// try",1102]]},{"word":"two","context":[["// The following code protects for brute force attacks against the two factor codes.",1866],[": message == ManageMessageId.SetTwoFactorSuccess ? \"Your two-factor authentication provider has been set.\"",1740],["/// <returns>Whether the two objects intersected.</returns>",824],["/// Compares two instances of this object.",814],["* agsXMPP can be used under either of two licences\t\t\t\t\t\t\t\t\t *",703],["/// Adds two vectors.",544],["///   Determines whether two matrices contain the same values.",512],["// Always two zeros because of IUnpackable",512],["// When this page is part of the visual tree make two changes:",426],["/// Multiplies two instances.",379]]},{"word":"type","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["// COM, set the ComVisible attribute to true on that type.",238633],["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["return type;",19483],["/// <param name=\"type\">The type.</param>",15574],["/// <param name=\"type\">The type.</param>",15574],["/// <param name=\"mediaType\">The media type.</param>",13700],["if (type == null)",12793],["switch (type)",12598],["/// <param name=\"type\"></param>",10429]]},{"word":"typed","context":[["///   resource lookups using this strongly typed resource class.",38276],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["///Represents a strongly typed in-memory cache of data.",1034],["/// This can be changed to a strongly typed view model.",714],["/// Gets a strongly-typed value of the property on specified element.",700],["/// records this way, you are likely better off grabbing the raw data and iterating on a strongly-typed array.",635],["/// Returns a strongly-typed raw data array for the column.",629],["/// Executes a query, returning the data typed as per T",323],["/// <returns>Returns a typed collection of Entity objects.</returns>",290],["///    resource lookups using this strongly typed resource class.",259]]},{"word":"typelib","context":[["// The following GUID is for the ID of the typelib if this project is exposed to COM",229587],["// On Windows, the following GUID is for the ID of the typelib if this",1271],["// Le GUID suivant est pour l'ID de la typelib si ce projet est exposé à COM",1233],["// El siguiente GUID sirve como identificador de typelib si este proyecto se expone a COM",950],["// このプロジェクトが COM に公開される場合、次の GUID が typelib の ID になります",926],["// 如果此项目向 COM 公开，则下列 GUID 用于 typelib 的 ID",363],["// El siguiente GUID sirve como id. de typelib si este proyecto se expone a COM.",338],["// 下列 GUID 為專案公開 (Expose) 至 COM 時所要使用的 typelib ID",272],["//The following GUID is for the ID of the typelib if this project is exposed to COM",86],["// El siguiente GUID sirve como ID de typelib si este proyecto se expone a COM",68]]},{"word":"typeof","context":[["[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]",48287],["[ExpectedException(typeof(ArgumentNullException))]",11342],["[ExpectedException(typeof(ArgumentException))]",9012],["[Theory, ClassData(typeof(CompilationTypes))]",7412],["[ExpectedException (typeof (ArgumentException))]",3615],["[ExpectedException(typeof(InvalidOperationException))]",3462],["if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))",3182],["throw new InvalidEnumArgumentException(\"sampleDirection\", (int)sampleDirection, typeof(SampleDirection));",3172],["[ExpectedException (typeof (ArgumentNullException))]",3107],["rootFrame.Navigate(typeof(MainPage), e.Arguments);",2971]]},{"word":"typeparam","context":[["/// <typeparam name=\"T\"></typeparam>",25253],["/// <typeparam name=\"T\"></typeparam>",25253],["/// </typeparam>",21056],["/// <typeparam name=\"T\">",5204],["/// <typeparam name=\"ResolveType\">Type to resolve</typeparam>",1992],["/// <typeparam name=\"ResolveType\">Type to resolve</typeparam>",1992],["/// <typeparam name=\"TEntity\"></typeparam>",1651],["/// <typeparam name=\"TEntity\"></typeparam>",1651],["/// <typeparam name=\"T\">Generic type parameter.</typeparam>",1451],["/// <typeparam name=\"T\">Generic type parameter.</typeparam>",1451]]},{"word":"types","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["if (types == LuaTypes.LUA_TTABLE)",3139],["LuaTypes types = LuaDLL.lua_type(L, 1);",3139],["/// The following table lists the possible child types:",2099],["return types;",1922],["foreach (var type in types)",1560],["/// Arrays: arrays of simple types or complex types.",1417],["/// Complex types: POCO types.",1417],["/// Arrays: arrays of simple types or complex types.",1417],["/// Complex types: POCO types.",1417]]},{"word":"uint","context":[["uint tag;",6554],["[global::System.ComponentModel.DefaultValue(default(uint))]",5495],["public override uint MessageId",1589],["uint code;",961],["throw new Z3Exception(Marshal.PtrToStringAnsi(LIB.Z3_get_error_msg_ex(a0, (uint)err)));",934],["public override uint ProtocolID",925],["public uint DefinitionOrder;",877],["uint index = 0;",859],["uint flags = 0;",820],["uint value;",789]]},{"word":"ulong","context":[["[global::System.ComponentModel.DefaultValue(default(ulong))]",1645],["ulong IConvertible.ToUInt64(IFormatProvider provider)",523],["ulong a = 10;",459],["ulong System.IConvertible.ToUInt64(System.IFormatProvider provider) { throw null; }",385],["Expression.Lambda<Func<ulong>>(",378],["Expression.Lambda<Func<ulong?>>(",369],["// ushort, int, uint, long, ulong, char, string. If no such implicit conversion exists, or if",330],["ulong value;",325],["ulong result = 0;",315],["Expression<Func<ulong>> e =",309]]},{"word":"up","context":[["///   Looks up a localized resource of type System.Drawing.Bitmap.",84669],["/// Clean up any resources being used.",69697],["///   A strongly-typed resource class, for looking up localized strings, etc.",38269],["//---------------Set up test pack-------------------",7871],["/// Look up a localized string similar to",4348],["///   Looks up a localized resource of type System.Byte[].",3534],["///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).",3469],["///   Looks up a localized string similar to .",1543],["/// Clean up after each test",1423],["pick up the Plus Edition at http://xceed.com/wpf_toolkit",1394]]},{"word":"update","context":[["// and \"{Major}.{Minor}.{Build}.*\" will update just the revision.",8393],["// The form \"{Major}.{Minor}.*\" will automatically update the build and revision,",8385],["Assert.IsFalse(update);",1612],["/// Please update the test case below to test the model.",1412],["update = true;",1355],["var update = false;",1158],["/// update",934],["get { return \"update\"; }",794],["if (update)",677],["// call update worker thread;",657]]},{"word":"url","context":[["httpRequest.RequestUri = new Uri(url);",11205],["url = url.Replace(\" \", \"%20\");",8691],["url = url.Replace(\" \", \"%20\");",8691],["url: \"{controller}/{action}/{id}\",",8438],["string url = \"\";",8056],["url = url.Substring(1);",7756],["url = url.Substring(1);",7756],["// Trim '/' character from the end of baseUrl and beginning of url.",7722],["url = baseUrl + \"/\" + url;",7703],["url = baseUrl + \"/\" + url;",7703]]},{"word":"use","context":[["// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",38051],["to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",18321],["* Redistribution and use in source and binary forms, with or without",16512],["// Redistribution and use in source and binary forms, with or without",12613],["* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",7810],["// Redistribution and use in source and binary forms, with or without modification,",6525],["Redistribution and use in source and binary forms, with or without",6264],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["* Redistribution and use in source and binary forms,",4163],["// Enable the application to use a cookie to store information for the signed in user",3152]]},{"word":"used","context":[["/// Clean up any resources being used.",69697],["///   Returns the cached ResourceManager instance used by this class.",38276],["//(used if a resource is not found in the page,",17306],["///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.",13792],["// The following attributes are used to specify the signing key for the assembly,",8391],["///<param name=\"factory\">current used factory core</param>",7658],["/// An empty page that can be used on its own or navigated to within a Frame.",7436],["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["// Disable the \"this variable is never used\".",6739],["/// will be used such as when the application is launched to open a specific file.",3257]]},{"word":"user","context":[["if (user != null)",23695],["if (user == null)",17629],["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["await SignInManager.SignInAsync(user, isPersistent: false, rememberBrowser: false);",10246],["* The interactive user interfaces in modified source and object code versions of ONLYOFFICE must display",7255],["/// Invoked when the application is launched normally by the end user.  Other entry points",5237],["var user = await GetCurrentUserAsync();",4111],["return user;",3645],["await SignInAsync(user, isPersistent: false);",3514],["var user = UserManager.FindById(User.Identity.GetUserId());",3490]]},{"word":"ushort","context":[["ushort fid,",1521],["ushort IConvertible.ToUInt16(IFormatProvider provider)",523],["ushort a = 10;",510],["placeBlock(l, p, x, (ushort)(y + 4), z, b);",490],["placeBlock(l, p, x, (ushort)(y + 0), z, b);",479],["placeBlock(l, p, x, (ushort)(y + 2), z, b);",453],["placeBlock(l, p, x, (ushort)(y + 3), z, b);",394],["ushort System.IConvertible.ToUInt16(System.IFormatProvider provider) { throw null; }",385],["placeBlock(l, p, x, (ushort)(y + 1), z, b);",380],["Expression.Lambda<Func<ushort?>>(",369]]},{"word":"using","context":[["using System.Collections.Generic;",1898359],["using System;",1847007],["using System.Linq;",1359443],["using System.Text;",965951],["using System.Threading.Tasks;",554913],["using System.IO;",464577],["using System.Runtime.InteropServices;",418618],["using System.Runtime.CompilerServices;",314838],["using System.Collections;",309630],["using System.Reflection;",247744]]},{"word":"v","context":[["checkType(l,2,out v);",7787],["return v;",7525],["/// <param name=\"v\"></param>",4012],["JValue v = EnsureValue(value);",2941],["v.ClearFlag();",2442],["float v;",2087],["if (v != null)",1591],["if (v.Value is BigInteger)",1460],["int v;",1391],["if (v == null)",1361]]},{"word":"val","context":[["return val;",9969],["if (val == null)",2099],["val.Dispose ();",1664],["var val = reader.ReadElementContentAsString();",1556],["if (!string.IsNullOrWhiteSpace(val))",1454],["/// <param name=\"val\"></param>",1422],["if (val != null)",1333],["int val;",1325],["int val = 0;",1180],["object val;",1006]]},{"word":"valid","context":[["valid = false;",2699],["// Cannot generate a valid key",1434],["return valid;",1322],["if (valid)",1049],["valid = true;",947],["bool valid = true;",896],["if (!valid)",886],["/// <returns>A ClientContext ready to call targetUrl with a valid access token</returns>",870],["return \"The password provided is invalid. Please enter a valid password value.\";",811],["/// A converted value. If the method returns null, the valid null value is used.",764]]},{"word":"value","context":[["/// </value>",116762],["/// <value>",116572],["return value;",53418],["resourceCulture = value;",45538],["if (value == null)",44825],["// aapt resource value: 0",37285],["// aapt resource value: 1",32367],["object[] paramsArray = Invoker.ValidateParamsArray(value);",27376],["// aapt resource value: 2",25848],["/// <param name=\"value\">The value.</param>",22398]]},{"word":"values","context":[["// set of attributes. Change these attribute values to modify the information",263545],["// Version information for an assembly consists of the following four values:",249312],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["// Change them to the values specific to your project.",8525],["for (int i = 0; i < values.Length; i++)",5186],["return values;",3938],["if (values == null)",3111],["/// <param name=\"gameTime\">Provides a snapshot of timing values.</param>",2245],["for (int j = 0; j < values.Length; j++)",1980]]},{"word":"var","context":[["var source = @\"",38007],["var text = @\"",37703],["var source =",23825],["var sb = new StringBuilder();",23824],["using ( var buffer = new MemoryStream() )",20575],["var context = NewSerializationContext( PackerCompatibilityOptions.None );",18314],["var result = serializer.Unpack( buffer );",16785],["var markup = @\"",12482],["var user = await UserManager.FindByIdAsync(User.Identity.GetUserId());",11790],["var edits = GetTopEdits(src1, src2);",11515]]},{"word":"variable","context":[["/// Required designer variable.",68219],["// Disable the \"this variable is never assigned to\".",6739],["// Disable the \"this variable is never used\".",6739],["// Disable the \"this variable is not used\" warning as every field would imply it.",6739],["// ISSUE: variable of a boxed type",1306],["/// Designer variable used to keep track of non-visual components.",1139],["this.Manager.Comment(\"Unbinding variable \\'c1\\'\");",833],["this.Manager.Comment(\"Unbinding variable \\'v3\\'\");",771],["this.Manager.Comment(\"Unbinding variable \\'v2\\'\");",753],["this.Manager.Comment(\"Unbinding variable \\'v1\\'\");",698]]},{"word":"vector","context":[["return vector;",2157],["/// <param name=\"vector\">Left operand.</param>",906],["/// <param name=\"result\">The vector where the result should be stored. Pass the same",864],["///   vector as <paramref name=\"value\"/> to perform the operation in place.</param>",864],["/// Scales a vector by the given value.",830],["/// <returns>The scaled vector.</returns>",720],["/// <param name=\"value\">The vector to scale.</param>",660],["Vector3 vector;",654],["var vector = CreateVector(Data);",600],["/// <param name=\"scale\">The amount by which to scale the vector.</param>",594]]},{"word":"version","context":[["int version = reader.ReadInt();",30524],["writer.Write( (int) 0 ); // version",13339],["// The assembly version has the format \"{Major}.{Minor}.{Build}.{Revision}\".",8448],["writer.Write((int)0); // version",8055],["/// Since version: 1.0",6962],["\"~/Scripts/jquery-{version}.js\"));",5725],["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["//       Generated original version of source code.",5140],["// This code was auto-generated by AFNOR StoredProcedureSystem, version 1.0",5114],["int version = reader.ReadEncodedInt();",5020]]},{"word":"view","context":[["return view;",2386],["if (view == null)",1174],["if (view != null)",1013],["this._UserId = view.UserId.ToInt();",820],["this._LoginId = view.LoginId.ToLong();",820],["this._OfficeId = view.OfficeId.ToInt();",820],["// Set our view from the \"main\" layout resource",819],["/// This can be changed to a strongly typed view model.",714],["_view = view;",707],["/// Login id of application user accessing this view.",701]]},{"word":"virtual","context":[["protected virtual void Dispose(bool disposing)",14193],["public virtual string ETag { get; set; }",12800],["public virtual int GetHashCode() {}",6796],["public virtual string ToString() {}",6796],["public virtual bool Equals(object obj) {}",6505],["protected virtual void SendPropertyChanging()",4870],["public virtual string Kind { get; set; }",4426],["protected virtual void SendPropertyChanged(String propertyName)",4234],["public virtual string Name { get; set; }",4079],["public virtual void Dispose()",3183]]},{"word":"visible","context":[["// Setting ComVisible to false makes the types in this assembly not visible",239962],["// visible.",1463],["Justification = \"Even if all items in SampleObjectFactories throw, problem will be visible as missing sample.\")]",1060],["if (visible)",687],["visible = false;",464],["// Undo the same changes when the page is no longer visible",428],["Cursor.visible = false;",424],["visible = true;",409],["Cursor.visible = true;",372],["// make the window visible",370]]},{"word":"void","context":[["static void Main()",95606],["protected override void Dispose(bool disposing)",93650],["public void Dispose()",82640],["private void InitializeComponent()",79069],["static void Main(string[] args)",75227],["public static void Main()",39282],["protected void Page_Load(object sender, EventArgs e)",31439],["public override void Serialize( GenericWriter writer )",25467],["void Start () {",25063],["public override void Deserialize( GenericReader reader )",23836]]},{"word":"w","context":[["w.WriteEndElement();",4619],["w.Dispose();",3158],["w.WriteStartElement(\"Root\");",2242],["using (XmlWriter w = CreateWriter())",1493],["XmlWriter w = CreateWriter(doc);",1462],["return w;",1152],["w.Close();",1075],["w.AddDocument(doc);",846],["w.WriteLine();",846],["w.Flush();",824]]},{"word":"warning","context":[["#pragma warning disable 1591",13764],["#pragma warning restore 1591",10111],["#pragma warning disable 0169",9315],["#pragma warning disable 0649",7913],["#pragma warning disable 0414",7838],["#pragma warning restore",7534],["#pragma warning disable 0108",6852],["#pragma warning disable",6784],["#pragma warning disable 0067",6755],["#pragma warning disable 0626",6743]]},{"word":"was","context":[["//     This code was generated by a tool.",125487],["// This class was auto-generated by the StronglyTypedResourceBuilder",38480],["//     This code was generated from a template.",10945],["// Warning: This code was generated by a tool.",10227],["//    This code was generated from a template.",5346],["// This code was auto-generated by AFNOR StoredProcedureSystem, version 1.0",5114],["// **NOTE** This file was generated by a tool and any changes will be overwritten.",4756],["/// The operation was canceled via the cancellation token.",3176],["/// <exception cref=\"ArgumentOutOfRangeException\">No match was found</exception>",3102],["// This file was generated by the Gtk# code generator.",2361]]},{"word":"we","context":[["// If we got this far, something failed, redisplay form",11850],["// Ensure we don't initialize again",1856],["// If the app has received a 'reset' navigation, then we need to check",1426],["//If we got this far, something failed, redisplay form",957],["// TODO we need to implement our property change notification mechanism.",879],["// If we receive parameter values, we need to figure out where they go",581],["// If we receive parameter values, we need to figure out where they go",581],["// Otherwise we can just call the SP without params",545],["// If we're starting off, or if the previous text ended with a newline,",478],["// If the text ends with a newline, then we should strip off the indent added at the very end",478]]},{"word":"when","context":[["/// Thrown when the operation returned an invalid status code",11459],["/// Thrown when a required parameter is null",7948],["/// <param name=\"callback\">An AsyncCallback delegate that is invoked when the operation completes.</param>",6407],["/// Thrown when unable to deserialize the response",6367],["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["// Do not repeat app initialization when the Window already has content,",5315],["/// Invoked when the application is launched normally by the end user.  Other entry points",5237],["/// Invoked when application execution is being suspended.  Application state is saved",5198],["/// <exception cref=\"ININ.PureCloudApi.Client.ApiException\">Thrown when fails to make API call</exception>",4568],["// Used for XSRF protection when adding external logins",3661]]},{"word":"where","context":[["where T : class",11368],["ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located",8623],["ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located",8570],["///<para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:",3380],["///<para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:",3380],["where T : struct",2941],["where",2658],["where ResolveType : class",2158],["[Route(\"get-where/{pageNumber}\")]",1788],["where TEntity : class",1666]]},{"word":"whether","context":[["/// without knowing whether the application will be terminated or resumed with the contents",5228],["/// operation, indicating whether it has succeeded, is inprogress, or",3073],["/// <param name=\"sampleDirection\">The value indicating whether the sample is for a request or for a response.</param>",2856],["/// Indicates whether the current object is equal to another object of the same type.",1553],["/// <param name=\"sampleDirection\">The value indicating whether the sample is for a request or a response.</param>",1428],["/// Indicates whether the sample is used for request or response",1394],["/// <returns>Bool indicating whether the type can be resolved</returns>",1312],["/// Determines whether the specified <see cref=\"System.Object\"/> is equal to this instance.",1297],["/// can call Get Operation Status to determine whether the operation",924],["/// <param name=\"ignoreCase\">Specifies whether to create case-insensitive statements.</param>",860]]},{"word":"which","context":[["///Gets or sets the test context which provides",3536],["/// The name of the database on which queries are being executed to.",3508],["/// <param name=\"sender\">The Frame which failed navigation</param>",3297],["/// <summary>The service which this resource belongs to.</summary>",3130],["/// <param name=\"start\">Row number at which to start reading.</param>",3017],["// This file is part of the Kaltura Collaborative Media Suite which allows users",2459],["// module.  An independent module is a module which is not derived from",2107],["/// <param name=\"responseFields\">Use this field to include those fields which are not included by default.</param>",1971],["// which shows areas of a page that are handed off to GPU with a colored overlay.",1659],["// This is a security feature which is used when you change a password or add an external login to your account.",1620]]},{"word":"while","context":[["while (true)",60921],["while (reader.Read())",15292],["while (true) {",8967],["while (enumerator.MoveNext())",4629],["} while (true);",4065],["while(true)",3872],["while (false);",3019],["while ((tag = input.ReadTag()) != 0) {",2932],["while (input.ReadTag(out tag, out field_name)) {",2854],["while (dr.Read())",2614]]},{"word":"width","context":[["/// <param name=\"width\"></param>",3187],["Width = width;",2344],["/// <param name=\"width\">The width.</param>",1702],["/// <param name=\"width\">The width.</param>",1702],["this.width = width;",1583],["this.width = width;",1583],["for (int x = 0; x < width; x++)",1480],["this.Width = width;",1404],["/// <param name=\"width\">",1146],["return width;",1068]]},{"word":"will","context":[["/// Headers that will be added to request.",13974],["/// The headers that will be added to request.",12749],["//     Manual changes to this file will be overwritten if the code is regenerated.",10815],["// and \"{Major}.{Minor}.{Build}.*\" will update just the revision.",8393],["// The form \"{Major}.{Minor}.*\" will automatically update the build and revision,",8385],["//    Manual changes to this file will be overwritten if the code is regenerated.",5316],["/// without knowing whether the application will be terminated or resumed with the contents",5228],["// **NOTE** This file was generated by a tool and any changes will be overwritten.",4756],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["///<para> - byte[], no deserialization, but the response stream will be closed </para>",4536]]},{"word":"window","context":[["// Ensure the current window is active",5272],["// just ensure that the window is active",5270],["window.Show();",1590],["// method you should instantiate the window, load the UI into it and then make the window",1457],["// method you should instantiate the window, load the UI into it and then make the window",1457],["if (window == null)",1010],["UIWindow window;",835],["return window;",833],["window[++scan] == window[++match] &&",741],["window[++scan] == window[++match] &&",741]]},{"word":"with","context":[["// associated with an assembly.",263598],["/// the contents of this method with the code editor.",72166],["// with the /str option, or rebuild your VS project.",38199],["* Redistribution and use in source and binary forms, with or without",16512],["﻿// Decompiled with JetBrains decompiler",15035],["*       documentation and/or other materials provided with the distribution.",13352],["// Redistribution and use in source and binary forms, with or without",12613],["//   and/or other materials provided with the distribution.",8001],["* distributed with this work for additional information",7049],["// Redistribution and use in source and binary forms, with or without modification,",6525]]},{"word":"without","context":[["* Redistribution and use in source and binary forms, with or without",16512],["// Redistribution and use in source and binary forms, with or without",12613],["// Disable the \"extern without DllImport\" warning.",6739],["// Redistribution and use in source and binary forms, with or without modification,",6525],["Redistribution and use in source and binary forms, with or without",6264],["/// without knowing whether the application will be terminated or resumed with the contents",5228],["* Redistribution and use in source and binary forms, with or without modification,",2186],["(collectively \"the Data\"), to deal in the Data without restriction,",1940],["Redistribution and use in source and binary forms, with or without modification,",1405],["* - Redistribution and use in source and binary forms, with or without",1149]]},{"word":"work","context":[["* distributed with this work for additional information",7049],["// distributed with this work for additional information",5129],["// making a combined work based on this library.  Thus, the terms and",2108],["//delete this line when starting work on this unit test",623],["// See the NOTICE file distributed with this work for additional information",598],["if (work == null)",574],["* agreements. See the NOTICE file distributed with this work",550],["/// work size value.</param>",502],["/// but should be N*blocksize. The blocksize is machine dependent. On exit, work[0] contains the optimal",492],["throw new ArgumentNullException(\"work\");",485]]},{"word":"write","context":[["* along with this program; see the file COPYING.  If not, write to",5076],["/// write",2380],["//You can use the following additional attributes as you write your tests:",2077],["// You can write your own provider and plug it in here.",1732],["// You can use the following additional attributes as you write your tests:",1434],["\"Failed to generate the sample for media type '{0}'. Cannot use formatter '{1}' to write type '{2}'.\",",1432],["/// <param name=\"value\">The value to write.</param>",876],["/// <param name=\"writer\">The <see cref=\"JsonWriter\"/> to write to.</param>",793],["if (write)",575],["/// <param name=\"writer\">A <see cref=\"JsonWriter\"/> into which this method will write.</param>",527]]},{"word":"writer","context":[["base.Serialize( writer );",25497],["public override void Serialize( GenericWriter writer )",25467],["base.Serialize(writer);",20632],["public override void Serialize(GenericWriter writer)",19558],["writer.WriteEndElement();",15989],["writer.Write( (int) 0 ); // version",13339],["writer.Flush();",8400],["writer.Close();",8381],["writer.Write((int)0); // version",8055],["writer.WriteLine();",5952]]},{"word":"www","context":[["// http://www.clearcanvas.ca",10457],["// DotNetNuke® - http://www.dotnetnuke.com",7713],["// http://www.ClearCanvas.ca",4598],["* @author    : Ext.NET, Inc. http://www.ext.net/",3882],["* http://www.yetanotherforum.net/",3427],["/* This file is part of the db4o object database http://www.db4o.com",3254],["// <http://www.mysql.com/about/legal/licensing/foss-exception.html>.",2670],["any1.Namespace = \"http://www.w3.org/2001/XMLSchema\";",2589],["// For more information visit http://www.allors.com/legal",2489],["﻿/*  Company :       Nequeo Pty Ltd, http://www.nequeo.com.au/",2280]]},{"word":"x","context":[["return x;",9646],["result.RequestId = httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",8581],["if (httpResponse.Headers.Contains(\"x-ms-request-id\"))",8581],["if (_httpResponse.Headers.Contains(\"x-ms-request-id\"))",8343],["/// <param name=\"x\"></param>",6290],["int x = 0;",5786],["_result.RequestId = _httpResponse.Headers.GetValues(\"x-ms-request-id\").FirstOrDefault();",4960],["int x;",4269],["X = x;",3769],["/// <param name=\"x\">",3653]]},{"word":"xml","context":[["/// <para xml:lang=\"es\">",2835],["any2.Namespace = \"urn:schemas-microsoft-com:xml-diffgram-v1\";",2589],["var xml = \"books.xml\";",1973],["var xml = \"books.xml\";",1973],["return xml.ToString();",1897],["@\"<?xml version=\"\"1.0\"\"?>",1618],["Utils.XPathNodesetTest(xml, testExpression, expected, startingNodePath: startingNodePath);",1605],["xml.WriteEndElement();",1595],["return xml;",1459],["XDocument xml = XDocument.Parse(str);",1415]]},{"word":"y","context":[["/// <param name=\"y\"></param>",4977],["Y = y;",3600],["this.y = y;",3098],["this.y = y;",3098],["/// <param name=\"y\">",2906],["int x, y;",2545],["return y;",2356],["public int y;",2323],["int y = 0;",2209],["for (int y = 0; y < height; y++)",1868]]},{"word":"yield","context":[["yield break;",23794],["yield return null;",9345],["yield return result[i];",7632],["yield return item;",4711],["yield return i;",1966],["yield return lineBreak();",1892],["yield return",1717],["yield return new WaitForEndOfFrame();",1669],["yield return 1;",1641],["yield return new Options(",1546]]},{"word":"you","context":[["// to COM components.  If you need to access a type in this assembly from",239070],["// You can specify all the values or you can default the Build and Revision Numbers",211421],["// You can specify all the values or you can default the Revision and Build Numbers",31080],["//inside a <PropertyGroup>.  For example, if you are using US english",8472],["* form is not reasonably feasible for technical reasons, you must include the words \"Powered by ONLYOFFICE\"",7255],["* in every copy of the program you distribute.",7255],["// ready for production, use the build tool at http://modernizr.com to pick only the tests you need.",5707],["// Use the development version of Modernizr to develop with and learn from. Then, when you're",5704],["///<para> - T, an object you own that the elasticsearch response will be deserialized to </para>",4536],["ShareX - A program that allows you to take screenshots and share any file type",3917]]},{"word":"your","context":[["// To add or remove a member, edit your .ResX file then rerun ResGen",38524],["// with the /str option, or rebuild your VS project.",38199],["// Change them to the values specific to your project.",8525],["//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file",8485],["//in your source files, set the <UICulture> to en-US.  Then uncomment",8482],["///<para> - Stream, no deserialization, response stream is your responsibility </para>",4536],["///<para> - Stream, no deserialization, response stream is your responsibility</para>",2224],["// Plug in your email service here to send an email.",2220],["// this exception to your version of the library, but you are not",2109],["// terms of your choice, provided that you also meet, for each linked",2109]]},{"word":"z","context":[["return z;",1927],["Z = z;",1360],["/// <param name=\"z\"></param>",1192],["/// <param name=\"z\">",1115],["this.z = z;",987],["this.z = z;",987],["public  Single z;",878],["int z;",630],["case 'z':",615],["if (directionToGo == 0) x++; else if (directionToGo == 1) x--; else if (directionToGo == 2) z++; else z--;",611]]},{"word":"zero","context":[["return Vector3.zero;",1129],["/// <param name=\"format\">A String containing zero or more format items</param>",912],["///\t\tand have an identity field equal to zero.",668],["/// if this instance is less than value, zero if this instance is equal to value, or greater than zero",416],["/// if this instance is less than value, zero if this instance is equal to value, or greater than zero",416],["/// A signed number indicating the relative values of this instance and value. Returns less than zero",413],["/// - Add 1 cycle if low bye of Direct Page (zero page) register is other than zero (DL&lt;&gt;0).",405],["/// - Add 1 cycle if low bye of Direct Page (zero page) register is other than zero (DL&lt;&gt;0).",405],["/// <param name=\"index\">The zero-based index of the item to remove.</param>",390],["return Vector2.zero;",385]]},{"word":"~","context":[["bundles.Add(new ScriptBundle(\"~/bundles/modernizr\").Include(",6562],["\"~/Scripts/modernizr-*\"));",6495],["bundles.Add(new ScriptBundle(\"~/bundles/jquery\").Include(",6276],["\"~/Scripts/jquery-{version}.js\"));",5725],["bundles.Add(new StyleBundle(\"~/Content/css\").Include(",5132],["bundles.Add(new ScriptBundle(\"~/bundles/bootstrap\").Include(",4958],["bundles.Add(new ScriptBundle(\"~/bundles/jqueryval\").Include(",4898],["\"~/Content/bootstrap.css\",",4815],["\"~/Scripts/bootstrap.js\",",4773],["\"~/Scripts/jquery.validate*\"));",4773]]},{"word":"﻿","context":[["﻿/*",120660],["﻿//------------------------------------------------------------------------------",116017],["﻿",43407],["﻿//",30437],["﻿// ----------------------------------------------------------------------------------",22243],["﻿//-----------------------------------------------------------------------",19557],["﻿// Decompiled with JetBrains decompiler",15035],["﻿// -----------------------------------------------------------------------",9208],["﻿/**",9017],["﻿//---------------------------------------------------------------------",5975]]},{"word":"﻿namespace","context":[["﻿namespace UnityEditor",920],["﻿namespace Grove.CardsLibrary",691],["﻿namespace System.Web.Mvc {",646],["﻿namespace System",608],["﻿namespace UnityEngine",586],["﻿namespace Grove.Tests.Cards",583],["﻿namespace WindowsFormsApplication1",583],["﻿namespace Grove.Cards",459],["﻿namespace AngleSharp.Dom.Css",456],["﻿namespace MBINCompiler.Models.Structs",430]]},{"word":"﻿using","context":[["﻿using System;",1239682],["﻿using System.Reflection;",271622],["﻿using UnityEngine;",92024],["﻿using System.Collections.Generic;",86339],["﻿using System.Linq;",15264],["﻿using Newtonsoft.Json;",14737],["﻿using System.Web;",14346],["﻿using System.IO;",11245],["﻿using NUnit.Framework;",9534],["﻿using System.Web.Mvc;",9159]]}]